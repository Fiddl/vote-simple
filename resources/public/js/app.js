if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.170";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.into_array;
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__28122__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__28122 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__28123__i = 0, G__28123__a = new Array(arguments.length - 0);
        while (G__28123__i < G__28123__a.length) {
          G__28123__a[G__28123__i] = arguments[G__28123__i + 0];
          ++G__28123__i;
        }
        args = new cljs.core.IndexedSeq(G__28123__a, 0);
      }
      return G__28122__delegate.call(this, args);
    };
    G__28122.cljs$lang$maxFixedArity = 0;
    G__28122.cljs$lang$applyTo = function(arglist__28124) {
      var args = cljs.core.seq(arglist__28124);
      return G__28122__delegate(args);
    };
    G__28122.cljs$core$IFn$_invoke$arity$variadic = G__28122__delegate;
    return G__28122;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__28125__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__28125 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__28126__i = 0, G__28126__a = new Array(arguments.length - 0);
        while (G__28126__i < G__28126__a.length) {
          G__28126__a[G__28126__i] = arguments[G__28126__i + 0];
          ++G__28126__i;
        }
        args = new cljs.core.IndexedSeq(G__28126__a, 0);
      }
      return G__28125__delegate.call(this, args);
    };
    G__28125.cljs$lang$maxFixedArity = 0;
    G__28125.cljs$lang$applyTo = function(arglist__28127) {
      var args = cljs.core.seq(arglist__28127);
      return G__28125__delegate(args);
    };
    G__28125.cljs$core$IFn$_invoke$arity$variadic = G__28125__delegate;
    return G__28125;
  }();
  return null;
};
cljs.core._STAR_1;
cljs.core._STAR_2;
cljs.core._STAR_3;
cljs.core._STAR_e;
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.instance_QMARK_;
cljs.core.Keyword;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4119__auto__ = ty;
    if (cljs.core.truth_(and__4119__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4119__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args28128 = [];
  var len__5189__auto___28131 = arguments.length;
  var i__5190__auto___28132 = 0;
  while (true) {
    if (i__5190__auto___28132 < len__5189__auto___28131) {
      args28128.push(arguments[i__5190__auto___28132]);
      var G__28133 = i__5190__auto___28132 + 1;
      i__5190__auto___28132 = G__28133;
      continue;
    } else {
    }
    break;
  }
  var G__28130 = args28128.length;
  switch(G__28130) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28128.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5034__auto___28135 = len;
  var i_28136 = 0;
  while (true) {
    if (i_28136 < n__5034__auto___28135) {
      new_arr[i_28136] = arr[i_28136];
      var G__28137 = i_28136 + 1;
      i_28136 = G__28137;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__28138 = i + 1;
      i = G__28138;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.apply;
cljs.core.aget = function cljs$core$aget(var_args) {
  var args28139 = [];
  var len__5189__auto___28148 = arguments.length;
  var i__5190__auto___28149 = 0;
  while (true) {
    if (i__5190__auto___28149 < len__5189__auto___28148) {
      args28139.push(arguments[i__5190__auto___28149]);
      var G__28150 = i__5190__auto___28149 + 1;
      i__5190__auto___28149 = G__28150;
      continue;
    } else {
    }
    break;
  }
  var G__28144 = args28139.length;
  switch(G__28144) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28139.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__28145 = cljs.core.aget;
  var G__28146 = array[i];
  var G__28147 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__28145, G__28146, G__28147) : cljs.core.apply.call(null, G__28145, G__28146, G__28147);
};
cljs.core.aget.cljs$lang$applyTo = function(seq28140) {
  var G__28141 = cljs.core.first(seq28140);
  var seq28140__$1 = cljs.core.next(seq28140);
  var G__28142 = cljs.core.first(seq28140__$1);
  var seq28140__$2 = cljs.core.next(seq28140__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__28141, G__28142, seq28140__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args28152 = [];
  var len__5189__auto___28163 = arguments.length;
  var i__5190__auto___28164 = 0;
  while (true) {
    if (i__5190__auto___28164 < len__5189__auto___28163) {
      args28152.push(arguments[i__5190__auto___28164]);
      var G__28165 = i__5190__auto___28164 + 1;
      i__5190__auto___28164 = G__28165;
      continue;
    } else {
    }
    break;
  }
  var G__28158 = args28152.length;
  switch(G__28158) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28152.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__28159 = cljs.core.aset;
  var G__28160 = array[idx];
  var G__28161 = idx2;
  var G__28162 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__28159, G__28160, G__28161, G__28162) : cljs.core.apply.call(null, G__28159, G__28160, G__28161, G__28162);
};
cljs.core.aset.cljs$lang$applyTo = function(seq28153) {
  var G__28154 = cljs.core.first(seq28153);
  var seq28153__$1 = cljs.core.next(seq28153);
  var G__28155 = cljs.core.first(seq28153__$1);
  var seq28153__$2 = cljs.core.next(seq28153__$1);
  var G__28156 = cljs.core.first(seq28153__$2);
  var seq28153__$3 = cljs.core.next(seq28153__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__28154, G__28155, G__28156, seq28153__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.reduce;
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args28167 = [];
  var len__5189__auto___28173 = arguments.length;
  var i__5190__auto___28174 = 0;
  while (true) {
    if (i__5190__auto___28174 < len__5189__auto___28173) {
      args28167.push(arguments[i__5190__auto___28174]);
      var G__28175 = i__5190__auto___28174 + 1;
      i__5190__auto___28174 = G__28175;
      continue;
    } else {
    }
    break;
  }
  var G__28169 = args28167.length;
  switch(G__28169) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28167.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__28170 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__28171 = [];
  var G__28172 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__28170, G__28171, G__28172) : cljs.core.reduce.call(null, G__28170, G__28171, G__28172);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___28180 = arguments.length;
  var i__5190__auto___28181 = 0;
  while (true) {
    if (i__5190__auto___28181 < len__5189__auto___28180) {
      args__5196__auto__.push(arguments[i__5190__auto___28181]);
      var G__28182 = i__5190__auto___28181 + 1;
      i__5190__auto___28181 = G__28182;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 2 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5197__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq28177) {
  var G__28178 = cljs.core.first(seq28177);
  var seq28177__$1 = cljs.core.next(seq28177);
  var G__28179 = cljs.core.first(seq28177__$1);
  var seq28177__$2 = cljs.core.next(seq28177__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__28178, G__28179, seq28177__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args28183 = [];
  var len__5189__auto___28186 = arguments.length;
  var i__5190__auto___28187 = 0;
  while (true) {
    if (i__5190__auto___28187 < len__5189__auto___28186) {
      args28183.push(arguments[i__5190__auto___28187]);
      var G__28188 = i__5190__auto___28187 + 1;
      i__5190__auto___28187 = G__28188;
      continue;
    } else {
    }
    break;
  }
  var G__28185 = args28183.length;
  switch(G__28185) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28183.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4787__auto__.call(null, this$);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__4787__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4787__auto__.call(null, this$, a);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4787__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4787__auto__.call(null, this$, a, b);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4787__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4787__auto__.call(null, this$, a, b, c);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4787__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4787__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4787__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4787__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4787__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4787__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._invoke[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4787__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4787__auto____$1 = cljs.core._invoke["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4787__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4786__auto__ = value == null ? null : value;
    var m__4787__auto__ = cljs.core._clone[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4787__auto__.call(null, value);
    } else {
      var m__4787__auto____$1 = cljs.core._clone["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__4787__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._count[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._count["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._empty[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._empty["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._conj[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4787__auto__.call(null, coll, o);
    } else {
      var m__4787__auto____$1 = cljs.core._conj["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4787__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args28190 = [];
  var len__5189__auto___28193 = arguments.length;
  var i__5190__auto___28194 = 0;
  while (true) {
    if (i__5190__auto___28194 < len__5189__auto___28193) {
      args28190.push(arguments[i__5190__auto___28194]);
      var G__28195 = i__5190__auto___28194 + 1;
      i__5190__auto___28194 = G__28195;
      continue;
    } else {
    }
    break;
  }
  var G__28192 = args28190.length;
  switch(G__28192) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28190.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._nth[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4787__auto__.call(null, coll, n);
    } else {
      var m__4787__auto____$1 = cljs.core._nth["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4787__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._nth[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4787__auto__.call(null, coll, n, not_found);
    } else {
      var m__4787__auto____$1 = cljs.core._nth["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4787__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._first[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._first["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._rest[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._rest["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._next[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._next["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args28197 = [];
  var len__5189__auto___28200 = arguments.length;
  var i__5190__auto___28201 = 0;
  while (true) {
    if (i__5190__auto___28201 < len__5189__auto___28200) {
      args28197.push(arguments[i__5190__auto___28201]);
      var G__28202 = i__5190__auto___28201 + 1;
      i__5190__auto___28201 = G__28202;
      continue;
    } else {
    }
    break;
  }
  var G__28199 = args28197.length;
  switch(G__28199) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28197.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._lookup[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4787__auto__.call(null, o, k);
    } else {
      var m__4787__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__4787__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._lookup[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4787__auto__.call(null, o, k, not_found);
    } else {
      var m__4787__auto____$1 = cljs.core._lookup["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4787__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4787__auto__.call(null, coll, k);
    } else {
      var m__4787__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4787__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._assoc[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4787__auto__.call(null, coll, k, v);
    } else {
      var m__4787__auto____$1 = cljs.core._assoc["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4787__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._dissoc[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4787__auto__.call(null, coll, k);
    } else {
      var m__4787__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4787__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._key[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._key["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._val[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._val["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._disjoin[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4787__auto__.call(null, coll, v);
    } else {
      var m__4787__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4787__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._peek[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._peek["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._pop[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._pop["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._assoc_n[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4787__auto__.call(null, coll, n, val);
    } else {
      var m__4787__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4787__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._deref[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto__.call(null, o);
    } else {
      var m__4787__auto____$1 = cljs.core._deref["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4787__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__4787__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4787__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._meta[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto__.call(null, o);
    } else {
      var m__4787__auto____$1 = cljs.core._meta["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._with_meta[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4787__auto__.call(null, o, meta);
    } else {
      var m__4787__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4787__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args28204 = [];
  var len__5189__auto___28207 = arguments.length;
  var i__5190__auto___28208 = 0;
  while (true) {
    if (i__5190__auto___28208 < len__5189__auto___28207) {
      args28204.push(arguments[i__5190__auto___28208]);
      var G__28209 = i__5190__auto___28208 + 1;
      i__5190__auto___28208 = G__28209;
      continue;
    } else {
    }
    break;
  }
  var G__28206 = args28204.length;
  switch(G__28206) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28204.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._reduce[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4787__auto__.call(null, coll, f);
    } else {
      var m__4787__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4787__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._reduce[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4787__auto__.call(null, coll, f, start);
    } else {
      var m__4787__auto____$1 = cljs.core._reduce["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4787__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4787__auto__.call(null, coll, f, init);
    } else {
      var m__4787__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4787__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._equiv[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4787__auto__.call(null, o, other);
    } else {
      var m__4787__auto____$1 = cljs.core._equiv["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__4787__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._hash[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto__.call(null, o);
    } else {
      var m__4787__auto____$1 = cljs.core._hash["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._seq[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto__.call(null, o);
    } else {
      var m__4787__auto____$1 = cljs.core._seq["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__4787__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._rseq[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._rseq["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4787__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__4787__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4787__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4787__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__4787__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4787__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._entry_key[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4787__auto__.call(null, coll, entry);
    } else {
      var m__4787__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4787__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._comparator[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._comparator["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4786__auto__ = writer == null ? null : writer;
    var m__4787__auto__ = cljs.core._write[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4787__auto__.call(null, writer, s);
    } else {
      var m__4787__auto____$1 = cljs.core._write["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4787__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4786__auto__ = writer == null ? null : writer;
    var m__4787__auto__ = cljs.core._flush[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4787__auto__.call(null, writer);
    } else {
      var m__4787__auto____$1 = cljs.core._flush["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__4787__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._pr_writer[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4787__auto__.call(null, o, writer, opts);
    } else {
      var m__4787__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4787__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4786__auto__ = d == null ? null : d;
    var m__4787__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__4787__auto__.call(null, d);
    } else {
      var m__4787__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__4787__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._notify_watches[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4787__auto__.call(null, this$, oldval, newval);
    } else {
      var m__4787__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4787__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._add_watch[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4787__auto__.call(null, this$, key, f);
    } else {
      var m__4787__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4787__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core._remove_watch[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4787__auto__.call(null, this$, key);
    } else {
      var m__4787__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4787__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._as_transient[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4787__auto__.call(null, tcoll, val);
    } else {
      var m__4787__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4787__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4787__auto__.call(null, tcoll);
    } else {
      var m__4787__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4787__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4787__auto__.call(null, tcoll, key, val);
    } else {
      var m__4787__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4787__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4787__auto__.call(null, tcoll, key);
    } else {
      var m__4787__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4787__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4787__auto__.call(null, tcoll, n, val);
    } else {
      var m__4787__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4787__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4787__auto__.call(null, tcoll);
    } else {
      var m__4787__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4787__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4786__auto__ = tcoll == null ? null : tcoll;
    var m__4787__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4787__auto__.call(null, tcoll, v);
    } else {
      var m__4787__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4787__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4786__auto__ = x == null ? null : x;
    var m__4787__auto__ = cljs.core._compare[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4787__auto__.call(null, x, y);
    } else {
      var m__4787__auto____$1 = cljs.core._compare["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__4787__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._drop_first[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._chunked_first[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._chunked_next[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4786__auto__ = x == null ? null : x;
    var m__4787__auto__ = cljs.core._name[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto__.call(null, x);
    } else {
      var m__4787__auto____$1 = cljs.core._name["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4786__auto__ = x == null ? null : x;
    var m__4787__auto__ = cljs.core._namespace[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto__.call(null, x);
    } else {
      var m__4787__auto____$1 = cljs.core._namespace["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4787__auto__.call(null, o, new_value);
    } else {
      var m__4787__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4787__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args28211 = [];
  var len__5189__auto___28214 = arguments.length;
  var i__5190__auto___28215 = 0;
  while (true) {
    if (i__5190__auto___28215 < len__5189__auto___28214) {
      args28211.push(arguments[i__5190__auto___28215]);
      var G__28216 = i__5190__auto___28215 + 1;
      i__5190__auto___28215 = G__28216;
      continue;
    } else {
    }
    break;
  }
  var G__28213 = args28211.length;
  switch(G__28213) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28211.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4787__auto__.call(null, o, f);
    } else {
      var m__4787__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__4787__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4787__auto__.call(null, o, f, a);
    } else {
      var m__4787__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4787__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4787__auto__.call(null, o, f, a, b);
    } else {
      var m__4787__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4787__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4787__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4787__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4787__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4786__auto__ = o == null ? null : o;
    var m__4787__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4787__auto__.call(null, o, new_value);
    } else {
      var m__4787__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4787__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4786__auto__ = coll == null ? null : coll;
    var m__4787__auto__ = cljs.core._iterator[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto__.call(null, coll);
    } else {
      var m__4787__auto____$1 = cljs.core._iterator["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__4787__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__28218 = i + 2;
        var G__28219 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__28218;
        h1 = G__28219;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.list;
cljs.core.Symbol;
cljs.core._EQ_;
cljs.core.compare;
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__28222 = i + 1;
          var G__28223 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__28222;
          hash = G__28223;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = cljs.core.not(a.ns);
      if (and__4119__auto__) {
        return b.ns;
      } else {
        return and__4119__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__28236 = a.ns;
            var G__28237 = b.ns;
            return goog.array.defaultCompare(G__28236, G__28237);
          }();
          if (0 === nsc) {
            var G__28238 = a.name;
            var G__28239 = b.name;
            return goog.array.defaultCompare(G__28238, G__28239);
          } else {
            return nsc;
          }
        }
      } else {
        var G__28240 = a.name;
        var G__28241 = b.name;
        return goog.array.defaultCompare(G__28240, G__28241);
      }
    }
  }
};
cljs.core.get;
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__28243 = null;
  var G__28243__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__28243__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__28243 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__28243__2.call(this, self__, coll);
      case 3:
        return G__28243__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28243.cljs$core$IFn$_invoke$arity$2 = G__28243__2;
  G__28243.cljs$core$IFn$_invoke$arity$3 = G__28243__3;
  return G__28243;
}();
cljs.core.Symbol.prototype.apply = function(self__, args28242) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args28242)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4566__auto__ = self__._hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args28244 = [];
  var len__5189__auto___28247 = arguments.length;
  var i__5190__auto___28248 = 0;
  while (true) {
    if (i__5190__auto___28248 < len__5189__auto___28247) {
      args28244.push(arguments[i__5190__auto___28248]);
      var G__28249 = i__5190__auto___28248 + 1;
      i__5190__auto___28248 = G__28249;
      continue;
    } else {
    }
    break;
  }
  var G__28246 = args28244.length;
  switch(G__28246) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28244.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__28252 = this$__$1.sym;
    var G__28253 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__28252, G__28253) : cljs.core._EQ_.call(null, G__28252, G__28253);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__28298 = null;
  var G__28298__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__28298__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__28298__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__28298__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__28298__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__28298__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__28298__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__28298__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__28298__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__28298__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__28298__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__28298__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__28298__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__28298__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__28298__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__28298__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__28298__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__28298__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__28298__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__28298__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__28298__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__28298__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__28254 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__28255 = a;
    var G__28256 = b;
    var G__28257 = c;
    var G__28258 = d;
    var G__28259 = e;
    var G__28260 = f;
    var G__28261 = g;
    var G__28262 = h;
    var G__28263 = i;
    var G__28264 = j;
    var G__28265 = k;
    var G__28266 = l;
    var G__28267 = m;
    var G__28268 = n;
    var G__28269 = o;
    var G__28270 = p;
    var G__28271 = q;
    var G__28272 = r;
    var G__28273 = s;
    var G__28274 = t;
    var G__28275 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28254, G__28255, G__28256, G__28257, G__28258, G__28259, G__28260, G__28261, G__28262, G__28263, G__28264, G__28265, G__28266, G__28267, G__28268, G__28269, G__28270, G__28271, G__28272, G__28273, G__28274, G__28275) : cljs.core.apply.call(null, G__28254, G__28255, G__28256, G__28257, G__28258, G__28259, G__28260, G__28261, G__28262, G__28263, G__28264, G__28265, G__28266, G__28267, G__28268, 
    G__28269, G__28270, G__28271, G__28272, G__28273, G__28274, G__28275);
  };
  G__28298 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__28298__1.call(this, self__);
      case 2:
        return G__28298__2.call(this, self__, a);
      case 3:
        return G__28298__3.call(this, self__, a, b);
      case 4:
        return G__28298__4.call(this, self__, a, b, c);
      case 5:
        return G__28298__5.call(this, self__, a, b, c, d);
      case 6:
        return G__28298__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__28298__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__28298__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__28298__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__28298__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__28298__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__28298__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__28298__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__28298__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__28298__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__28298__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__28298__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__28298__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__28298__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__28298__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__28298__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__28298__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28298.cljs$core$IFn$_invoke$arity$1 = G__28298__1;
  G__28298.cljs$core$IFn$_invoke$arity$2 = G__28298__2;
  G__28298.cljs$core$IFn$_invoke$arity$3 = G__28298__3;
  G__28298.cljs$core$IFn$_invoke$arity$4 = G__28298__4;
  G__28298.cljs$core$IFn$_invoke$arity$5 = G__28298__5;
  G__28298.cljs$core$IFn$_invoke$arity$6 = G__28298__6;
  G__28298.cljs$core$IFn$_invoke$arity$7 = G__28298__7;
  G__28298.cljs$core$IFn$_invoke$arity$8 = G__28298__8;
  G__28298.cljs$core$IFn$_invoke$arity$9 = G__28298__9;
  G__28298.cljs$core$IFn$_invoke$arity$10 = G__28298__10;
  G__28298.cljs$core$IFn$_invoke$arity$11 = G__28298__11;
  G__28298.cljs$core$IFn$_invoke$arity$12 = G__28298__12;
  G__28298.cljs$core$IFn$_invoke$arity$13 = G__28298__13;
  G__28298.cljs$core$IFn$_invoke$arity$14 = G__28298__14;
  G__28298.cljs$core$IFn$_invoke$arity$15 = G__28298__15;
  G__28298.cljs$core$IFn$_invoke$arity$16 = G__28298__16;
  G__28298.cljs$core$IFn$_invoke$arity$17 = G__28298__17;
  G__28298.cljs$core$IFn$_invoke$arity$18 = G__28298__18;
  G__28298.cljs$core$IFn$_invoke$arity$19 = G__28298__19;
  G__28298.cljs$core$IFn$_invoke$arity$20 = G__28298__20;
  G__28298.cljs$core$IFn$_invoke$arity$21 = G__28298__21;
  G__28298.cljs$core$IFn$_invoke$arity$22 = G__28298__22;
  return G__28298;
}();
cljs.core.Var.prototype.apply = function(self__, args28251) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args28251)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__28276 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__28277 = a;
  var G__28278 = b;
  var G__28279 = c;
  var G__28280 = d;
  var G__28281 = e;
  var G__28282 = f;
  var G__28283 = g;
  var G__28284 = h;
  var G__28285 = i;
  var G__28286 = j;
  var G__28287 = k;
  var G__28288 = l;
  var G__28289 = m;
  var G__28290 = n;
  var G__28291 = o;
  var G__28292 = p;
  var G__28293 = q;
  var G__28294 = r;
  var G__28295 = s;
  var G__28296 = t;
  var G__28297 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__28276, G__28277, G__28278, G__28279, G__28280, G__28281, G__28282, G__28283, G__28284, G__28285, G__28286, G__28287, G__28288, G__28289, G__28290, G__28291, G__28292, G__28293, G__28294, G__28295, G__28296, G__28297) : cljs.core.apply.call(null, G__28276, G__28277, G__28278, G__28279, G__28280, G__28281, G__28282, G__28283, G__28284, G__28285, G__28286, G__28287, G__28288, G__28289, G__28290, 
  G__28291, G__28292, G__28293, G__28294, G__28295, G__28296, G__28297);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.array_seq;
cljs.core.prim_seq;
cljs.core.IndexedSeq;
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args28311 = [];
  var len__5189__auto___28317 = arguments.length;
  var i__5190__auto___28318 = 0;
  while (true) {
    if (i__5190__auto___28318 < len__5189__auto___28317) {
      args28311.push(arguments[i__5190__auto___28318]);
      var G__28319 = i__5190__auto___28318 + 1;
      i__5190__auto___28318 = G__28319;
      continue;
    } else {
    }
    break;
  }
  var G__28316 = args28311.length;
  switch(G__28316) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28311.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__28321 = y;
        var G__28322 = cljs.core.first(more);
        var G__28323 = cljs.core.next(more);
        x = G__28321;
        y = G__28322;
        more = G__28323;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq28312) {
  var G__28313 = cljs.core.first(seq28312);
  var seq28312__$1 = cljs.core.next(seq28312);
  var G__28314 = cljs.core.first(seq28312__$1);
  var seq28312__$2 = cljs.core.next(seq28312__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__28313, G__28314, seq28312__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.es6_iterator_seq;
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__28324 = n + 1;
      var G__28325 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__28326 = cljs.core.next(coll__$1);
      n = G__28324;
      hash_code = G__28325;
      coll__$1 = G__28326;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__28327 = n + 1;
      var G__28328 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__28329 = cljs.core.next(coll__$1);
      n = G__28327;
      hash_code = G__28328;
      coll__$1 = G__28329;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.hash_map;
cljs.core.list;
cljs.core.equiv_sequential;
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__28330 = this$__$1.valueOf();
    var G__28331 = other.valueOf();
    return goog.array.defaultCompare(G__28330, G__28331);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.with_meta;
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.deref;
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args28332 = [];
  var len__5189__auto___28341 = arguments.length;
  var i__5190__auto___28342 = 0;
  while (true) {
    if (i__5190__auto___28342 < len__5189__auto___28341) {
      args28332.push(arguments[i__5190__auto___28342]);
      var G__28343 = i__5190__auto___28342 + 1;
      i__5190__auto___28342 = G__28343;
      continue;
    } else {
    }
    break;
  }
  var G__28334 = args28332.length;
  switch(G__28334) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28332.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__28335 = val;
          var G__28336 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28335, G__28336) : f.call(null, G__28335, G__28336);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__28345 = nval;
          var G__28346 = n + 1;
          val = G__28345;
          n = G__28346;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__28337 = val__$1;
        var G__28338 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28337, G__28338) : f.call(null, G__28337, G__28338);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__28347 = nval;
        var G__28348 = n + 1;
        val__$1 = G__28347;
        n = G__28348;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__28339 = val__$1;
        var G__28340 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28339, G__28340) : f.call(null, G__28339, G__28340);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__28349 = nval;
        var G__28350 = n + 1;
        val__$1 = G__28349;
        n = G__28350;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args28351 = [];
  var len__5189__auto___28360 = arguments.length;
  var i__5190__auto___28361 = 0;
  while (true) {
    if (i__5190__auto___28361 < len__5189__auto___28360) {
      args28351.push(arguments[i__5190__auto___28361]);
      var G__28362 = i__5190__auto___28361 + 1;
      i__5190__auto___28361 = G__28362;
      continue;
    } else {
    }
    break;
  }
  var G__28353 = args28351.length;
  switch(G__28353) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28351.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__28354 = val;
          var G__28355 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28354, G__28355) : f.call(null, G__28354, G__28355);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__28364 = nval;
          var G__28365 = n + 1;
          val = G__28364;
          n = G__28365;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__28356 = val__$1;
        var G__28357 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28356, G__28357) : f.call(null, G__28356, G__28357);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__28366 = nval;
        var G__28367 = n + 1;
        val__$1 = G__28366;
        n = G__28367;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__28358 = val__$1;
        var G__28359 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28358, G__28359) : f.call(null, G__28358, G__28359);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__28368 = nval;
        var G__28369 = n + 1;
        val__$1 = G__28368;
        n = G__28369;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.hash_coll;
cljs.core.cons;
cljs.core.RSeq;
cljs.core.List;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4462__auto__ = 0;
  var y__4463__auto__ = self__.arr.length - self__.i;
  return x__4462__auto__ > y__4463__auto__ ? x__4462__auto__ : y__4463__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args28374 = [];
  var len__5189__auto___28377 = arguments.length;
  var i__5190__auto___28378 = 0;
  while (true) {
    if (i__5190__auto___28378 < len__5189__auto___28377) {
      args28374.push(arguments[i__5190__auto___28378]);
      var G__28379 = i__5190__auto___28378 + 1;
      i__5190__auto___28378 = G__28379;
      continue;
    } else {
    }
    break;
  }
  var G__28376 = args28374.length;
  switch(G__28376) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28374.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args28381 = [];
  var len__5189__auto___28384 = arguments.length;
  var i__5190__auto___28385 = 0;
  while (true) {
    if (i__5190__auto___28385 < len__5189__auto___28384) {
      args28381.push(arguments[i__5190__auto___28385]);
      var G__28386 = i__5190__auto___28385 + 1;
      i__5190__auto___28385 = G__28386;
      continue;
    } else {
    }
    break;
  }
  var G__28383 = args28381.length;
  switch(G__28383) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28381.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.with_meta;
cljs.core.seq_reduce;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__28388 = cljs.core.List.EMPTY;
  var G__28389 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__28388, G__28389) : cljs.core.with_meta.call(null, G__28388, G__28389);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__28390 = sn;
      s = G__28390;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args28391 = [];
  var len__5189__auto___28397 = arguments.length;
  var i__5190__auto___28398 = 0;
  while (true) {
    if (i__5190__auto___28398 < len__5189__auto___28397) {
      args28391.push(arguments[i__5190__auto___28398]);
      var G__28399 = i__5190__auto___28398 + 1;
      i__5190__auto___28398 = G__28399;
      continue;
    } else {
    }
    break;
  }
  var G__28396 = args28391.length;
  switch(G__28396) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28391.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__28401 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__28402 = cljs.core.first(xs);
      var G__28403 = cljs.core.next(xs);
      coll = G__28401;
      x = G__28402;
      xs = G__28403;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq28392) {
  var G__28393 = cljs.core.first(seq28392);
  var seq28392__$1 = cljs.core.next(seq28392);
  var G__28394 = cljs.core.first(seq28392__$1);
  var seq28392__$2 = cljs.core.next(seq28392__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__28393, G__28394, seq28392__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__28404 = cljs.core.next(s);
      var G__28405 = acc + 1;
      s = G__28404;
      acc = G__28405;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args28410 = [];
  var len__5189__auto___28413 = arguments.length;
  var i__5190__auto___28414 = 0;
  while (true) {
    if (i__5190__auto___28414 < len__5189__auto___28413) {
      args28410.push(arguments[i__5190__auto___28414]);
      var G__28415 = i__5190__auto___28414 + 1;
      i__5190__auto___28414 = G__28415;
      continue;
    } else {
    }
    break;
  }
  var G__28412 = args28410.length;
  switch(G__28412) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28410.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__28417 = cljs.core.next(coll);
            var G__28418 = n - 1;
            coll = G__28417;
            n = G__28418;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__28419 = cljs.core.next(coll);
            var G__28420 = n - 1;
            var G__28421 = not_found;
            coll = G__28419;
            n = G__28420;
            not_found = G__28421;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args28422 = [];
  var len__5189__auto___28429 = arguments.length;
  var i__5190__auto___28430 = 0;
  while (true) {
    if (i__5190__auto___28430 < len__5189__auto___28429) {
      args28422.push(arguments[i__5190__auto___28430]);
      var G__28431 = i__5190__auto___28430 + 1;
      i__5190__auto___28430 = G__28431;
      continue;
    } else {
    }
    break;
  }
  var G__28424 = args28422.length;
  switch(G__28424) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28422.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__28433 = n__$1 - 1;
      var G__28434 = cljs.core.rest(xs);
      n__$1 = G__28433;
      xs = G__28434;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args28435 = [];
  var len__5189__auto___28440 = arguments.length;
  var i__5190__auto___28441 = 0;
  while (true) {
    if (i__5190__auto___28441 < len__5189__auto___28440) {
      args28435.push(arguments[i__5190__auto___28441]);
      var G__28442 = i__5190__auto___28441 + 1;
      i__5190__auto___28441 = G__28442;
      continue;
    } else {
    }
    break;
  }
  var G__28437 = args28435.length;
  switch(G__28437) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28435.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.PersistentHashMap;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args28444 = [];
  var len__5189__auto___28451 = arguments.length;
  var i__5190__auto___28452 = 0;
  while (true) {
    if (i__5190__auto___28452 < len__5189__auto___28451) {
      args28444.push(arguments[i__5190__auto___28452]);
      var G__28453 = i__5190__auto___28452 + 1;
      i__5190__auto___28452 = G__28453;
      continue;
    } else {
    }
    break;
  }
  var G__28450 = args28444.length;
  switch(G__28450) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28444.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__28455 = ret;
      var G__28456 = cljs.core.first(kvs);
      var G__28457 = cljs.core.second(kvs);
      var G__28458 = cljs.core.nnext(kvs);
      coll = G__28455;
      k = G__28456;
      v = G__28457;
      kvs = G__28458;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq28445) {
  var G__28446 = cljs.core.first(seq28445);
  var seq28445__$1 = cljs.core.next(seq28445);
  var G__28447 = cljs.core.first(seq28445__$1);
  var seq28445__$2 = cljs.core.next(seq28445__$1);
  var G__28448 = cljs.core.first(seq28445__$2);
  var seq28445__$3 = cljs.core.next(seq28445__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__28446, G__28447, G__28448, seq28445__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args28459 = [];
  var len__5189__auto___28465 = arguments.length;
  var i__5190__auto___28466 = 0;
  while (true) {
    if (i__5190__auto___28466 < len__5189__auto___28465) {
      args28459.push(arguments[i__5190__auto___28466]);
      var G__28467 = i__5190__auto___28466 + 1;
      i__5190__auto___28466 = G__28467;
      continue;
    } else {
    }
    break;
  }
  var G__28464 = args28459.length;
  switch(G__28464) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28459.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__28469 = ret;
        var G__28470 = cljs.core.first(ks);
        var G__28471 = cljs.core.next(ks);
        coll = G__28469;
        k = G__28470;
        ks = G__28471;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq28460) {
  var G__28461 = cljs.core.first(seq28460);
  var seq28460__$1 = cljs.core.next(seq28460);
  var G__28462 = cljs.core.first(seq28460__$1);
  var seq28460__$2 = cljs.core.next(seq28460__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__28461, G__28462, seq28460__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4131__auto__ = goog.isFunction(f);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__28477 = null;
  var G__28477__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__28477__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__28477__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__28477__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__28477__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__28477__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__28477__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__28477__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__28477__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__28477__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__28477__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__28477__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__28477__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__28477__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__28477__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__28477__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__28477__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__28477__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__28477__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__28477__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__28477__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__28477__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__28477 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__28477__1.call(this, self__);
      case 2:
        return G__28477__2.call(this, self__, a);
      case 3:
        return G__28477__3.call(this, self__, a, b);
      case 4:
        return G__28477__4.call(this, self__, a, b, c);
      case 5:
        return G__28477__5.call(this, self__, a, b, c, d);
      case 6:
        return G__28477__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__28477__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__28477__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__28477__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__28477__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__28477__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__28477__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__28477__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__28477__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__28477__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__28477__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__28477__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__28477__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__28477__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__28477__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__28477__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__28477__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28477.cljs$core$IFn$_invoke$arity$1 = G__28477__1;
  G__28477.cljs$core$IFn$_invoke$arity$2 = G__28477__2;
  G__28477.cljs$core$IFn$_invoke$arity$3 = G__28477__3;
  G__28477.cljs$core$IFn$_invoke$arity$4 = G__28477__4;
  G__28477.cljs$core$IFn$_invoke$arity$5 = G__28477__5;
  G__28477.cljs$core$IFn$_invoke$arity$6 = G__28477__6;
  G__28477.cljs$core$IFn$_invoke$arity$7 = G__28477__7;
  G__28477.cljs$core$IFn$_invoke$arity$8 = G__28477__8;
  G__28477.cljs$core$IFn$_invoke$arity$9 = G__28477__9;
  G__28477.cljs$core$IFn$_invoke$arity$10 = G__28477__10;
  G__28477.cljs$core$IFn$_invoke$arity$11 = G__28477__11;
  G__28477.cljs$core$IFn$_invoke$arity$12 = G__28477__12;
  G__28477.cljs$core$IFn$_invoke$arity$13 = G__28477__13;
  G__28477.cljs$core$IFn$_invoke$arity$14 = G__28477__14;
  G__28477.cljs$core$IFn$_invoke$arity$15 = G__28477__15;
  G__28477.cljs$core$IFn$_invoke$arity$16 = G__28477__16;
  G__28477.cljs$core$IFn$_invoke$arity$17 = G__28477__17;
  G__28477.cljs$core$IFn$_invoke$arity$18 = G__28477__18;
  G__28477.cljs$core$IFn$_invoke$arity$19 = G__28477__19;
  G__28477.cljs$core$IFn$_invoke$arity$20 = G__28477__20;
  G__28477.cljs$core$IFn$_invoke$arity$21 = G__28477__21;
  G__28477.cljs$core$IFn$_invoke$arity$22 = G__28477__22;
  return G__28477;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args28476) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args28476)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4119__auto__ = !(o == null);
    if (and__4119__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4119__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args28482 = [];
  var len__5189__auto___28488 = arguments.length;
  var i__5190__auto___28489 = 0;
  while (true) {
    if (i__5190__auto___28489 < len__5189__auto___28488) {
      args28482.push(arguments[i__5190__auto___28489]);
      var G__28490 = i__5190__auto___28489 + 1;
      i__5190__auto___28489 = G__28490;
      continue;
    } else {
    }
    break;
  }
  var G__28487 = args28482.length;
  switch(G__28487) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28482.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__28492 = ret;
        var G__28493 = cljs.core.first(ks);
        var G__28494 = cljs.core.next(ks);
        coll = G__28492;
        k = G__28493;
        ks = G__28494;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq28483) {
  var G__28484 = cljs.core.first(seq28483);
  var seq28483__$1 = cljs.core.next(seq28483);
  var G__28485 = cljs.core.first(seq28483__$1);
  var seq28483__$2 = cljs.core.next(seq28483__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__28484, G__28485, seq28483__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.ChunkedCons;
cljs.core.ChunkedSeq;
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args28515 = [];
  var len__5189__auto___28521 = arguments.length;
  var i__5190__auto___28522 = 0;
  while (true) {
    if (i__5190__auto___28522 < len__5189__auto___28521) {
      args28515.push(arguments[i__5190__auto___28522]);
      var G__28523 = i__5190__auto___28522 + 1;
      i__5190__auto___28522 = G__28523;
      continue;
    } else {
    }
    break;
  }
  var G__28518 = args28515.length;
  switch(G__28518) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28515.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5208__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq28516) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28516));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__28527_28529 = obj;
  var G__28528_28530 = function(G__28527_28529, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__28527_28529, keys);
  goog.object.forEach(G__28527_28529, G__28528_28530);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__28531 = i__$1 + 1;
      var G__28532 = j__$1 + 1;
      var G__28533 = len__$1 - 1;
      i__$1 = G__28531;
      j__$1 = G__28532;
      len__$1 = G__28533;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__28534 = i__$1 - 1;
      var G__28535 = j__$1 - 1;
      var G__28536 = len__$1 - 1;
      i__$1 = G__28534;
      j__$1 = G__28535;
      len__$1 = G__28536;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4131__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args28547 = [];
  var len__5189__auto___28553 = arguments.length;
  var i__5190__auto___28554 = 0;
  while (true) {
    if (i__5190__auto___28554 < len__5189__auto___28553) {
      args28547.push(arguments[i__5190__auto___28554]);
      var G__28555 = i__5190__auto___28554 + 1;
      i__5190__auto___28554 = G__28555;
      continue;
    } else {
    }
    break;
  }
  var G__28552 = args28547.length;
  switch(G__28552) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28547.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__28557 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__28558 = etc;
          s = G__28557;
          xs = G__28558;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq28548) {
  var G__28549 = cljs.core.first(seq28548);
  var seq28548__$1 = cljs.core.next(seq28548);
  var G__28550 = cljs.core.first(seq28548__$1);
  var seq28548__$2 = cljs.core.next(seq28548__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__28549, G__28550, seq28548__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args28561 = [];
  var len__5189__auto___28564 = arguments.length;
  var i__5190__auto___28565 = 0;
  while (true) {
    if (i__5190__auto___28565 < len__5189__auto___28564) {
      args28561.push(arguments[i__5190__auto___28565]);
      var G__28566 = i__5190__auto___28565 + 1;
      i__5190__auto___28565 = G__28566;
      continue;
    } else {
    }
    break;
  }
  var G__28563 = args28561.length;
  switch(G__28563) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28561.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__28568 = xs;
      var G__28569 = ys;
      var G__28570 = len;
      var G__28571 = n + 1;
      xs = G__28568;
      ys = G__28569;
      len = G__28570;
      n = G__28571;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.to_array;
cljs.core.sort = function cljs$core$sort(var_args) {
  var args28572 = [];
  var len__5189__auto___28577 = arguments.length;
  var i__5190__auto___28578 = 0;
  while (true) {
    if (i__5190__auto___28578 < len__5189__auto___28577) {
      args28572.push(arguments[i__5190__auto___28578]);
      var G__28579 = i__5190__auto___28578 + 1;
      i__5190__auto___28578 = G__28579;
      continue;
    } else {
    }
    break;
  }
  var G__28574 = args28572.length;
  switch(G__28574) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28572.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__28575_28581 = a;
    var G__28576_28582 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__28575_28581, G__28576_28582);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args28583 = [];
  var len__5189__auto___28586 = arguments.length;
  var i__5190__auto___28587 = 0;
  while (true) {
    if (i__5190__auto___28587 < len__5189__auto___28586) {
      args28583.push(arguments[i__5190__auto___28587]);
      var G__28588 = i__5190__auto___28587 + 1;
      i__5190__auto___28587 = G__28588;
      continue;
    } else {
    }
    break;
  }
  var G__28585 = args28583.length;
  switch(G__28585) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28583.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args28590 = [];
  var len__5189__auto___28598 = arguments.length;
  var i__5190__auto___28599 = 0;
  while (true) {
    if (i__5190__auto___28599 < len__5189__auto___28598) {
      args28590.push(arguments[i__5190__auto___28599]);
      var G__28600 = i__5190__auto___28599 + 1;
      i__5190__auto___28599 = G__28600;
      continue;
    } else {
    }
    break;
  }
  var G__28592 = args28590.length;
  switch(G__28592) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28590.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__28593 = f;
    var G__28594 = cljs.core.first(s);
    var G__28595 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__28593, G__28594, G__28595) : cljs.core.reduce.call(null, G__28593, G__28594, G__28595);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__28596 = val__$1;
        var G__28597 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__28596, G__28597) : f.call(null, G__28596, G__28597);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__28602 = nval;
        var G__28603 = cljs.core.next(coll__$1);
        val__$1 = G__28602;
        coll__$1 = G__28603;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.vec;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args28604 = [];
  var len__5189__auto___28609 = arguments.length;
  var i__5190__auto___28610 = 0;
  while (true) {
    if (i__5190__auto___28610 < len__5189__auto___28609) {
      args28604.push(arguments[i__5190__auto___28610]);
      var G__28611 = i__5190__auto___28610 + 1;
      i__5190__auto___28610 = G__28611;
      continue;
    } else {
    }
    break;
  }
  var G__28606 = args28604.length;
  switch(G__28606) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28604.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args28613 = [];
  var len__5189__auto___28616 = arguments.length;
  var i__5190__auto___28617 = 0;
  while (true) {
    if (i__5190__auto___28617 < len__5189__auto___28616) {
      args28613.push(arguments[i__5190__auto___28617]);
      var G__28618 = i__5190__auto___28617 + 1;
      i__5190__auto___28617 = G__28618;
      continue;
    } else {
    }
    break;
  }
  var G__28615 = args28613.length;
  switch(G__28615) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28613.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__28620 = null;
    var G__28620__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__28620__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__28620__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__28620 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__28620__0.call(this);
        case 1:
          return G__28620__1.call(this, x);
        case 2:
          return G__28620__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__28620.cljs$core$IFn$_invoke$arity$0 = G__28620__0;
    G__28620.cljs$core$IFn$_invoke$arity$1 = G__28620__1;
    G__28620.cljs$core$IFn$_invoke$arity$2 = G__28620__2;
    return G__28620;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args28621 = [];
  var len__5189__auto___28624 = arguments.length;
  var i__5190__auto___28625 = 0;
  while (true) {
    if (i__5190__auto___28625 < len__5189__auto___28624) {
      args28621.push(arguments[i__5190__auto___28625]);
      var G__28626 = i__5190__auto___28625 + 1;
      i__5190__auto___28625 = G__28626;
      continue;
    } else {
    }
    break;
  }
  var G__28623 = args28621.length;
  switch(G__28623) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28621.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args28628 = [];
  var len__5189__auto___28634 = arguments.length;
  var i__5190__auto___28635 = 0;
  while (true) {
    if (i__5190__auto___28635 < len__5189__auto___28634) {
      args28628.push(arguments[i__5190__auto___28635]);
      var G__28636 = i__5190__auto___28635 + 1;
      i__5190__auto___28635 = G__28636;
      continue;
    } else {
    }
    break;
  }
  var G__28633 = args28628.length;
  switch(G__28633) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28628.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq28629) {
  var G__28630 = cljs.core.first(seq28629);
  var seq28629__$1 = cljs.core.next(seq28629);
  var G__28631 = cljs.core.first(seq28629__$1);
  var seq28629__$2 = cljs.core.next(seq28629__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__28630, G__28631, seq28629__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args28638 = [];
  var len__5189__auto___28644 = arguments.length;
  var i__5190__auto___28645 = 0;
  while (true) {
    if (i__5190__auto___28645 < len__5189__auto___28644) {
      args28638.push(arguments[i__5190__auto___28645]);
      var G__28646 = i__5190__auto___28645 + 1;
      i__5190__auto___28645 = G__28646;
      continue;
    } else {
    }
    break;
  }
  var G__28643 = args28638.length;
  switch(G__28643) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28638.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq28639) {
  var G__28640 = cljs.core.first(seq28639);
  var seq28639__$1 = cljs.core.next(seq28639);
  var G__28641 = cljs.core.first(seq28639__$1);
  var seq28639__$2 = cljs.core.next(seq28639__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__28640, G__28641, seq28639__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args28648 = [];
  var len__5189__auto___28654 = arguments.length;
  var i__5190__auto___28655 = 0;
  while (true) {
    if (i__5190__auto___28655 < len__5189__auto___28654) {
      args28648.push(arguments[i__5190__auto___28655]);
      var G__28656 = i__5190__auto___28655 + 1;
      i__5190__auto___28655 = G__28656;
      continue;
    } else {
    }
    break;
  }
  var G__28653 = args28648.length;
  switch(G__28653) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28648.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq28649) {
  var G__28650 = cljs.core.first(seq28649);
  var seq28649__$1 = cljs.core.next(seq28649);
  var G__28651 = cljs.core.first(seq28649__$1);
  var seq28649__$2 = cljs.core.next(seq28649__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__28650, G__28651, seq28649__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.divide;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args28658 = [];
  var len__5189__auto___28664 = arguments.length;
  var i__5190__auto___28665 = 0;
  while (true) {
    if (i__5190__auto___28665 < len__5189__auto___28664) {
      args28658.push(arguments[i__5190__auto___28665]);
      var G__28666 = i__5190__auto___28665 + 1;
      i__5190__auto___28665 = G__28666;
      continue;
    } else {
    }
    break;
  }
  var G__28663 = args28658.length;
  switch(G__28663) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28658.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq28659) {
  var G__28660 = cljs.core.first(seq28659);
  var seq28659__$1 = cljs.core.next(seq28659);
  var G__28661 = cljs.core.first(seq28659__$1);
  var seq28659__$2 = cljs.core.next(seq28659__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__28660, G__28661, seq28659__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args28668 = [];
  var len__5189__auto___28674 = arguments.length;
  var i__5190__auto___28675 = 0;
  while (true) {
    if (i__5190__auto___28675 < len__5189__auto___28674) {
      args28668.push(arguments[i__5190__auto___28675]);
      var G__28676 = i__5190__auto___28675 + 1;
      i__5190__auto___28675 = G__28676;
      continue;
    } else {
    }
    break;
  }
  var G__28673 = args28668.length;
  switch(G__28673) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28668.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__28678 = y;
        var G__28679 = cljs.core.first(more);
        var G__28680 = cljs.core.next(more);
        x = G__28678;
        y = G__28679;
        more = G__28680;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq28669) {
  var G__28670 = cljs.core.first(seq28669);
  var seq28669__$1 = cljs.core.next(seq28669);
  var G__28671 = cljs.core.first(seq28669__$1);
  var seq28669__$2 = cljs.core.next(seq28669__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__28670, G__28671, seq28669__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args28681 = [];
  var len__5189__auto___28687 = arguments.length;
  var i__5190__auto___28688 = 0;
  while (true) {
    if (i__5190__auto___28688 < len__5189__auto___28687) {
      args28681.push(arguments[i__5190__auto___28688]);
      var G__28689 = i__5190__auto___28688 + 1;
      i__5190__auto___28688 = G__28689;
      continue;
    } else {
    }
    break;
  }
  var G__28686 = args28681.length;
  switch(G__28686) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28681.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__28691 = y;
        var G__28692 = cljs.core.first(more);
        var G__28693 = cljs.core.next(more);
        x = G__28691;
        y = G__28692;
        more = G__28693;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq28682) {
  var G__28683 = cljs.core.first(seq28682);
  var seq28682__$1 = cljs.core.next(seq28682);
  var G__28684 = cljs.core.first(seq28682__$1);
  var seq28682__$2 = cljs.core.next(seq28682__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__28683, G__28684, seq28682__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args28694 = [];
  var len__5189__auto___28700 = arguments.length;
  var i__5190__auto___28701 = 0;
  while (true) {
    if (i__5190__auto___28701 < len__5189__auto___28700) {
      args28694.push(arguments[i__5190__auto___28701]);
      var G__28702 = i__5190__auto___28701 + 1;
      i__5190__auto___28701 = G__28702;
      continue;
    } else {
    }
    break;
  }
  var G__28699 = args28694.length;
  switch(G__28699) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28694.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__28704 = y;
        var G__28705 = cljs.core.first(more);
        var G__28706 = cljs.core.next(more);
        x = G__28704;
        y = G__28705;
        more = G__28706;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq28695) {
  var G__28696 = cljs.core.first(seq28695);
  var seq28695__$1 = cljs.core.next(seq28695);
  var G__28697 = cljs.core.first(seq28695__$1);
  var seq28695__$2 = cljs.core.next(seq28695__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__28696, G__28697, seq28695__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args28707 = [];
  var len__5189__auto___28713 = arguments.length;
  var i__5190__auto___28714 = 0;
  while (true) {
    if (i__5190__auto___28714 < len__5189__auto___28713) {
      args28707.push(arguments[i__5190__auto___28714]);
      var G__28715 = i__5190__auto___28714 + 1;
      i__5190__auto___28714 = G__28715;
      continue;
    } else {
    }
    break;
  }
  var G__28712 = args28707.length;
  switch(G__28712) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28707.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__28717 = y;
        var G__28718 = cljs.core.first(more);
        var G__28719 = cljs.core.next(more);
        x = G__28717;
        y = G__28718;
        more = G__28719;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq28708) {
  var G__28709 = cljs.core.first(seq28708);
  var seq28708__$1 = cljs.core.next(seq28708);
  var G__28710 = cljs.core.first(seq28708__$1);
  var seq28708__$2 = cljs.core.next(seq28708__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__28709, G__28710, seq28708__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args28720 = [];
  var len__5189__auto___28726 = arguments.length;
  var i__5190__auto___28727 = 0;
  while (true) {
    if (i__5190__auto___28727 < len__5189__auto___28726) {
      args28720.push(arguments[i__5190__auto___28727]);
      var G__28728 = i__5190__auto___28727 + 1;
      i__5190__auto___28727 = G__28728;
      continue;
    } else {
    }
    break;
  }
  var G__28725 = args28720.length;
  switch(G__28725) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28720.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4462__auto__ = x;
  var y__4463__auto__ = y;
  return x__4462__auto__ > y__4463__auto__ ? x__4462__auto__ : y__4463__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4462__auto__ = x;
    var y__4463__auto__ = y;
    return x__4462__auto__ > y__4463__auto__ ? x__4462__auto__ : y__4463__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq28721) {
  var G__28722 = cljs.core.first(seq28721);
  var seq28721__$1 = cljs.core.next(seq28721);
  var G__28723 = cljs.core.first(seq28721__$1);
  var seq28721__$2 = cljs.core.next(seq28721__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__28722, G__28723, seq28721__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args28730 = [];
  var len__5189__auto___28736 = arguments.length;
  var i__5190__auto___28737 = 0;
  while (true) {
    if (i__5190__auto___28737 < len__5189__auto___28736) {
      args28730.push(arguments[i__5190__auto___28737]);
      var G__28738 = i__5190__auto___28737 + 1;
      i__5190__auto___28737 = G__28738;
      continue;
    } else {
    }
    break;
  }
  var G__28735 = args28730.length;
  switch(G__28735) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28730.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4469__auto__ = x;
  var y__4470__auto__ = y;
  return x__4469__auto__ < y__4470__auto__ ? x__4469__auto__ : y__4470__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4469__auto__ = x;
    var y__4470__auto__ = y;
    return x__4469__auto__ < y__4470__auto__ ? x__4469__auto__ : y__4470__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq28731) {
  var G__28732 = cljs.core.first(seq28731);
  var seq28731__$1 = cljs.core.next(seq28731);
  var G__28733 = cljs.core.first(seq28731__$1);
  var seq28731__$2 = cljs.core.next(seq28731__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__28732, G__28733, seq28731__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args28740 = [];
  var len__5189__auto___28746 = arguments.length;
  var i__5190__auto___28747 = 0;
  while (true) {
    if (i__5190__auto___28747 < len__5189__auto___28746) {
      args28740.push(arguments[i__5190__auto___28747]);
      var G__28748 = i__5190__auto___28747 + 1;
      i__5190__auto___28747 = G__28748;
      continue;
    } else {
    }
    break;
  }
  var G__28745 = args28740.length;
  switch(G__28745) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28740.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq28741) {
  var G__28742 = cljs.core.first(seq28741);
  var seq28741__$1 = cljs.core.next(seq28741);
  var G__28743 = cljs.core.first(seq28741__$1);
  var seq28741__$2 = cljs.core.next(seq28741__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__28742, G__28743, seq28741__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args28750 = [];
  var len__5189__auto___28756 = arguments.length;
  var i__5190__auto___28757 = 0;
  while (true) {
    if (i__5190__auto___28757 < len__5189__auto___28756) {
      args28750.push(arguments[i__5190__auto___28757]);
      var G__28758 = i__5190__auto___28757 + 1;
      i__5190__auto___28757 = G__28758;
      continue;
    } else {
    }
    break;
  }
  var G__28755 = args28750.length;
  switch(G__28755) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28750.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq28751) {
  var G__28752 = cljs.core.first(seq28751);
  var seq28751__$1 = cljs.core.next(seq28751);
  var G__28753 = cljs.core.first(seq28751__$1);
  var seq28751__$2 = cljs.core.next(seq28751__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__28752, G__28753, seq28751__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args28760 = [];
  var len__5189__auto___28766 = arguments.length;
  var i__5190__auto___28767 = 0;
  while (true) {
    if (i__5190__auto___28767 < len__5189__auto___28766) {
      args28760.push(arguments[i__5190__auto___28767]);
      var G__28768 = i__5190__auto___28767 + 1;
      i__5190__auto___28767 = G__28768;
      continue;
    } else {
    }
    break;
  }
  var G__28765 = args28760.length;
  switch(G__28765) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28760.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq28761) {
  var G__28762 = cljs.core.first(seq28761);
  var seq28761__$1 = cljs.core.next(seq28761);
  var G__28763 = cljs.core.first(seq28761__$1);
  var seq28761__$2 = cljs.core.next(seq28761__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__28762, G__28763, seq28761__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args28770 = [];
  var len__5189__auto___28776 = arguments.length;
  var i__5190__auto___28777 = 0;
  while (true) {
    if (i__5190__auto___28777 < len__5189__auto___28776) {
      args28770.push(arguments[i__5190__auto___28777]);
      var G__28778 = i__5190__auto___28777 + 1;
      i__5190__auto___28777 = G__28778;
      continue;
    } else {
    }
    break;
  }
  var G__28775 = args28770.length;
  switch(G__28775) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28770.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq28771) {
  var G__28772 = cljs.core.first(seq28771);
  var seq28771__$1 = cljs.core.next(seq28771);
  var G__28773 = cljs.core.first(seq28771__$1);
  var seq28771__$2 = cljs.core.next(seq28771__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__28772, G__28773, seq28771__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args28780 = [];
  var len__5189__auto___28786 = arguments.length;
  var i__5190__auto___28787 = 0;
  while (true) {
    if (i__5190__auto___28787 < len__5189__auto___28786) {
      args28780.push(arguments[i__5190__auto___28787]);
      var G__28788 = i__5190__auto___28787 + 1;
      i__5190__auto___28787 = G__28788;
      continue;
    } else {
    }
    break;
  }
  var G__28785 = args28780.length;
  switch(G__28785) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28780.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq28781) {
  var G__28782 = cljs.core.first(seq28781);
  var seq28781__$1 = cljs.core.next(seq28781);
  var G__28783 = cljs.core.first(seq28781__$1);
  var seq28781__$2 = cljs.core.next(seq28781__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__28782, G__28783, seq28781__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.mod;
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args28790 = [];
  var len__5189__auto___28796 = arguments.length;
  var i__5190__auto___28797 = 0;
  while (true) {
    if (i__5190__auto___28797 < len__5189__auto___28796) {
      args28790.push(arguments[i__5190__auto___28797]);
      var G__28798 = i__5190__auto___28797 + 1;
      i__5190__auto___28797 = G__28798;
      continue;
    } else {
    }
    break;
  }
  var G__28795 = args28790.length;
  switch(G__28795) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28790.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq28791) {
  var G__28792 = cljs.core.first(seq28791);
  var seq28791__$1 = cljs.core.next(seq28791);
  var G__28793 = cljs.core.first(seq28791__$1);
  var seq28791__$2 = cljs.core.next(seq28791__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__28792, G__28793, seq28791__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args28800 = [];
  var len__5189__auto___28806 = arguments.length;
  var i__5190__auto___28807 = 0;
  while (true) {
    if (i__5190__auto___28807 < len__5189__auto___28806) {
      args28800.push(arguments[i__5190__auto___28807]);
      var G__28808 = i__5190__auto___28807 + 1;
      i__5190__auto___28807 = G__28808;
      continue;
    } else {
    }
    break;
  }
  var G__28805 = args28800.length;
  switch(G__28805) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28800.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq28801) {
  var G__28802 = cljs.core.first(seq28801);
  var seq28801__$1 = cljs.core.next(seq28801);
  var G__28803 = cljs.core.first(seq28801__$1);
  var seq28801__$2 = cljs.core.next(seq28801__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__28802, G__28803, seq28801__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args28810 = [];
  var len__5189__auto___28816 = arguments.length;
  var i__5190__auto___28817 = 0;
  while (true) {
    if (i__5190__auto___28817 < len__5189__auto___28816) {
      args28810.push(arguments[i__5190__auto___28817]);
      var G__28818 = i__5190__auto___28817 + 1;
      i__5190__auto___28817 = G__28818;
      continue;
    } else {
    }
    break;
  }
  var G__28815 = args28810.length;
  switch(G__28815) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28810.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq28811) {
  var G__28812 = cljs.core.first(seq28811);
  var seq28811__$1 = cljs.core.next(seq28811);
  var G__28813 = cljs.core.first(seq28811__$1);
  var seq28811__$2 = cljs.core.next(seq28811__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__28812, G__28813, seq28811__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args28820 = [];
  var len__5189__auto___28826 = arguments.length;
  var i__5190__auto___28827 = 0;
  while (true) {
    if (i__5190__auto___28827 < len__5189__auto___28826) {
      args28820.push(arguments[i__5190__auto___28827]);
      var G__28828 = i__5190__auto___28827 + 1;
      i__5190__auto___28827 = G__28828;
      continue;
    } else {
    }
    break;
  }
  var G__28825 = args28820.length;
  switch(G__28825) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28820.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq28821) {
  var G__28822 = cljs.core.first(seq28821);
  var seq28821__$1 = cljs.core.next(seq28821);
  var G__28823 = cljs.core.first(seq28821__$1);
  var seq28821__$2 = cljs.core.next(seq28821__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__28822, G__28823, seq28821__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args28830 = [];
  var len__5189__auto___28836 = arguments.length;
  var i__5190__auto___28837 = 0;
  while (true) {
    if (i__5190__auto___28837 < len__5189__auto___28836) {
      args28830.push(arguments[i__5190__auto___28837]);
      var G__28838 = i__5190__auto___28837 + 1;
      i__5190__auto___28837 = G__28838;
      continue;
    } else {
    }
    break;
  }
  var G__28835 = args28830.length;
  switch(G__28835) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28830.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq28831) {
  var G__28832 = cljs.core.first(seq28831);
  var seq28831__$1 = cljs.core.next(seq28831);
  var G__28833 = cljs.core.first(seq28831__$1);
  var seq28831__$2 = cljs.core.next(seq28831__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__28832, G__28833, seq28831__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args28840 = [];
  var len__5189__auto___28846 = arguments.length;
  var i__5190__auto___28847 = 0;
  while (true) {
    if (i__5190__auto___28847 < len__5189__auto___28846) {
      args28840.push(arguments[i__5190__auto___28847]);
      var G__28848 = i__5190__auto___28847 + 1;
      i__5190__auto___28847 = G__28848;
      continue;
    } else {
    }
    break;
  }
  var G__28845 = args28840.length;
  switch(G__28845) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28840.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq28841) {
  var G__28842 = cljs.core.first(seq28841);
  var seq28841__$1 = cljs.core.next(seq28841);
  var G__28843 = cljs.core.first(seq28841__$1);
  var seq28841__$2 = cljs.core.next(seq28841__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__28842, G__28843, seq28841__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args28850 = [];
  var len__5189__auto___28856 = arguments.length;
  var i__5190__auto___28857 = 0;
  while (true) {
    if (i__5190__auto___28857 < len__5189__auto___28856) {
      args28850.push(arguments[i__5190__auto___28857]);
      var G__28858 = i__5190__auto___28857 + 1;
      i__5190__auto___28857 = G__28858;
      continue;
    } else {
    }
    break;
  }
  var G__28855 = args28850.length;
  switch(G__28855) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28850.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__28860 = y;
        var G__28861 = cljs.core.first(more);
        var G__28862 = cljs.core.next(more);
        x = G__28860;
        y = G__28861;
        more = G__28862;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq28851) {
  var G__28852 = cljs.core.first(seq28851);
  var seq28851__$1 = cljs.core.next(seq28851);
  var G__28853 = cljs.core.first(seq28851__$1);
  var seq28851__$2 = cljs.core.next(seq28851__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__28852, G__28853, seq28851__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__28863 = n__$1 - 1;
      var G__28864 = cljs.core.next(xs);
      n__$1 = G__28863;
      xs = G__28864;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args28865 = [];
  var len__5189__auto___28870 = arguments.length;
  var i__5190__auto___28871 = 0;
  while (true) {
    if (i__5190__auto___28871 < len__5189__auto___28870) {
      args28865.push(arguments[i__5190__auto___28871]);
      var G__28872 = i__5190__auto___28871 + 1;
      i__5190__auto___28871 = G__28872;
      continue;
    } else {
    }
    break;
  }
  var G__28869 = args28865.length;
  switch(G__28869) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args28865.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5208__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__28874 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__28875 = cljs.core.next(more);
      sb = G__28874;
      more = G__28875;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq28866) {
  var G__28867 = cljs.core.first(seq28866);
  var seq28866__$1 = cljs.core.next(seq28866);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__28867, seq28866__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args28876 = [];
  var len__5189__auto___28879 = arguments.length;
  var i__5190__auto___28880 = 0;
  while (true) {
    if (i__5190__auto___28880 < len__5189__auto___28879) {
      args28876.push(arguments[i__5190__auto___28880]);
      var G__28881 = i__5190__auto___28880 + 1;
      i__5190__auto___28880 = G__28881;
      continue;
    } else {
    }
    break;
  }
  var G__28878 = args28876.length;
  switch(G__28878) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28876.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.map;
cljs.core.name;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__28883 = cljs.core.next(xs);
            var G__28884 = cljs.core.next(ys);
            xs = G__28883;
            ys = G__28884;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__28885 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__28886 = cljs.core.next(s);
        res = G__28885;
        s = G__28886;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.key;
cljs.core.val;
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__28887 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__28888 = cljs.core.next(s);
      h = G__28887;
      s = G__28888;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__28889 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__28890 = cljs.core.next(s__$1);
      h = G__28889;
      s__$1 = G__28890;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.name;
cljs.core.chunk_first;
cljs.core.chunk_rest;
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__28897_28903 = cljs.core.seq(fn_map);
  var chunk__28898_28904 = null;
  var count__28899_28905 = 0;
  var i__28900_28906 = 0;
  while (true) {
    if (i__28900_28906 < count__28899_28905) {
      var vec__28901_28907 = chunk__28898_28904.cljs$core$IIndexed$_nth$arity$2(null, i__28900_28906);
      var key_name_28908 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28901_28907, 0, null);
      var f_28909 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28901_28907, 1, null);
      var str_name_28910 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_28908) : cljs.core.name.call(null, key_name_28908);
      obj[str_name_28910] = f_28909;
      var G__28911 = seq__28897_28903;
      var G__28912 = chunk__28898_28904;
      var G__28913 = count__28899_28905;
      var G__28914 = i__28900_28906 + 1;
      seq__28897_28903 = G__28911;
      chunk__28898_28904 = G__28912;
      count__28899_28905 = G__28913;
      i__28900_28906 = G__28914;
      continue;
    } else {
      var temp__4425__auto___28915 = cljs.core.seq(seq__28897_28903);
      if (temp__4425__auto___28915) {
        var seq__28897_28916__$1 = temp__4425__auto___28915;
        if (cljs.core.chunked_seq_QMARK_(seq__28897_28916__$1)) {
          var c__4934__auto___28917 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__28897_28916__$1) : cljs.core.chunk_first.call(null, seq__28897_28916__$1);
          var G__28918 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__28897_28916__$1) : cljs.core.chunk_rest.call(null, seq__28897_28916__$1);
          var G__28919 = c__4934__auto___28917;
          var G__28920 = cljs.core.count(c__4934__auto___28917);
          var G__28921 = 0;
          seq__28897_28903 = G__28918;
          chunk__28898_28904 = G__28919;
          count__28899_28905 = G__28920;
          i__28900_28906 = G__28921;
          continue;
        } else {
          var vec__28902_28922 = cljs.core.first(seq__28897_28916__$1);
          var key_name_28923 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28902_28922, 0, null);
          var f_28924 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28902_28922, 1, null);
          var str_name_28925 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_28923) : cljs.core.name.call(null, key_name_28923);
          obj[str_name_28925] = f_28924;
          var G__28926 = cljs.core.next(seq__28897_28916__$1);
          var G__28927 = null;
          var G__28928 = 0;
          var G__28929 = 0;
          seq__28897_28903 = G__28926;
          chunk__28898_28904 = G__28927;
          count__28899_28905 = G__28928;
          i__28900_28906 = G__28929;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___28935 = arguments.length;
  var i__5190__auto___28936 = 0;
  while (true) {
    if (i__5190__auto___28936 < len__5189__auto___28935) {
      args__5196__auto__.push(arguments[i__5190__auto___28936]);
      var G__28937 = i__5190__auto___28936 + 1;
      i__5190__auto___28936 = G__28937;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__28938 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__28938;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__28939 = i - 1;
      var G__28940 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__28939;
      r = G__28940;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq28934) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq28934));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4131__auto__ = coll == null;
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = cljs.core.not(a.ns);
      if (and__4119__auto__) {
        return b.ns;
      } else {
        return and__4119__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__28951 = a.ns;
            var G__28952 = b.ns;
            return goog.array.defaultCompare(G__28951, G__28952);
          }();
          if (0 === nsc) {
            var G__28953 = a.name;
            var G__28954 = b.name;
            return goog.array.defaultCompare(G__28953, G__28954);
          } else {
            return nsc;
          }
        }
      } else {
        var G__28955 = a.name;
        var G__28956 = b.name;
        return goog.array.defaultCompare(G__28955, G__28956);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__28958 = null;
  var G__28958__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__28958__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__28958 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__28958__2.call(this, self__, coll);
      case 3:
        return G__28958__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__28958.cljs$core$IFn$_invoke$arity$2 = G__28958__2;
  G__28958.cljs$core$IFn$_invoke$arity$3 = G__28958__3;
  return G__28958;
}();
cljs.core.Keyword.prototype.apply = function(self__, args28957) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args28957)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4566__auto__ = self__._hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args28961 = [];
  var len__5189__auto___28964 = arguments.length;
  var i__5190__auto___28965 = 0;
  while (true) {
    if (i__5190__auto___28965 < len__5189__auto___28964) {
      args28961.push(arguments[i__5190__auto___28965]);
      var G__28966 = i__5190__auto___28965 + 1;
      i__5190__auto___28965 = G__28966;
      continue;
    } else {
    }
    break;
  }
  var G__28963 = args28961.length;
  switch(G__28963) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28961.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__28968 = ls.sval();
        ls = G__28968;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.ArrayChunk;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args28969 = [];
  var len__5189__auto___28972 = arguments.length;
  var i__5190__auto___28973 = 0;
  while (true) {
    if (i__5190__auto___28973 < len__5189__auto___28972) {
      args28969.push(arguments[i__5190__auto___28973]);
      var G__28974 = i__5190__auto___28973 + 1;
      i__5190__auto___28973 = G__28974;
      continue;
    } else {
    }
    break;
  }
  var G__28971 = args28969.length;
  switch(G__28971) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28969.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__28978 = cljs.core.next(s__$1);
      s__$1 = G__28978;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_28979 = 0;
  var xs_28980 = cljs.core.seq(coll);
  while (true) {
    if (xs_28980) {
      ret[i_28979] = cljs.core.to_array(cljs.core.first(xs_28980));
      var G__28981 = i_28979 + 1;
      var G__28982 = cljs.core.next(xs_28980);
      i_28979 = G__28981;
      xs_28980 = G__28982;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args28983 = [];
  var len__5189__auto___28986 = arguments.length;
  var i__5190__auto___28987 = 0;
  while (true) {
    if (i__5190__auto___28987 < len__5189__auto___28986) {
      args28983.push(arguments[i__5190__auto___28987]);
      var G__28988 = i__5190__auto___28987 + 1;
      i__5190__auto___28987 = G__28988;
      continue;
    } else {
    }
    break;
  }
  var G__28985 = args28983.length;
  switch(G__28985) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28983.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__28990 = i + 1;
        var G__28991 = cljs.core.next(s__$1);
        i = G__28990;
        s__$1 = G__28991;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5034__auto___28992 = size;
    var i_28993 = 0;
    while (true) {
      if (i_28993 < n__5034__auto___28992) {
        a[i_28993] = init_val_or_seq;
        var G__28994 = i_28993 + 1;
        i_28993 = G__28994;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args28995 = [];
  var len__5189__auto___28998 = arguments.length;
  var i__5190__auto___28999 = 0;
  while (true) {
    if (i__5190__auto___28999 < len__5189__auto___28998) {
      args28995.push(arguments[i__5190__auto___28999]);
      var G__29000 = i__5190__auto___28999 + 1;
      i__5190__auto___28999 = G__29000;
      continue;
    } else {
    }
    break;
  }
  var G__28997 = args28995.length;
  switch(G__28997) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28995.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__29002 = i + 1;
        var G__29003 = cljs.core.next(s__$1);
        i = G__29002;
        s__$1 = G__29003;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5034__auto___29004 = size;
    var i_29005 = 0;
    while (true) {
      if (i_29005 < n__5034__auto___29004) {
        a[i_29005] = init_val_or_seq;
        var G__29006 = i_29005 + 1;
        i_29005 = G__29006;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args29007 = [];
  var len__5189__auto___29010 = arguments.length;
  var i__5190__auto___29011 = 0;
  while (true) {
    if (i__5190__auto___29011 < len__5189__auto___29010) {
      args29007.push(arguments[i__5190__auto___29011]);
      var G__29012 = i__5190__auto___29011 + 1;
      i__5190__auto___29011 = G__29012;
      continue;
    } else {
    }
    break;
  }
  var G__29009 = args29007.length;
  switch(G__29009) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29007.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__29014 = i + 1;
        var G__29015 = cljs.core.next(s__$1);
        i = G__29014;
        s__$1 = G__29015;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5034__auto___29016 = size;
    var i_29017 = 0;
    while (true) {
      if (i_29017 < n__5034__auto___29016) {
        a[i_29017] = init_val_or_seq;
        var G__29018 = i_29017 + 1;
        i_29017 = G__29018;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args29019 = [];
  var len__5189__auto___29022 = arguments.length;
  var i__5190__auto___29023 = 0;
  while (true) {
    if (i__5190__auto___29023 < len__5189__auto___29022) {
      args29019.push(arguments[i__5190__auto___29023]);
      var G__29024 = i__5190__auto___29023 + 1;
      i__5190__auto___29023 = G__29024;
      continue;
    } else {
    }
    break;
  }
  var G__29021 = args29019.length;
  switch(G__29021) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29019.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__29026 = i + 1;
        var G__29027 = cljs.core.next(s__$1);
        i = G__29026;
        s__$1 = G__29027;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5034__auto___29028 = size;
    var i_29029 = 0;
    while (true) {
      if (i_29029 < n__5034__auto___29028) {
        a[i_29029] = init_val_or_seq;
        var G__29030 = i_29029 + 1;
        i_29029 = G__29030;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__29031 = cljs.core.next(s__$1);
        var G__29032 = i - 1;
        var G__29033 = sum + 1;
        s__$1 = G__29031;
        i = G__29032;
        sum = G__29033;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args29035 = [];
  var len__5189__auto___29047 = arguments.length;
  var i__5190__auto___29048 = 0;
  while (true) {
    if (i__5190__auto___29048 < len__5189__auto___29047) {
      args29035.push(arguments[i__5190__auto___29048]);
      var G__29049 = i__5190__auto___29048 + 1;
      i__5190__auto___29048 = G__29049;
      continue;
    } else {
    }
    break;
  }
  var G__29040 = args29035.length;
  switch(G__29040) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29035.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq29036) {
  var G__29037 = cljs.core.first(seq29036);
  var seq29036__$1 = cljs.core.next(seq29036);
  var G__29038 = cljs.core.first(seq29036__$1);
  var seq29036__$2 = cljs.core.next(seq29036__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__29037, G__29038, seq29036__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args29051 = [];
  var len__5189__auto___29059 = arguments.length;
  var i__5190__auto___29060 = 0;
  while (true) {
    if (i__5190__auto___29060 < len__5189__auto___29059) {
      args29051.push(arguments[i__5190__auto___29060]);
      var G__29061 = i__5190__auto___29060 + 1;
      i__5190__auto___29060 = G__29061;
      continue;
    } else {
    }
    break;
  }
  var G__29058 = args29051.length;
  switch(G__29058) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29051.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5208__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq29052) {
  var G__29053 = cljs.core.first(seq29052);
  var seq29052__$1 = cljs.core.next(seq29052);
  var G__29054 = cljs.core.first(seq29052__$1);
  var seq29052__$2 = cljs.core.next(seq29052__$1);
  var G__29055 = cljs.core.first(seq29052__$2);
  var seq29052__$3 = cljs.core.next(seq29052__$2);
  var G__29056 = cljs.core.first(seq29052__$3);
  var seq29052__$4 = cljs.core.next(seq29052__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__29053, G__29054, G__29055, G__29056, seq29052__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args29063 = [];
  var len__5189__auto___29069 = arguments.length;
  var i__5190__auto___29070 = 0;
  while (true) {
    if (i__5190__auto___29070 < len__5189__auto___29069) {
      args29063.push(arguments[i__5190__auto___29070]);
      var G__29071 = i__5190__auto___29070 + 1;
      i__5190__auto___29070 = G__29071;
      continue;
    } else {
    }
    break;
  }
  var G__29068 = args29063.length;
  switch(G__29068) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29063.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__29073 = ntcoll;
      var G__29074 = cljs.core.first(vals);
      var G__29075 = cljs.core.next(vals);
      tcoll = G__29073;
      val = G__29074;
      vals = G__29075;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq29064) {
  var G__29065 = cljs.core.first(seq29064);
  var seq29064__$1 = cljs.core.next(seq29064);
  var G__29066 = cljs.core.first(seq29064__$1);
  var seq29064__$2 = cljs.core.next(seq29064__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29065, G__29066, seq29064__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args29076 = [];
  var len__5189__auto___29083 = arguments.length;
  var i__5190__auto___29084 = 0;
  while (true) {
    if (i__5190__auto___29084 < len__5189__auto___29083) {
      args29076.push(arguments[i__5190__auto___29084]);
      var G__29085 = i__5190__auto___29084 + 1;
      i__5190__auto___29084 = G__29085;
      continue;
    } else {
    }
    break;
  }
  var G__29082 = args29076.length;
  switch(G__29082) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29076.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__29087 = ntcoll;
      var G__29088 = cljs.core.first(kvs);
      var G__29089 = cljs.core.second(kvs);
      var G__29090 = cljs.core.nnext(kvs);
      tcoll = G__29087;
      key = G__29088;
      val = G__29089;
      kvs = G__29090;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq29077) {
  var G__29078 = cljs.core.first(seq29077);
  var seq29077__$1 = cljs.core.next(seq29077);
  var G__29079 = cljs.core.first(seq29077__$1);
  var seq29077__$2 = cljs.core.next(seq29077__$1);
  var G__29080 = cljs.core.first(seq29077__$2);
  var seq29077__$3 = cljs.core.next(seq29077__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29078, G__29079, G__29080, seq29077__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args29091 = [];
  var len__5189__auto___29097 = arguments.length;
  var i__5190__auto___29098 = 0;
  while (true) {
    if (i__5190__auto___29098 < len__5189__auto___29097) {
      args29091.push(arguments[i__5190__auto___29098]);
      var G__29099 = i__5190__auto___29098 + 1;
      i__5190__auto___29098 = G__29099;
      continue;
    } else {
    }
    break;
  }
  var G__29096 = args29091.length;
  switch(G__29096) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29091.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__29101 = ntcoll;
      var G__29102 = cljs.core.first(ks);
      var G__29103 = cljs.core.next(ks);
      tcoll = G__29101;
      key = G__29102;
      ks = G__29103;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq29092) {
  var G__29093 = cljs.core.first(seq29092);
  var seq29092__$1 = cljs.core.next(seq29092);
  var G__29094 = cljs.core.first(seq29092__$1);
  var seq29092__$2 = cljs.core.next(seq29092__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29093, G__29094, seq29092__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args29104 = [];
  var len__5189__auto___29110 = arguments.length;
  var i__5190__auto___29111 = 0;
  while (true) {
    if (i__5190__auto___29111 < len__5189__auto___29110) {
      args29104.push(arguments[i__5190__auto___29111]);
      var G__29112 = i__5190__auto___29111 + 1;
      i__5190__auto___29111 = G__29112;
      continue;
    } else {
    }
    break;
  }
  var G__29109 = args29104.length;
  switch(G__29109) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29104.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__29114 = ntcoll;
      var G__29115 = cljs.core.first(vals);
      var G__29116 = cljs.core.next(vals);
      tcoll = G__29114;
      val = G__29115;
      vals = G__29116;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq29105) {
  var G__29106 = cljs.core.first(seq29105);
  var seq29105__$1 = cljs.core.next(seq29105);
  var G__29107 = cljs.core.first(seq29105__$1);
  var seq29105__$2 = cljs.core.next(seq29105__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29106, G__29107, seq29105__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5078 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5078);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5078) : f.call(null, a5078);
      }
    } else {
      var b5079 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5078, b5079);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5078, b5079) : f.call(null, a5078, b5079);
        }
      } else {
        var c5080 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5078, b5079, c5080);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5078, b5079, c5080) : f.call(null, a5078, b5079, c5080);
          }
        } else {
          var d5081 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5078, b5079, c5080, d5081);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5078, b5079, c5080, d5081) : f.call(null, a5078, b5079, c5080, d5081);
            }
          } else {
            var e5082 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5078, b5079, c5080, d5081, e5082);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5078, b5079, c5080, d5081, e5082) : f.call(null, a5078, b5079, c5080, d5081, e5082);
              }
            } else {
              var f5083 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5078, b5079, c5080, d5081, e5082, f5083);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5078, b5079, c5080, d5081, e5082, f5083) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083);
                }
              } else {
                var g5084 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5078, b5079, c5080, d5081, e5082, f5083, g5084);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5078, b5079, c5080, d5081, e5082, f5083, g5084) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084);
                  }
                } else {
                  var h5085 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085);
                    }
                  } else {
                    var i5086 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086);
                      }
                    } else {
                      var j5087 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087);
                        }
                      } else {
                        var k5088 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088);
                          }
                        } else {
                          var l5089 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089);
                            }
                          } else {
                            var m5090 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090);
                              }
                            } else {
                              var n5091 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091);
                                }
                              } else {
                                var o5092 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092);
                                  }
                                } else {
                                  var p5093 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093);
                                    }
                                  } else {
                                    var q5094 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094);
                                      }
                                    } else {
                                      var r5095 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095);
                                        }
                                      } else {
                                        var s5096 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095, s5096);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095, s5096) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095, s5096);
                                          }
                                        } else {
                                          var t5097 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095, s5096, t5097);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095, s5096, t5097) : f.call(null, a5078, b5079, c5080, d5081, e5082, f5083, g5084, h5085, i5086, j5087, k5088, l5089, m5090, n5091, o5092, p5093, q5094, r5095, s5096, t5097);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args29117 = [];
  var len__5189__auto___29126 = arguments.length;
  var i__5190__auto___29127 = 0;
  while (true) {
    if (i__5190__auto___29127 < len__5189__auto___29126) {
      args29117.push(arguments[i__5190__auto___29127]);
      var G__29128 = i__5190__auto___29127 + 1;
      i__5190__auto___29127 = G__29128;
      continue;
    } else {
    }
    break;
  }
  var G__29125 = args29117.length;
  switch(G__29125) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29117.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5208__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq29118) {
  var G__29119 = cljs.core.first(seq29118);
  var seq29118__$1 = cljs.core.next(seq29118);
  var G__29120 = cljs.core.first(seq29118__$1);
  var seq29118__$2 = cljs.core.next(seq29118__$1);
  var G__29121 = cljs.core.first(seq29118__$2);
  var seq29118__$3 = cljs.core.next(seq29118__$2);
  var G__29122 = cljs.core.first(seq29118__$3);
  var seq29118__$4 = cljs.core.next(seq29118__$3);
  var G__29123 = cljs.core.first(seq29118__$4);
  var seq29118__$5 = cljs.core.next(seq29118__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__29119, G__29120, G__29121, G__29122, G__29123, seq29118__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args29130 = [];
  var len__5189__auto___29155 = arguments.length;
  var i__5190__auto___29156 = 0;
  while (true) {
    if (i__5190__auto___29156 < len__5189__auto___29155) {
      args29130.push(arguments[i__5190__auto___29156]);
      var G__29157 = i__5190__auto___29156 + 1;
      i__5190__auto___29156 = G__29157;
      continue;
    } else {
    }
    break;
  }
  var G__29139 = args29130.length;
  switch(G__29139) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29130.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5208__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__29140 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29140) : f.call(null, G__29140);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__29141 = cljs.core.meta(obj);
    var G__29142 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29141, G__29142) : f.call(null, G__29141, G__29142);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__29143 = cljs.core.meta(obj);
    var G__29144 = a;
    var G__29145 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29143, G__29144, G__29145) : f.call(null, G__29143, G__29144, G__29145);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__29146 = cljs.core.meta(obj);
    var G__29147 = a;
    var G__29148 = b;
    var G__29149 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29146, G__29147, G__29148, G__29149) : f.call(null, G__29146, G__29147, G__29148, G__29149);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__29150 = cljs.core.meta(obj);
    var G__29151 = a;
    var G__29152 = b;
    var G__29153 = c;
    var G__29154 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__29150, G__29151, G__29152, G__29153, G__29154) : f.call(null, G__29150, G__29151, G__29152, G__29153, G__29154);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq29131) {
  var G__29132 = cljs.core.first(seq29131);
  var seq29131__$1 = cljs.core.next(seq29131);
  var G__29133 = cljs.core.first(seq29131__$1);
  var seq29131__$2 = cljs.core.next(seq29131__$1);
  var G__29134 = cljs.core.first(seq29131__$2);
  var seq29131__$3 = cljs.core.next(seq29131__$2);
  var G__29135 = cljs.core.first(seq29131__$3);
  var seq29131__$4 = cljs.core.next(seq29131__$3);
  var G__29136 = cljs.core.first(seq29131__$4);
  var seq29131__$5 = cljs.core.next(seq29131__$4);
  var G__29137 = cljs.core.first(seq29131__$5);
  var seq29131__$6 = cljs.core.next(seq29131__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__29132, G__29133, G__29134, G__29135, G__29136, G__29137, seq29131__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args29159 = [];
  var len__5189__auto___29165 = arguments.length;
  var i__5190__auto___29166 = 0;
  while (true) {
    if (i__5190__auto___29166 < len__5189__auto___29165) {
      args29159.push(arguments[i__5190__auto___29166]);
      var G__29167 = i__5190__auto___29166 + 1;
      i__5190__auto___29166 = G__29167;
      continue;
    } else {
    }
    break;
  }
  var G__29164 = args29159.length;
  switch(G__29164) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29159.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq29160) {
  var G__29161 = cljs.core.first(seq29160);
  var seq29160__$1 = cljs.core.next(seq29160);
  var G__29162 = cljs.core.first(seq29160__$1);
  var seq29160__$2 = cljs.core.next(seq29160__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__29161, G__29162, seq29160__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core29172 !== "undefined") {
  } else {
    cljs.core.t_cljs$core29172 = function(nil_iter, meta29173) {
      this.nil_iter = nil_iter;
      this.meta29173 = meta29173;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core29172.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_29174, meta29173__$1) {
      var self__ = this;
      var _29174__$1 = this;
      return new cljs.core.t_cljs$core29172(self__.nil_iter, meta29173__$1);
    };
    cljs.core.t_cljs$core29172.prototype.cljs$core$IMeta$_meta$arity$1 = function(_29174) {
      var self__ = this;
      var _29174__$1 = this;
      return self__.meta29173;
    };
    cljs.core.t_cljs$core29172.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core29172.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core29172.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core29172.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta29173", "meta29173", -475214031, null)], 
      null);
    };
    cljs.core.t_cljs$core29172.cljs$lang$type = true;
    cljs.core.t_cljs$core29172.cljs$lang$ctorStr = "cljs.core/t_cljs$core29172";
    cljs.core.t_cljs$core29172.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write(writer__4730__auto__, "cljs.core/t_cljs$core29172");
    };
    cljs.core.__GT_t_cljs$core29172 = function cljs$core$nil_iter_$___GT_t_cljs$core29172(nil_iter__$1, meta29173) {
      return new cljs.core.t_cljs$core29172(nil_iter__$1, meta29173);
    };
  }
  return new cljs.core.t_cljs$core29172(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.LazyTransformer;
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = !(lt.stepper == null);
      if (and__4119__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4119__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__29175 = lt;
        var G__29176 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__29175, G__29176) : self__.xform.call(null, G__29175, G__29176);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__29177 = cljs.core.next(iters__$1);
        iters__$1 = G__29177;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5034__auto___29178 = self__.iters.length;
  var i_29179 = 0;
  while (true) {
    if (i_29179 < n__5034__auto___29178) {
      self__.nexts[i_29179] = self__.iters[i_29179].next();
      var G__29180 = i_29179 + 1;
      i_29179 = G__29180;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = !(lt.stepper == null);
      if (and__4119__auto__) {
        return this$.hasNext();
      } else {
        return and__4119__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args29181 = [];
  var len__5189__auto___29184 = arguments.length;
  var i__5190__auto___29185 = 0;
  while (true) {
    if (i__5190__auto___29185 < len__5189__auto___29184) {
      args29181.push(arguments[i__5190__auto___29185]);
      var G__29186 = i__5190__auto___29185 + 1;
      i__5190__auto___29185 = G__29186;
      continue;
    } else {
    }
    break;
  }
  var G__29183 = args29181.length;
  switch(G__29183) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29181.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__29188_29192 = cljs.core.seq(colls);
  var chunk__29189_29193 = null;
  var count__29190_29194 = 0;
  var i__29191_29195 = 0;
  while (true) {
    if (i__29191_29195 < count__29190_29194) {
      var coll_29196 = chunk__29189_29193.cljs$core$IIndexed$_nth$arity$2(null, i__29191_29195);
      iters.push(cljs.core.iter(coll_29196));
      var G__29197 = seq__29188_29192;
      var G__29198 = chunk__29189_29193;
      var G__29199 = count__29190_29194;
      var G__29200 = i__29191_29195 + 1;
      seq__29188_29192 = G__29197;
      chunk__29189_29193 = G__29198;
      count__29190_29194 = G__29199;
      i__29191_29195 = G__29200;
      continue;
    } else {
      var temp__4425__auto___29201 = cljs.core.seq(seq__29188_29192);
      if (temp__4425__auto___29201) {
        var seq__29188_29202__$1 = temp__4425__auto___29201;
        if (cljs.core.chunked_seq_QMARK_(seq__29188_29202__$1)) {
          var c__4934__auto___29203 = cljs.core.chunk_first(seq__29188_29202__$1);
          var G__29204 = cljs.core.chunk_rest(seq__29188_29202__$1);
          var G__29205 = c__4934__auto___29203;
          var G__29206 = cljs.core.count(c__4934__auto___29203);
          var G__29207 = 0;
          seq__29188_29192 = G__29204;
          chunk__29189_29193 = G__29205;
          count__29190_29194 = G__29206;
          i__29191_29195 = G__29207;
          continue;
        } else {
          var coll_29208 = cljs.core.first(seq__29188_29202__$1);
          iters.push(cljs.core.iter(coll_29208));
          var G__29209 = cljs.core.next(seq__29188_29202__$1);
          var G__29210 = null;
          var G__29211 = 0;
          var G__29212 = 0;
          seq__29188_29192 = G__29209;
          chunk__29189_29193 = G__29210;
          count__29190_29194 = G__29211;
          i__29191_29195 = G__29212;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args29213 = [];
  var len__5189__auto___29219 = arguments.length;
  var i__5190__auto___29220 = 0;
  while (true) {
    if (i__5190__auto___29220 < len__5189__auto___29219) {
      args29213.push(arguments[i__5190__auto___29220]);
      var G__29221 = i__5190__auto___29220 + 1;
      i__5190__auto___29220 = G__29221;
      continue;
    } else {
    }
    break;
  }
  var G__29218 = args29213.length;
  switch(G__29218) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29213.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4131__auto__ = cljs.core.seq(coll);
    if (or__4131__auto__) {
      return or__4131__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq29214) {
  var G__29215 = cljs.core.first(seq29214);
  var seq29214__$1 = cljs.core.next(seq29214);
  var G__29216 = cljs.core.first(seq29214__$1);
  var seq29214__$2 = cljs.core.next(seq29214__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__29215, G__29216, seq29214__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__29224 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29224) : pred.call(null, G__29224);
      }())) {
        var G__29225 = pred;
        var G__29226 = cljs.core.next(coll);
        pred = G__29225;
        coll = G__29226;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4131__auto__ = function() {
        var G__29230 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29230) : pred.call(null, G__29230);
      }();
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var G__29231 = pred;
        var G__29232 = cljs.core.next(coll);
        pred = G__29231;
        coll = G__29232;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__29233 = null;
    var G__29233__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__29233__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__29233__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__29233__3 = function() {
      var G__29234__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__29234 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__29235__i = 0, G__29235__a = new Array(arguments.length - 2);
          while (G__29235__i < G__29235__a.length) {
            G__29235__a[G__29235__i] = arguments[G__29235__i + 2];
            ++G__29235__i;
          }
          zs = new cljs.core.IndexedSeq(G__29235__a, 0);
        }
        return G__29234__delegate.call(this, x, y, zs);
      };
      G__29234.cljs$lang$maxFixedArity = 2;
      G__29234.cljs$lang$applyTo = function(arglist__29236) {
        var x = cljs.core.first(arglist__29236);
        arglist__29236 = cljs.core.next(arglist__29236);
        var y = cljs.core.first(arglist__29236);
        var zs = cljs.core.rest(arglist__29236);
        return G__29234__delegate(x, y, zs);
      };
      G__29234.cljs$core$IFn$_invoke$arity$variadic = G__29234__delegate;
      return G__29234;
    }();
    G__29233 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__29233__0.call(this);
        case 1:
          return G__29233__1.call(this, x);
        case 2:
          return G__29233__2.call(this, x, y);
        default:
          var G__29237 = null;
          if (arguments.length > 2) {
            var G__29238__i = 0, G__29238__a = new Array(arguments.length - 2);
            while (G__29238__i < G__29238__a.length) {
              G__29238__a[G__29238__i] = arguments[G__29238__i + 2];
              ++G__29238__i;
            }
            G__29237 = new cljs.core.IndexedSeq(G__29238__a, 0);
          }
          return G__29233__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__29237);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29233.cljs$lang$maxFixedArity = 2;
    G__29233.cljs$lang$applyTo = G__29233__3.cljs$lang$applyTo;
    G__29233.cljs$core$IFn$_invoke$arity$0 = G__29233__0;
    G__29233.cljs$core$IFn$_invoke$arity$1 = G__29233__1;
    G__29233.cljs$core$IFn$_invoke$arity$2 = G__29233__2;
    G__29233.cljs$core$IFn$_invoke$arity$variadic = G__29233__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__29233;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__29239__delegate = function(args) {
      return x;
    };
    var G__29239 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__29240__i = 0, G__29240__a = new Array(arguments.length - 0);
        while (G__29240__i < G__29240__a.length) {
          G__29240__a[G__29240__i] = arguments[G__29240__i + 0];
          ++G__29240__i;
        }
        args = new cljs.core.IndexedSeq(G__29240__a, 0);
      }
      return G__29239__delegate.call(this, args);
    };
    G__29239.cljs$lang$maxFixedArity = 0;
    G__29239.cljs$lang$applyTo = function(arglist__29241) {
      var args = cljs.core.seq(arglist__29241);
      return G__29239__delegate(args);
    };
    G__29239.cljs$core$IFn$_invoke$arity$variadic = G__29239__delegate;
    return G__29239;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args29242 = [];
  var len__5189__auto___29269 = arguments.length;
  var i__5190__auto___29270 = 0;
  while (true) {
    if (i__5190__auto___29270 < len__5189__auto___29269) {
      args29242.push(arguments[i__5190__auto___29270]);
      var G__29271 = i__5190__auto___29270 + 1;
      i__5190__auto___29270 = G__29271;
      continue;
    } else {
    }
    break;
  }
  var G__29248 = args29242.length;
  switch(G__29248) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29242.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__29273 = null;
    var G__29273__0 = function() {
      var G__29249 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29249) : f.call(null, G__29249);
    };
    var G__29273__1 = function(x) {
      var G__29250 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29250) : f.call(null, G__29250);
    };
    var G__29273__2 = function(x, y) {
      var G__29251 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29251) : f.call(null, G__29251);
    };
    var G__29273__3 = function(x, y, z) {
      var G__29252 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29252) : f.call(null, G__29252);
    };
    var G__29273__4 = function() {
      var G__29274__delegate = function(x, y, z, args) {
        var G__29253 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29253) : f.call(null, G__29253);
      };
      var G__29274 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29275__i = 0, G__29275__a = new Array(arguments.length - 3);
          while (G__29275__i < G__29275__a.length) {
            G__29275__a[G__29275__i] = arguments[G__29275__i + 3];
            ++G__29275__i;
          }
          args = new cljs.core.IndexedSeq(G__29275__a, 0);
        }
        return G__29274__delegate.call(this, x, y, z, args);
      };
      G__29274.cljs$lang$maxFixedArity = 3;
      G__29274.cljs$lang$applyTo = function(arglist__29276) {
        var x = cljs.core.first(arglist__29276);
        arglist__29276 = cljs.core.next(arglist__29276);
        var y = cljs.core.first(arglist__29276);
        arglist__29276 = cljs.core.next(arglist__29276);
        var z = cljs.core.first(arglist__29276);
        var args = cljs.core.rest(arglist__29276);
        return G__29274__delegate(x, y, z, args);
      };
      G__29274.cljs$core$IFn$_invoke$arity$variadic = G__29274__delegate;
      return G__29274;
    }();
    G__29273 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__29273__0.call(this);
        case 1:
          return G__29273__1.call(this, x);
        case 2:
          return G__29273__2.call(this, x, y);
        case 3:
          return G__29273__3.call(this, x, y, z);
        default:
          var G__29277 = null;
          if (arguments.length > 3) {
            var G__29278__i = 0, G__29278__a = new Array(arguments.length - 3);
            while (G__29278__i < G__29278__a.length) {
              G__29278__a[G__29278__i] = arguments[G__29278__i + 3];
              ++G__29278__i;
            }
            G__29277 = new cljs.core.IndexedSeq(G__29278__a, 0);
          }
          return G__29273__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29277);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29273.cljs$lang$maxFixedArity = 3;
    G__29273.cljs$lang$applyTo = G__29273__4.cljs$lang$applyTo;
    G__29273.cljs$core$IFn$_invoke$arity$0 = G__29273__0;
    G__29273.cljs$core$IFn$_invoke$arity$1 = G__29273__1;
    G__29273.cljs$core$IFn$_invoke$arity$2 = G__29273__2;
    G__29273.cljs$core$IFn$_invoke$arity$3 = G__29273__3;
    G__29273.cljs$core$IFn$_invoke$arity$variadic = G__29273__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29273;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__29279 = null;
    var G__29279__0 = function() {
      var G__29255 = function() {
        var G__29256 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29256) : g.call(null, G__29256);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29255) : f.call(null, G__29255);
    };
    var G__29279__1 = function(x) {
      var G__29258 = function() {
        var G__29259 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29259) : g.call(null, G__29259);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29258) : f.call(null, G__29258);
    };
    var G__29279__2 = function(x, y) {
      var G__29261 = function() {
        var G__29262 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29262) : g.call(null, G__29262);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29261) : f.call(null, G__29261);
    };
    var G__29279__3 = function(x, y, z) {
      var G__29264 = function() {
        var G__29265 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29265) : g.call(null, G__29265);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29264) : f.call(null, G__29264);
    };
    var G__29279__4 = function() {
      var G__29280__delegate = function(x, y, z, args) {
        var G__29267 = function() {
          var G__29268 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__29268) : g.call(null, G__29268);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29267) : f.call(null, G__29267);
      };
      var G__29280 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29281__i = 0, G__29281__a = new Array(arguments.length - 3);
          while (G__29281__i < G__29281__a.length) {
            G__29281__a[G__29281__i] = arguments[G__29281__i + 3];
            ++G__29281__i;
          }
          args = new cljs.core.IndexedSeq(G__29281__a, 0);
        }
        return G__29280__delegate.call(this, x, y, z, args);
      };
      G__29280.cljs$lang$maxFixedArity = 3;
      G__29280.cljs$lang$applyTo = function(arglist__29282) {
        var x = cljs.core.first(arglist__29282);
        arglist__29282 = cljs.core.next(arglist__29282);
        var y = cljs.core.first(arglist__29282);
        arglist__29282 = cljs.core.next(arglist__29282);
        var z = cljs.core.first(arglist__29282);
        var args = cljs.core.rest(arglist__29282);
        return G__29280__delegate(x, y, z, args);
      };
      G__29280.cljs$core$IFn$_invoke$arity$variadic = G__29280__delegate;
      return G__29280;
    }();
    G__29279 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__29279__0.call(this);
        case 1:
          return G__29279__1.call(this, x);
        case 2:
          return G__29279__2.call(this, x, y);
        case 3:
          return G__29279__3.call(this, x, y, z);
        default:
          var G__29283 = null;
          if (arguments.length > 3) {
            var G__29284__i = 0, G__29284__a = new Array(arguments.length - 3);
            while (G__29284__i < G__29284__a.length) {
              G__29284__a[G__29284__i] = arguments[G__29284__i + 3];
              ++G__29284__i;
            }
            G__29283 = new cljs.core.IndexedSeq(G__29284__a, 0);
          }
          return G__29279__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29283);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29279.cljs$lang$maxFixedArity = 3;
    G__29279.cljs$lang$applyTo = G__29279__4.cljs$lang$applyTo;
    G__29279.cljs$core$IFn$_invoke$arity$0 = G__29279__0;
    G__29279.cljs$core$IFn$_invoke$arity$1 = G__29279__1;
    G__29279.cljs$core$IFn$_invoke$arity$2 = G__29279__2;
    G__29279.cljs$core$IFn$_invoke$arity$3 = G__29279__3;
    G__29279.cljs$core$IFn$_invoke$arity$variadic = G__29279__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29279;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__29285__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__29286 = cljs.core.first(fs__$2).call(null, ret);
            var G__29287 = cljs.core.next(fs__$2);
            ret = G__29286;
            fs__$2 = G__29287;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__29285 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__29288__i = 0, G__29288__a = new Array(arguments.length - 0);
          while (G__29288__i < G__29288__a.length) {
            G__29288__a[G__29288__i] = arguments[G__29288__i + 0];
            ++G__29288__i;
          }
          args = new cljs.core.IndexedSeq(G__29288__a, 0);
        }
        return G__29285__delegate.call(this, args);
      };
      G__29285.cljs$lang$maxFixedArity = 0;
      G__29285.cljs$lang$applyTo = function(arglist__29289) {
        var args = cljs.core.seq(arglist__29289);
        return G__29285__delegate(args);
      };
      G__29285.cljs$core$IFn$_invoke$arity$variadic = G__29285__delegate;
      return G__29285;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq29243) {
  var G__29244 = cljs.core.first(seq29243);
  var seq29243__$1 = cljs.core.next(seq29243);
  var G__29245 = cljs.core.first(seq29243__$1);
  var seq29243__$2 = cljs.core.next(seq29243__$1);
  var G__29246 = cljs.core.first(seq29243__$2);
  var seq29243__$3 = cljs.core.next(seq29243__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__29244, G__29245, G__29246, seq29243__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args29290 = [];
  var len__5189__auto___29298 = arguments.length;
  var i__5190__auto___29299 = 0;
  while (true) {
    if (i__5190__auto___29299 < len__5189__auto___29298) {
      args29290.push(arguments[i__5190__auto___29299]);
      var G__29300 = i__5190__auto___29299 + 1;
      i__5190__auto___29299 = G__29300;
      continue;
    } else {
    }
    break;
  }
  var G__29297 = args29290.length;
  switch(G__29297) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29290.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5208__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__29302 = null;
    var G__29302__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__29302__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__29302__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__29302__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__29302__4 = function() {
      var G__29303__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__29303 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29304__i = 0, G__29304__a = new Array(arguments.length - 3);
          while (G__29304__i < G__29304__a.length) {
            G__29304__a[G__29304__i] = arguments[G__29304__i + 3];
            ++G__29304__i;
          }
          args = new cljs.core.IndexedSeq(G__29304__a, 0);
        }
        return G__29303__delegate.call(this, x, y, z, args);
      };
      G__29303.cljs$lang$maxFixedArity = 3;
      G__29303.cljs$lang$applyTo = function(arglist__29305) {
        var x = cljs.core.first(arglist__29305);
        arglist__29305 = cljs.core.next(arglist__29305);
        var y = cljs.core.first(arglist__29305);
        arglist__29305 = cljs.core.next(arglist__29305);
        var z = cljs.core.first(arglist__29305);
        var args = cljs.core.rest(arglist__29305);
        return G__29303__delegate(x, y, z, args);
      };
      G__29303.cljs$core$IFn$_invoke$arity$variadic = G__29303__delegate;
      return G__29303;
    }();
    G__29302 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__29302__0.call(this);
        case 1:
          return G__29302__1.call(this, x);
        case 2:
          return G__29302__2.call(this, x, y);
        case 3:
          return G__29302__3.call(this, x, y, z);
        default:
          var G__29306 = null;
          if (arguments.length > 3) {
            var G__29307__i = 0, G__29307__a = new Array(arguments.length - 3);
            while (G__29307__i < G__29307__a.length) {
              G__29307__a[G__29307__i] = arguments[G__29307__i + 3];
              ++G__29307__i;
            }
            G__29306 = new cljs.core.IndexedSeq(G__29307__a, 0);
          }
          return G__29302__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29306);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29302.cljs$lang$maxFixedArity = 3;
    G__29302.cljs$lang$applyTo = G__29302__4.cljs$lang$applyTo;
    G__29302.cljs$core$IFn$_invoke$arity$0 = G__29302__0;
    G__29302.cljs$core$IFn$_invoke$arity$1 = G__29302__1;
    G__29302.cljs$core$IFn$_invoke$arity$2 = G__29302__2;
    G__29302.cljs$core$IFn$_invoke$arity$3 = G__29302__3;
    G__29302.cljs$core$IFn$_invoke$arity$variadic = G__29302__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29302;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__29308 = null;
    var G__29308__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__29308__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__29308__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__29308__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__29308__4 = function() {
      var G__29309__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__29309 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29310__i = 0, G__29310__a = new Array(arguments.length - 3);
          while (G__29310__i < G__29310__a.length) {
            G__29310__a[G__29310__i] = arguments[G__29310__i + 3];
            ++G__29310__i;
          }
          args = new cljs.core.IndexedSeq(G__29310__a, 0);
        }
        return G__29309__delegate.call(this, x, y, z, args);
      };
      G__29309.cljs$lang$maxFixedArity = 3;
      G__29309.cljs$lang$applyTo = function(arglist__29311) {
        var x = cljs.core.first(arglist__29311);
        arglist__29311 = cljs.core.next(arglist__29311);
        var y = cljs.core.first(arglist__29311);
        arglist__29311 = cljs.core.next(arglist__29311);
        var z = cljs.core.first(arglist__29311);
        var args = cljs.core.rest(arglist__29311);
        return G__29309__delegate(x, y, z, args);
      };
      G__29309.cljs$core$IFn$_invoke$arity$variadic = G__29309__delegate;
      return G__29309;
    }();
    G__29308 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__29308__0.call(this);
        case 1:
          return G__29308__1.call(this, x);
        case 2:
          return G__29308__2.call(this, x, y);
        case 3:
          return G__29308__3.call(this, x, y, z);
        default:
          var G__29312 = null;
          if (arguments.length > 3) {
            var G__29313__i = 0, G__29313__a = new Array(arguments.length - 3);
            while (G__29313__i < G__29313__a.length) {
              G__29313__a[G__29313__i] = arguments[G__29313__i + 3];
              ++G__29313__i;
            }
            G__29312 = new cljs.core.IndexedSeq(G__29313__a, 0);
          }
          return G__29308__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29312);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29308.cljs$lang$maxFixedArity = 3;
    G__29308.cljs$lang$applyTo = G__29308__4.cljs$lang$applyTo;
    G__29308.cljs$core$IFn$_invoke$arity$0 = G__29308__0;
    G__29308.cljs$core$IFn$_invoke$arity$1 = G__29308__1;
    G__29308.cljs$core$IFn$_invoke$arity$2 = G__29308__2;
    G__29308.cljs$core$IFn$_invoke$arity$3 = G__29308__3;
    G__29308.cljs$core$IFn$_invoke$arity$variadic = G__29308__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29308;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__29314 = null;
    var G__29314__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__29314__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__29314__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__29314__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__29314__4 = function() {
      var G__29315__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__29315 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29316__i = 0, G__29316__a = new Array(arguments.length - 3);
          while (G__29316__i < G__29316__a.length) {
            G__29316__a[G__29316__i] = arguments[G__29316__i + 3];
            ++G__29316__i;
          }
          args = new cljs.core.IndexedSeq(G__29316__a, 0);
        }
        return G__29315__delegate.call(this, x, y, z, args);
      };
      G__29315.cljs$lang$maxFixedArity = 3;
      G__29315.cljs$lang$applyTo = function(arglist__29317) {
        var x = cljs.core.first(arglist__29317);
        arglist__29317 = cljs.core.next(arglist__29317);
        var y = cljs.core.first(arglist__29317);
        arglist__29317 = cljs.core.next(arglist__29317);
        var z = cljs.core.first(arglist__29317);
        var args = cljs.core.rest(arglist__29317);
        return G__29315__delegate(x, y, z, args);
      };
      G__29315.cljs$core$IFn$_invoke$arity$variadic = G__29315__delegate;
      return G__29315;
    }();
    G__29314 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__29314__0.call(this);
        case 1:
          return G__29314__1.call(this, x);
        case 2:
          return G__29314__2.call(this, x, y);
        case 3:
          return G__29314__3.call(this, x, y, z);
        default:
          var G__29318 = null;
          if (arguments.length > 3) {
            var G__29319__i = 0, G__29319__a = new Array(arguments.length - 3);
            while (G__29319__i < G__29319__a.length) {
              G__29319__a[G__29319__i] = arguments[G__29319__i + 3];
              ++G__29319__i;
            }
            G__29318 = new cljs.core.IndexedSeq(G__29319__a, 0);
          }
          return G__29314__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29318);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29314.cljs$lang$maxFixedArity = 3;
    G__29314.cljs$lang$applyTo = G__29314__4.cljs$lang$applyTo;
    G__29314.cljs$core$IFn$_invoke$arity$0 = G__29314__0;
    G__29314.cljs$core$IFn$_invoke$arity$1 = G__29314__1;
    G__29314.cljs$core$IFn$_invoke$arity$2 = G__29314__2;
    G__29314.cljs$core$IFn$_invoke$arity$3 = G__29314__3;
    G__29314.cljs$core$IFn$_invoke$arity$variadic = G__29314__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29314;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__29320__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__29320 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__29321__i = 0, G__29321__a = new Array(arguments.length - 0);
        while (G__29321__i < G__29321__a.length) {
          G__29321__a[G__29321__i] = arguments[G__29321__i + 0];
          ++G__29321__i;
        }
        args = new cljs.core.IndexedSeq(G__29321__a, 0);
      }
      return G__29320__delegate.call(this, args);
    };
    G__29320.cljs$lang$maxFixedArity = 0;
    G__29320.cljs$lang$applyTo = function(arglist__29322) {
      var args = cljs.core.seq(arglist__29322);
      return G__29320__delegate(args);
    };
    G__29320.cljs$core$IFn$_invoke$arity$variadic = G__29320__delegate;
    return G__29320;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq29291) {
  var G__29292 = cljs.core.first(seq29291);
  var seq29291__$1 = cljs.core.next(seq29291);
  var G__29293 = cljs.core.first(seq29291__$1);
  var seq29291__$2 = cljs.core.next(seq29291__$1);
  var G__29294 = cljs.core.first(seq29291__$2);
  var seq29291__$3 = cljs.core.next(seq29291__$2);
  var G__29295 = cljs.core.first(seq29291__$3);
  var seq29291__$4 = cljs.core.next(seq29291__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__29292, G__29293, G__29294, G__29295, seq29291__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args29323 = [];
  var len__5189__auto___29342 = arguments.length;
  var i__5190__auto___29343 = 0;
  while (true) {
    if (i__5190__auto___29343 < len__5189__auto___29342) {
      args29323.push(arguments[i__5190__auto___29343]);
      var G__29344 = i__5190__auto___29343 + 1;
      i__5190__auto___29343 = G__29344;
      continue;
    } else {
    }
    break;
  }
  var G__29325 = args29323.length;
  switch(G__29325) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29323.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__29346 = null;
    var G__29346__1 = function(a) {
      var G__29326 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29326) : f.call(null, G__29326);
    };
    var G__29346__2 = function(a, b) {
      var G__29327 = a == null ? x : a;
      var G__29328 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29327, G__29328) : f.call(null, G__29327, G__29328);
    };
    var G__29346__3 = function(a, b, c) {
      var G__29329 = a == null ? x : a;
      var G__29330 = b;
      var G__29331 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29329, G__29330, G__29331) : f.call(null, G__29329, G__29330, G__29331);
    };
    var G__29346__4 = function() {
      var G__29347__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__29347 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__29348__i = 0, G__29348__a = new Array(arguments.length - 3);
          while (G__29348__i < G__29348__a.length) {
            G__29348__a[G__29348__i] = arguments[G__29348__i + 3];
            ++G__29348__i;
          }
          ds = new cljs.core.IndexedSeq(G__29348__a, 0);
        }
        return G__29347__delegate.call(this, a, b, c, ds);
      };
      G__29347.cljs$lang$maxFixedArity = 3;
      G__29347.cljs$lang$applyTo = function(arglist__29349) {
        var a = cljs.core.first(arglist__29349);
        arglist__29349 = cljs.core.next(arglist__29349);
        var b = cljs.core.first(arglist__29349);
        arglist__29349 = cljs.core.next(arglist__29349);
        var c = cljs.core.first(arglist__29349);
        var ds = cljs.core.rest(arglist__29349);
        return G__29347__delegate(a, b, c, ds);
      };
      G__29347.cljs$core$IFn$_invoke$arity$variadic = G__29347__delegate;
      return G__29347;
    }();
    G__29346 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__29346__1.call(this, a);
        case 2:
          return G__29346__2.call(this, a, b);
        case 3:
          return G__29346__3.call(this, a, b, c);
        default:
          var G__29350 = null;
          if (arguments.length > 3) {
            var G__29351__i = 0, G__29351__a = new Array(arguments.length - 3);
            while (G__29351__i < G__29351__a.length) {
              G__29351__a[G__29351__i] = arguments[G__29351__i + 3];
              ++G__29351__i;
            }
            G__29350 = new cljs.core.IndexedSeq(G__29351__a, 0);
          }
          return G__29346__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__29350);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29346.cljs$lang$maxFixedArity = 3;
    G__29346.cljs$lang$applyTo = G__29346__4.cljs$lang$applyTo;
    G__29346.cljs$core$IFn$_invoke$arity$1 = G__29346__1;
    G__29346.cljs$core$IFn$_invoke$arity$2 = G__29346__2;
    G__29346.cljs$core$IFn$_invoke$arity$3 = G__29346__3;
    G__29346.cljs$core$IFn$_invoke$arity$variadic = G__29346__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29346;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__29352 = null;
    var G__29352__2 = function(a, b) {
      var G__29332 = a == null ? x : a;
      var G__29333 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29332, G__29333) : f.call(null, G__29332, G__29333);
    };
    var G__29352__3 = function(a, b, c) {
      var G__29334 = a == null ? x : a;
      var G__29335 = b == null ? y : b;
      var G__29336 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29334, G__29335, G__29336) : f.call(null, G__29334, G__29335, G__29336);
    };
    var G__29352__4 = function() {
      var G__29353__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__29353 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__29354__i = 0, G__29354__a = new Array(arguments.length - 3);
          while (G__29354__i < G__29354__a.length) {
            G__29354__a[G__29354__i] = arguments[G__29354__i + 3];
            ++G__29354__i;
          }
          ds = new cljs.core.IndexedSeq(G__29354__a, 0);
        }
        return G__29353__delegate.call(this, a, b, c, ds);
      };
      G__29353.cljs$lang$maxFixedArity = 3;
      G__29353.cljs$lang$applyTo = function(arglist__29355) {
        var a = cljs.core.first(arglist__29355);
        arglist__29355 = cljs.core.next(arglist__29355);
        var b = cljs.core.first(arglist__29355);
        arglist__29355 = cljs.core.next(arglist__29355);
        var c = cljs.core.first(arglist__29355);
        var ds = cljs.core.rest(arglist__29355);
        return G__29353__delegate(a, b, c, ds);
      };
      G__29353.cljs$core$IFn$_invoke$arity$variadic = G__29353__delegate;
      return G__29353;
    }();
    G__29352 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__29352__2.call(this, a, b);
        case 3:
          return G__29352__3.call(this, a, b, c);
        default:
          var G__29356 = null;
          if (arguments.length > 3) {
            var G__29357__i = 0, G__29357__a = new Array(arguments.length - 3);
            while (G__29357__i < G__29357__a.length) {
              G__29357__a[G__29357__i] = arguments[G__29357__i + 3];
              ++G__29357__i;
            }
            G__29356 = new cljs.core.IndexedSeq(G__29357__a, 0);
          }
          return G__29352__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__29356);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29352.cljs$lang$maxFixedArity = 3;
    G__29352.cljs$lang$applyTo = G__29352__4.cljs$lang$applyTo;
    G__29352.cljs$core$IFn$_invoke$arity$2 = G__29352__2;
    G__29352.cljs$core$IFn$_invoke$arity$3 = G__29352__3;
    G__29352.cljs$core$IFn$_invoke$arity$variadic = G__29352__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29352;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__29358 = null;
    var G__29358__2 = function(a, b) {
      var G__29337 = a == null ? x : a;
      var G__29338 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29337, G__29338) : f.call(null, G__29337, G__29338);
    };
    var G__29358__3 = function(a, b, c) {
      var G__29339 = a == null ? x : a;
      var G__29340 = b == null ? y : b;
      var G__29341 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29339, G__29340, G__29341) : f.call(null, G__29339, G__29340, G__29341);
    };
    var G__29358__4 = function() {
      var G__29359__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__29359 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__29360__i = 0, G__29360__a = new Array(arguments.length - 3);
          while (G__29360__i < G__29360__a.length) {
            G__29360__a[G__29360__i] = arguments[G__29360__i + 3];
            ++G__29360__i;
          }
          ds = new cljs.core.IndexedSeq(G__29360__a, 0);
        }
        return G__29359__delegate.call(this, a, b, c, ds);
      };
      G__29359.cljs$lang$maxFixedArity = 3;
      G__29359.cljs$lang$applyTo = function(arglist__29361) {
        var a = cljs.core.first(arglist__29361);
        arglist__29361 = cljs.core.next(arglist__29361);
        var b = cljs.core.first(arglist__29361);
        arglist__29361 = cljs.core.next(arglist__29361);
        var c = cljs.core.first(arglist__29361);
        var ds = cljs.core.rest(arglist__29361);
        return G__29359__delegate(a, b, c, ds);
      };
      G__29359.cljs$core$IFn$_invoke$arity$variadic = G__29359__delegate;
      return G__29359;
    }();
    G__29358 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__29358__2.call(this, a, b);
        case 3:
          return G__29358__3.call(this, a, b, c);
        default:
          var G__29362 = null;
          if (arguments.length > 3) {
            var G__29363__i = 0, G__29363__a = new Array(arguments.length - 3);
            while (G__29363__i < G__29363__a.length) {
              G__29363__a[G__29363__i] = arguments[G__29363__i + 3];
              ++G__29363__i;
            }
            G__29362 = new cljs.core.IndexedSeq(G__29363__a, 0);
          }
          return G__29358__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__29362);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__29358.cljs$lang$maxFixedArity = 3;
    G__29358.cljs$lang$applyTo = G__29358__4.cljs$lang$applyTo;
    G__29358.cljs$core$IFn$_invoke$arity$2 = G__29358__2;
    G__29358.cljs$core$IFn$_invoke$arity$3 = G__29358__3;
    G__29358.cljs$core$IFn$_invoke$arity$variadic = G__29358__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__29358;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.volatile_BANG_;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args29364 = [];
  var len__5189__auto___29397 = arguments.length;
  var i__5190__auto___29398 = 0;
  while (true) {
    if (i__5190__auto___29398 < len__5189__auto___29397) {
      args29364.push(arguments[i__5190__auto___29398]);
      var G__29399 = i__5190__auto___29398 + 1;
      i__5190__auto___29398 = G__29399;
      continue;
    } else {
    }
    break;
  }
  var G__29366 = args29364.length;
  switch(G__29366) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29364.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__29401 = null;
        var G__29401__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__29401__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__29401__2 = function(result, input) {
          var G__29369 = result;
          var G__29370 = function() {
            var G__29371 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__29372 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29371, G__29372) : f.call(null, G__29371, G__29372);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29369, G__29370) : rf.call(null, G__29369, G__29370);
        };
        G__29401 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__29401__0.call(this);
            case 1:
              return G__29401__1.call(this, result);
            case 2:
              return G__29401__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__29401.cljs$core$IFn$_invoke$arity$0 = G__29401__0;
        G__29401.cljs$core$IFn$_invoke$arity$1 = G__29401__1;
        G__29401.cljs$core$IFn$_invoke$arity$2 = G__29401__2;
        return G__29401;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5034__auto___29402 = size;
          var i_29403 = 0;
          while (true) {
            if (i_29403 < n__5034__auto___29402) {
              cljs.core.chunk_append(b, function() {
                var G__29393 = idx + i_29403;
                var G__29394 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_29403);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29393, G__29394) : f.call(null, G__29393, G__29394);
              }());
              var G__29404 = i_29403 + 1;
              i_29403 = G__29404;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__29395 = idx;
            var G__29396 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29395, G__29396) : f.call(null, G__29395, G__29396);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args29405 = [];
  var len__5189__auto___29410 = arguments.length;
  var i__5190__auto___29411 = 0;
  while (true) {
    if (i__5190__auto___29411 < len__5189__auto___29410) {
      args29405.push(arguments[i__5190__auto___29411]);
      var G__29412 = i__5190__auto___29411 + 1;
      i__5190__auto___29411 = G__29412;
      continue;
    } else {
    }
    break;
  }
  var G__29407 = args29405.length;
  switch(G__29407) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29405.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__29414 = null;
      var G__29414__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__29414__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__29414__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__29414 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__29414__0.call(this);
          case 1:
            return G__29414__1.call(this, result);
          case 2:
            return G__29414__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__29414.cljs$core$IFn$_invoke$arity$0 = G__29414__0;
      G__29414.cljs$core$IFn$_invoke$arity$1 = G__29414__1;
      G__29414.cljs$core$IFn$_invoke$arity$2 = G__29414__2;
      return G__29414;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5034__auto___29415 = size;
        var i_29416 = 0;
        while (true) {
          if (i_29416 < n__5034__auto___29415) {
            var x_29417 = function() {
              var G__29408 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_29416);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29408) : f.call(null, G__29408);
            }();
            if (x_29417 == null) {
            } else {
              cljs.core.chunk_append(b, x_29417);
            }
            var G__29418 = i_29416 + 1;
            i_29416 = G__29418;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__29409 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29409) : f.call(null, G__29409);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__29419 = cljs.core.seq(self__.watches);
  var chunk__29420 = null;
  var count__29421 = 0;
  var i__29422 = 0;
  while (true) {
    if (i__29422 < count__29421) {
      var vec__29423 = chunk__29420.cljs$core$IIndexed$_nth$arity$2(null, i__29422);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29423, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29423, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__29425 = seq__29419;
      var G__29426 = chunk__29420;
      var G__29427 = count__29421;
      var G__29428 = i__29422 + 1;
      seq__29419 = G__29425;
      chunk__29420 = G__29426;
      count__29421 = G__29427;
      i__29422 = G__29428;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__29419);
      if (temp__4425__auto__) {
        var seq__29419__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__29419__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__29419__$1);
          var G__29429 = cljs.core.chunk_rest(seq__29419__$1);
          var G__29430 = c__4934__auto__;
          var G__29431 = cljs.core.count(c__4934__auto__);
          var G__29432 = 0;
          seq__29419 = G__29429;
          chunk__29420 = G__29430;
          count__29421 = G__29431;
          i__29422 = G__29432;
          continue;
        } else {
          var vec__29424 = cljs.core.first(seq__29419__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29424, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29424, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__29433 = cljs.core.next(seq__29419__$1);
          var G__29434 = null;
          var G__29435 = 0;
          var G__29436 = 0;
          seq__29419 = G__29433;
          chunk__29420 = G__29434;
          count__29421 = G__29435;
          i__29422 = G__29436;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args29437 = [];
  var len__5189__auto___29445 = arguments.length;
  var i__5190__auto___29446 = 0;
  while (true) {
    if (i__5190__auto___29446 < len__5189__auto___29445) {
      args29437.push(arguments[i__5190__auto___29446]);
      var G__29447 = i__5190__auto___29446 + 1;
      i__5190__auto___29446 = G__29447;
      continue;
    } else {
    }
    break;
  }
  var G__29441 = args29437.length;
  switch(G__29441) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29437.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5208__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__29442) {
  var map__29443 = p__29442;
  var map__29443__$1 = (!(map__29443 == null) ? map__29443.cljs$lang$protocol_mask$partition0$ & 64 || map__29443.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__29443) : map__29443;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29443__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29443__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq29438) {
  var G__29439 = cljs.core.first(seq29438);
  var seq29438__$1 = cljs.core.next(seq29438);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__29439, seq29438__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__29450 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29450) : cljs.core.pr_str.call(null, G__29450);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args29451 = [];
  var len__5189__auto___29465 = arguments.length;
  var i__5190__auto___29466 = 0;
  while (true) {
    if (i__5190__auto___29466 < len__5189__auto___29465) {
      args29451.push(arguments[i__5190__auto___29466]);
      var G__29467 = i__5190__auto___29466 + 1;
      i__5190__auto___29466 = G__29467;
      continue;
    } else {
    }
    break;
  }
  var G__29458 = args29451.length;
  switch(G__29458) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29451.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5208__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__29459 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29459) : f.call(null, G__29459);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__29460 = a.state;
      var G__29461 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29460, G__29461) : f.call(null, G__29460, G__29461);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__29462 = a.state;
      var G__29463 = x;
      var G__29464 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29462, G__29463, G__29464) : f.call(null, G__29462, G__29463, G__29464);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq29452) {
  var G__29453 = cljs.core.first(seq29452);
  var seq29452__$1 = cljs.core.next(seq29452);
  var G__29454 = cljs.core.first(seq29452__$1);
  var seq29452__$2 = cljs.core.next(seq29452__$1);
  var G__29455 = cljs.core.first(seq29452__$2);
  var seq29452__$3 = cljs.core.next(seq29452__$2);
  var G__29456 = cljs.core.first(seq29452__$3);
  var seq29452__$4 = cljs.core.next(seq29452__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__29453, G__29454, G__29455, G__29456, seq29452__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args29469 = [];
  var len__5189__auto___29500 = arguments.length;
  var i__5190__auto___29501 = 0;
  while (true) {
    if (i__5190__auto___29501 < len__5189__auto___29500) {
      args29469.push(arguments[i__5190__auto___29501]);
      var G__29502 = i__5190__auto___29501 + 1;
      i__5190__auto___29501 = G__29502;
      continue;
    } else {
    }
    break;
  }
  var G__29471 = args29469.length;
  switch(G__29471) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29469.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__29504 = null;
        var G__29504__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__29504__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__29504__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__29504 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__29504__0.call(this);
            case 1:
              return G__29504__1.call(this, result);
            case 2:
              return G__29504__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__29504.cljs$core$IFn$_invoke$arity$0 = G__29504__0;
        G__29504.cljs$core$IFn$_invoke$arity$1 = G__29504__1;
        G__29504.cljs$core$IFn$_invoke$arity$2 = G__29504__2;
        return G__29504;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5034__auto___29505 = size;
          var i_29506 = 0;
          while (true) {
            if (i_29506 < n__5034__auto___29505) {
              var x_29507 = function() {
                var G__29496 = idx + i_29506;
                var G__29497 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_29506);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29496, G__29497) : f.call(null, G__29496, G__29497);
              }();
              if (x_29507 == null) {
              } else {
                cljs.core.chunk_append(b, x_29507);
              }
              var G__29508 = i_29506 + 1;
              i_29506 = G__29508;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__29498 = idx;
            var G__29499 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29498, G__29499) : f.call(null, G__29498, G__29499);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args29515 = [];
  var len__5189__auto___29522 = arguments.length;
  var i__5190__auto___29523 = 0;
  while (true) {
    if (i__5190__auto___29523 < len__5189__auto___29522) {
      args29515.push(arguments[i__5190__auto___29523]);
      var G__29524 = i__5190__auto___29523 + 1;
      i__5190__auto___29523 = G__29524;
      continue;
    } else {
    }
    break;
  }
  var G__29521 = args29515.length;
  switch(G__29521) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29515.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4119__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__29526__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4119__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4119__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4119__auto__;
          }
        }());
      };
      var G__29526 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29527__i = 0, G__29527__a = new Array(arguments.length - 3);
          while (G__29527__i < G__29527__a.length) {
            G__29527__a[G__29527__i] = arguments[G__29527__i + 3];
            ++G__29527__i;
          }
          args = new cljs.core.IndexedSeq(G__29527__a, 0);
        }
        return G__29526__delegate.call(this, x, y, z, args);
      };
      G__29526.cljs$lang$maxFixedArity = 3;
      G__29526.cljs$lang$applyTo = function(arglist__29528) {
        var x = cljs.core.first(arglist__29528);
        arglist__29528 = cljs.core.next(arglist__29528);
        var y = cljs.core.first(arglist__29528);
        arglist__29528 = cljs.core.next(arglist__29528);
        var z = cljs.core.first(arglist__29528);
        var args = cljs.core.rest(arglist__29528);
        return G__29526__delegate(x, y, z, args);
      };
      G__29526.cljs$core$IFn$_invoke$arity$variadic = G__29526__delegate;
      return G__29526;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__29529 = null;
          if (arguments.length > 3) {
            var G__29530__i = 0, G__29530__a = new Array(arguments.length - 3);
            while (G__29530__i < G__29530__a.length) {
              G__29530__a[G__29530__i] = arguments[G__29530__i + 3];
              ++G__29530__i;
            }
            G__29529 = new cljs.core.IndexedSeq(G__29530__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29529);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4119__auto____$1)) {
            var and__4119__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4119__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4119__auto____$2;
            }
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4119__auto____$1)) {
            var and__4119__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4119__auto____$2)) {
              var and__4119__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4119__auto____$3)) {
                var and__4119__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4119__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4119__auto____$4;
                }
              } else {
                return and__4119__auto____$3;
              }
            } else {
              return and__4119__auto____$2;
            }
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__29531__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4119__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4119__auto__)) {
            return cljs.core.every_QMARK_(function(and__4119__auto__) {
              return function(p1__29509_SHARP_) {
                var and__4119__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__29509_SHARP_) : p1.call(null, p1__29509_SHARP_);
                if (cljs.core.truth_(and__4119__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__29509_SHARP_) : p2.call(null, p1__29509_SHARP_);
                } else {
                  return and__4119__auto____$1;
                }
              };
            }(and__4119__auto__), args);
          } else {
            return and__4119__auto__;
          }
        }());
      };
      var G__29531 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29532__i = 0, G__29532__a = new Array(arguments.length - 3);
          while (G__29532__i < G__29532__a.length) {
            G__29532__a[G__29532__i] = arguments[G__29532__i + 3];
            ++G__29532__i;
          }
          args = new cljs.core.IndexedSeq(G__29532__a, 0);
        }
        return G__29531__delegate.call(this, x, y, z, args);
      };
      G__29531.cljs$lang$maxFixedArity = 3;
      G__29531.cljs$lang$applyTo = function(arglist__29533) {
        var x = cljs.core.first(arglist__29533);
        arglist__29533 = cljs.core.next(arglist__29533);
        var y = cljs.core.first(arglist__29533);
        arglist__29533 = cljs.core.next(arglist__29533);
        var z = cljs.core.first(arglist__29533);
        var args = cljs.core.rest(arglist__29533);
        return G__29531__delegate(x, y, z, args);
      };
      G__29531.cljs$core$IFn$_invoke$arity$variadic = G__29531__delegate;
      return G__29531;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__29534 = null;
          if (arguments.length > 3) {
            var G__29535__i = 0, G__29535__a = new Array(arguments.length - 3);
            while (G__29535__i < G__29535__a.length) {
              G__29535__a[G__29535__i] = arguments[G__29535__i + 3];
              ++G__29535__i;
            }
            G__29534 = new cljs.core.IndexedSeq(G__29535__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29534);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4119__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4119__auto____$1)) {
            var and__4119__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4119__auto____$2)) {
              var and__4119__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4119__auto____$3)) {
                var and__4119__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4119__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4119__auto____$4;
                }
              } else {
                return and__4119__auto____$3;
              }
            } else {
              return and__4119__auto____$2;
            }
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4119__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4119__auto____$1)) {
            var and__4119__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4119__auto____$2)) {
              var and__4119__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4119__auto____$3)) {
                var and__4119__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4119__auto____$4)) {
                  var and__4119__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4119__auto____$5)) {
                    var and__4119__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4119__auto____$6)) {
                      var and__4119__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4119__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4119__auto____$7;
                      }
                    } else {
                      return and__4119__auto____$6;
                    }
                  } else {
                    return and__4119__auto____$5;
                  }
                } else {
                  return and__4119__auto____$4;
                }
              } else {
                return and__4119__auto____$3;
              }
            } else {
              return and__4119__auto____$2;
            }
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__29536__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4119__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4119__auto__)) {
            return cljs.core.every_QMARK_(function(and__4119__auto__) {
              return function(p1__29510_SHARP_) {
                var and__4119__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__29510_SHARP_) : p1.call(null, p1__29510_SHARP_);
                if (cljs.core.truth_(and__4119__auto____$1)) {
                  var and__4119__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__29510_SHARP_) : p2.call(null, p1__29510_SHARP_);
                  if (cljs.core.truth_(and__4119__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__29510_SHARP_) : p3.call(null, p1__29510_SHARP_);
                  } else {
                    return and__4119__auto____$2;
                  }
                } else {
                  return and__4119__auto____$1;
                }
              };
            }(and__4119__auto__), args);
          } else {
            return and__4119__auto__;
          }
        }());
      };
      var G__29536 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29537__i = 0, G__29537__a = new Array(arguments.length - 3);
          while (G__29537__i < G__29537__a.length) {
            G__29537__a[G__29537__i] = arguments[G__29537__i + 3];
            ++G__29537__i;
          }
          args = new cljs.core.IndexedSeq(G__29537__a, 0);
        }
        return G__29536__delegate.call(this, x, y, z, args);
      };
      G__29536.cljs$lang$maxFixedArity = 3;
      G__29536.cljs$lang$applyTo = function(arglist__29538) {
        var x = cljs.core.first(arglist__29538);
        arglist__29538 = cljs.core.next(arglist__29538);
        var y = cljs.core.first(arglist__29538);
        arglist__29538 = cljs.core.next(arglist__29538);
        var z = cljs.core.first(arglist__29538);
        var args = cljs.core.rest(arglist__29538);
        return G__29536__delegate(x, y, z, args);
      };
      G__29536.cljs$core$IFn$_invoke$arity$variadic = G__29536__delegate;
      return G__29536;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__29539 = null;
          if (arguments.length > 3) {
            var G__29540__i = 0, G__29540__a = new Array(arguments.length - 3);
            while (G__29540__i < G__29540__a.length) {
              G__29540__a[G__29540__i] = arguments[G__29540__i + 3];
              ++G__29540__i;
            }
            G__29539 = new cljs.core.IndexedSeq(G__29540__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29539);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__29511_SHARP_) {
            return p1__29511_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29511_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__29511_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__29512_SHARP_) {
            var and__4119__auto__ = p1__29512_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29512_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__29512_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4119__auto__)) {
              return p1__29512_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29512_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__29512_SHARP_.call(null, y);
            } else {
              return and__4119__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__29513_SHARP_) {
            var and__4119__auto__ = p1__29513_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29513_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__29513_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4119__auto__)) {
              var and__4119__auto____$1 = p1__29513_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29513_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__29513_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4119__auto____$1)) {
                return p1__29513_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29513_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__29513_SHARP_.call(null, z);
              } else {
                return and__4119__auto____$1;
              }
            } else {
              return and__4119__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__29541__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4119__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4119__auto__)) {
              return cljs.core.every_QMARK_(function(and__4119__auto__, ps__$1) {
                return function(p1__29514_SHARP_) {
                  return cljs.core.every_QMARK_(p1__29514_SHARP_, args);
                };
              }(and__4119__auto__, ps__$1), ps__$1);
            } else {
              return and__4119__auto__;
            }
          }());
        };
        var G__29541 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__29542__i = 0, G__29542__a = new Array(arguments.length - 3);
            while (G__29542__i < G__29542__a.length) {
              G__29542__a[G__29542__i] = arguments[G__29542__i + 3];
              ++G__29542__i;
            }
            args = new cljs.core.IndexedSeq(G__29542__a, 0);
          }
          return G__29541__delegate.call(this, x, y, z, args);
        };
        G__29541.cljs$lang$maxFixedArity = 3;
        G__29541.cljs$lang$applyTo = function(arglist__29543) {
          var x = cljs.core.first(arglist__29543);
          arglist__29543 = cljs.core.next(arglist__29543);
          var y = cljs.core.first(arglist__29543);
          arglist__29543 = cljs.core.next(arglist__29543);
          var z = cljs.core.first(arglist__29543);
          var args = cljs.core.rest(arglist__29543);
          return G__29541__delegate(x, y, z, args);
        };
        G__29541.cljs$core$IFn$_invoke$arity$variadic = G__29541__delegate;
        return G__29541;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__29544 = null;
            if (arguments.length > 3) {
              var G__29545__i = 0, G__29545__a = new Array(arguments.length - 3);
              while (G__29545__i < G__29545__a.length) {
                G__29545__a[G__29545__i] = arguments[G__29545__i + 3];
                ++G__29545__i;
              }
              G__29544 = new cljs.core.IndexedSeq(G__29545__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29544);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq29516) {
  var G__29517 = cljs.core.first(seq29516);
  var seq29516__$1 = cljs.core.next(seq29516);
  var G__29518 = cljs.core.first(seq29516__$1);
  var seq29516__$2 = cljs.core.next(seq29516__$1);
  var G__29519 = cljs.core.first(seq29516__$2);
  var seq29516__$3 = cljs.core.next(seq29516__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__29517, G__29518, G__29519, seq29516__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args29552 = [];
  var len__5189__auto___29559 = arguments.length;
  var i__5190__auto___29560 = 0;
  while (true) {
    if (i__5190__auto___29560 < len__5189__auto___29559) {
      args29552.push(arguments[i__5190__auto___29560]);
      var G__29561 = i__5190__auto___29560 + 1;
      i__5190__auto___29560 = G__29561;
      continue;
    } else {
    }
    break;
  }
  var G__29558 = args29552.length;
  switch(G__29558) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29552.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4131__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4131__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__29563__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__29563 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29564__i = 0, G__29564__a = new Array(arguments.length - 3);
          while (G__29564__i < G__29564__a.length) {
            G__29564__a[G__29564__i] = arguments[G__29564__i + 3];
            ++G__29564__i;
          }
          args = new cljs.core.IndexedSeq(G__29564__a, 0);
        }
        return G__29563__delegate.call(this, x, y, z, args);
      };
      G__29563.cljs$lang$maxFixedArity = 3;
      G__29563.cljs$lang$applyTo = function(arglist__29565) {
        var x = cljs.core.first(arglist__29565);
        arglist__29565 = cljs.core.next(arglist__29565);
        var y = cljs.core.first(arglist__29565);
        arglist__29565 = cljs.core.next(arglist__29565);
        var z = cljs.core.first(arglist__29565);
        var args = cljs.core.rest(arglist__29565);
        return G__29563__delegate(x, y, z, args);
      };
      G__29563.cljs$core$IFn$_invoke$arity$variadic = G__29563__delegate;
      return G__29563;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__29566 = null;
          if (arguments.length > 3) {
            var G__29567__i = 0, G__29567__a = new Array(arguments.length - 3);
            while (G__29567__i < G__29567__a.length) {
              G__29567__a[G__29567__i] = arguments[G__29567__i + 3];
              ++G__29567__i;
            }
            G__29566 = new cljs.core.IndexedSeq(G__29567__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29566);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__29568__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(function(or__4131__auto__) {
            return function(p1__29546_SHARP_) {
              var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__29546_SHARP_) : p1.call(null, p1__29546_SHARP_);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__29546_SHARP_) : p2.call(null, p1__29546_SHARP_);
              }
            };
          }(or__4131__auto__), args);
        }
      };
      var G__29568 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29569__i = 0, G__29569__a = new Array(arguments.length - 3);
          while (G__29569__i < G__29569__a.length) {
            G__29569__a[G__29569__i] = arguments[G__29569__i + 3];
            ++G__29569__i;
          }
          args = new cljs.core.IndexedSeq(G__29569__a, 0);
        }
        return G__29568__delegate.call(this, x, y, z, args);
      };
      G__29568.cljs$lang$maxFixedArity = 3;
      G__29568.cljs$lang$applyTo = function(arglist__29570) {
        var x = cljs.core.first(arglist__29570);
        arglist__29570 = cljs.core.next(arglist__29570);
        var y = cljs.core.first(arglist__29570);
        arglist__29570 = cljs.core.next(arglist__29570);
        var z = cljs.core.first(arglist__29570);
        var args = cljs.core.rest(arglist__29570);
        return G__29568__delegate(x, y, z, args);
      };
      G__29568.cljs$core$IFn$_invoke$arity$variadic = G__29568__delegate;
      return G__29568;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__29571 = null;
          if (arguments.length > 3) {
            var G__29572__i = 0, G__29572__a = new Array(arguments.length - 3);
            while (G__29572__i < G__29572__a.length) {
              G__29572__a[G__29572__i] = arguments[G__29572__i + 3];
              ++G__29572__i;
            }
            G__29571 = new cljs.core.IndexedSeq(G__29572__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29571);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4131__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        var or__4131__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4131__auto____$1)) {
          return or__4131__auto____$1;
        } else {
          var or__4131__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4131__auto____$2)) {
            return or__4131__auto____$2;
          } else {
            var or__4131__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4131__auto____$3)) {
              return or__4131__auto____$3;
            } else {
              var or__4131__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$4)) {
                return or__4131__auto____$4;
              } else {
                var or__4131__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4131__auto____$5)) {
                  return or__4131__auto____$5;
                } else {
                  var or__4131__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4131__auto____$6)) {
                    return or__4131__auto____$6;
                  } else {
                    var or__4131__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4131__auto____$7)) {
                      return or__4131__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__29573__delegate = function(x, y, z, args) {
        var or__4131__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.some(function(or__4131__auto__) {
            return function(p1__29547_SHARP_) {
              var or__4131__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__29547_SHARP_) : p1.call(null, p1__29547_SHARP_);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                var or__4131__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__29547_SHARP_) : p2.call(null, p1__29547_SHARP_);
                if (cljs.core.truth_(or__4131__auto____$2)) {
                  return or__4131__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__29547_SHARP_) : p3.call(null, p1__29547_SHARP_);
                }
              }
            };
          }(or__4131__auto__), args);
        }
      };
      var G__29573 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__29574__i = 0, G__29574__a = new Array(arguments.length - 3);
          while (G__29574__i < G__29574__a.length) {
            G__29574__a[G__29574__i] = arguments[G__29574__i + 3];
            ++G__29574__i;
          }
          args = new cljs.core.IndexedSeq(G__29574__a, 0);
        }
        return G__29573__delegate.call(this, x, y, z, args);
      };
      G__29573.cljs$lang$maxFixedArity = 3;
      G__29573.cljs$lang$applyTo = function(arglist__29575) {
        var x = cljs.core.first(arglist__29575);
        arglist__29575 = cljs.core.next(arglist__29575);
        var y = cljs.core.first(arglist__29575);
        arglist__29575 = cljs.core.next(arglist__29575);
        var z = cljs.core.first(arglist__29575);
        var args = cljs.core.rest(arglist__29575);
        return G__29573__delegate(x, y, z, args);
      };
      G__29573.cljs$core$IFn$_invoke$arity$variadic = G__29573__delegate;
      return G__29573;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__29576 = null;
          if (arguments.length > 3) {
            var G__29577__i = 0, G__29577__a = new Array(arguments.length - 3);
            while (G__29577__i < G__29577__a.length) {
              G__29577__a[G__29577__i] = arguments[G__29577__i + 3];
              ++G__29577__i;
            }
            G__29576 = new cljs.core.IndexedSeq(G__29577__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29576);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__29548_SHARP_) {
            return p1__29548_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29548_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__29548_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__29549_SHARP_) {
            var or__4131__auto__ = p1__29549_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29549_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__29549_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return p1__29549_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29549_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__29549_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__29550_SHARP_) {
            var or__4131__auto__ = p1__29550_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29550_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__29550_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              var or__4131__auto____$1 = p1__29550_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29550_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__29550_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4131__auto____$1)) {
                return or__4131__auto____$1;
              } else {
                return p1__29550_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__29550_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__29550_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__29578__delegate = function(x, y, z, args) {
          var or__4131__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core.some(function(or__4131__auto__, ps__$1) {
              return function(p1__29551_SHARP_) {
                return cljs.core.some(p1__29551_SHARP_, args);
              };
            }(or__4131__auto__, ps__$1), ps__$1);
          }
        };
        var G__29578 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__29579__i = 0, G__29579__a = new Array(arguments.length - 3);
            while (G__29579__i < G__29579__a.length) {
              G__29579__a[G__29579__i] = arguments[G__29579__i + 3];
              ++G__29579__i;
            }
            args = new cljs.core.IndexedSeq(G__29579__a, 0);
          }
          return G__29578__delegate.call(this, x, y, z, args);
        };
        G__29578.cljs$lang$maxFixedArity = 3;
        G__29578.cljs$lang$applyTo = function(arglist__29580) {
          var x = cljs.core.first(arglist__29580);
          arglist__29580 = cljs.core.next(arglist__29580);
          var y = cljs.core.first(arglist__29580);
          arglist__29580 = cljs.core.next(arglist__29580);
          var z = cljs.core.first(arglist__29580);
          var args = cljs.core.rest(arglist__29580);
          return G__29578__delegate(x, y, z, args);
        };
        G__29578.cljs$core$IFn$_invoke$arity$variadic = G__29578__delegate;
        return G__29578;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__29581 = null;
            if (arguments.length > 3) {
              var G__29582__i = 0, G__29582__a = new Array(arguments.length - 3);
              while (G__29582__i < G__29582__a.length) {
                G__29582__a[G__29582__i] = arguments[G__29582__i + 3];
                ++G__29582__i;
              }
              G__29581 = new cljs.core.IndexedSeq(G__29582__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__29581);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq29553) {
  var G__29554 = cljs.core.first(seq29553);
  var seq29553__$1 = cljs.core.next(seq29553);
  var G__29555 = cljs.core.first(seq29553__$1);
  var seq29553__$2 = cljs.core.next(seq29553__$1);
  var G__29556 = cljs.core.first(seq29553__$2);
  var seq29553__$3 = cljs.core.next(seq29553__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__29554, G__29555, G__29556, seq29553__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args29584 = [];
  var len__5189__auto___29604 = arguments.length;
  var i__5190__auto___29605 = 0;
  while (true) {
    if (i__5190__auto___29605 < len__5189__auto___29604) {
      args29584.push(arguments[i__5190__auto___29605]);
      var G__29606 = i__5190__auto___29605 + 1;
      i__5190__auto___29605 = G__29606;
      continue;
    } else {
    }
    break;
  }
  var G__29591 = args29584.length;
  switch(G__29591) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29584.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5208__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__29608 = null;
      var G__29608__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__29608__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__29608__2 = function(result, input) {
        var G__29592 = result;
        var G__29593 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29592, G__29593) : rf.call(null, G__29592, G__29593);
      };
      var G__29608__3 = function() {
        var G__29609__delegate = function(result, input, inputs) {
          var G__29594 = result;
          var G__29595 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__29594, G__29595) : rf.call(null, G__29594, G__29595);
        };
        var G__29609 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__29610__i = 0, G__29610__a = new Array(arguments.length - 2);
            while (G__29610__i < G__29610__a.length) {
              G__29610__a[G__29610__i] = arguments[G__29610__i + 2];
              ++G__29610__i;
            }
            inputs = new cljs.core.IndexedSeq(G__29610__a, 0);
          }
          return G__29609__delegate.call(this, result, input, inputs);
        };
        G__29609.cljs$lang$maxFixedArity = 2;
        G__29609.cljs$lang$applyTo = function(arglist__29611) {
          var result = cljs.core.first(arglist__29611);
          arglist__29611 = cljs.core.next(arglist__29611);
          var input = cljs.core.first(arglist__29611);
          var inputs = cljs.core.rest(arglist__29611);
          return G__29609__delegate(result, input, inputs);
        };
        G__29609.cljs$core$IFn$_invoke$arity$variadic = G__29609__delegate;
        return G__29609;
      }();
      G__29608 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__29608__0.call(this);
          case 1:
            return G__29608__1.call(this, result);
          case 2:
            return G__29608__2.call(this, result, input);
          default:
            var G__29612 = null;
            if (arguments.length > 2) {
              var G__29613__i = 0, G__29613__a = new Array(arguments.length - 2);
              while (G__29613__i < G__29613__a.length) {
                G__29613__a[G__29613__i] = arguments[G__29613__i + 2];
                ++G__29613__i;
              }
              G__29612 = new cljs.core.IndexedSeq(G__29613__a, 0);
            }
            return G__29608__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__29612);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__29608.cljs$lang$maxFixedArity = 2;
      G__29608.cljs$lang$applyTo = G__29608__3.cljs$lang$applyTo;
      G__29608.cljs$core$IFn$_invoke$arity$0 = G__29608__0;
      G__29608.cljs$core$IFn$_invoke$arity$1 = G__29608__1;
      G__29608.cljs$core$IFn$_invoke$arity$2 = G__29608__2;
      G__29608.cljs$core$IFn$_invoke$arity$variadic = G__29608__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__29608;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5034__auto___29614 = size;
        var i_29615 = 0;
        while (true) {
          if (i_29615 < n__5034__auto___29614) {
            cljs.core.chunk_append(b, function() {
              var G__29596 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_29615);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29596) : f.call(null, G__29596);
            }());
            var G__29616 = i_29615 + 1;
            i_29615 = G__29616;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__29597 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29597) : f.call(null, G__29597);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__29598 = cljs.core.first(s1);
        var G__29599 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29598, G__29599) : f.call(null, G__29598, G__29599);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__29600 = cljs.core.first(s1);
        var G__29601 = cljs.core.first(s2);
        var G__29602 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29600, G__29601, G__29602) : f.call(null, G__29600, G__29601, G__29602);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__29583_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__29583_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq29585) {
  var G__29586 = cljs.core.first(seq29585);
  var seq29585__$1 = cljs.core.next(seq29585);
  var G__29587 = cljs.core.first(seq29585__$1);
  var seq29585__$2 = cljs.core.next(seq29585__$1);
  var G__29588 = cljs.core.first(seq29585__$2);
  var seq29585__$3 = cljs.core.next(seq29585__$2);
  var G__29589 = cljs.core.first(seq29585__$3);
  var seq29585__$4 = cljs.core.next(seq29585__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__29586, G__29587, G__29588, G__29589, seq29585__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args29617 = [];
  var len__5189__auto___29622 = arguments.length;
  var i__5190__auto___29623 = 0;
  while (true) {
    if (i__5190__auto___29623 < len__5189__auto___29622) {
      args29617.push(arguments[i__5190__auto___29623]);
      var G__29624 = i__5190__auto___29623 + 1;
      i__5190__auto___29623 = G__29624;
      continue;
    } else {
    }
    break;
  }
  var G__29619 = args29617.length;
  switch(G__29619) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29617.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__29620 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29620) : cljs.core.pr_str.call(null, G__29620);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__29626 = null;
        var G__29626__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__29626__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__29626__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__29626 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__29626__0.call(this);
            case 1:
              return G__29626__1.call(this, result);
            case 2:
              return G__29626__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__29626.cljs$core$IFn$_invoke$arity$0 = G__29626__0;
        G__29626.cljs$core$IFn$_invoke$arity$1 = G__29626__1;
        G__29626.cljs$core$IFn$_invoke$arity$2 = G__29626__2;
        return G__29626;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__29621 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29621) : cljs.core.pr_str.call(null, G__29621);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args29627 = [];
  var len__5189__auto___29632 = arguments.length;
  var i__5190__auto___29633 = 0;
  while (true) {
    if (i__5190__auto___29633 < len__5189__auto___29632) {
      args29627.push(arguments[i__5190__auto___29633]);
      var G__29634 = i__5190__auto___29633 + 1;
      i__5190__auto___29633 = G__29634;
      continue;
    } else {
    }
    break;
  }
  var G__29629 = args29627.length;
  switch(G__29629) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29627.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__29630 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29630) : cljs.core.pr_str.call(null, G__29630);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__29636 = null;
        var G__29636__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__29636__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__29636__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__29636 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__29636__0.call(this);
            case 1:
              return G__29636__1.call(this, result);
            case 2:
              return G__29636__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__29636.cljs$core$IFn$_invoke$arity$0 = G__29636__0;
        G__29636.cljs$core$IFn$_invoke$arity$1 = G__29636__1;
        G__29636.cljs$core$IFn$_invoke$arity$2 = G__29636__2;
        return G__29636;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__29631 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__29631) : cljs.core.pr_str.call(null, G__29631);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__29637 = n__$1 - 1;
        var G__29638 = cljs.core.rest(s);
        n__$1 = G__29637;
        coll__$1 = G__29638;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args29639 = [];
  var len__5189__auto___29642 = arguments.length;
  var i__5190__auto___29643 = 0;
  while (true) {
    if (i__5190__auto___29643 < len__5189__auto___29642) {
      args29639.push(arguments[i__5190__auto___29643]);
      var G__29644 = i__5190__auto___29643 + 1;
      i__5190__auto___29643 = G__29644;
      continue;
    } else {
    }
    break;
  }
  var G__29641 = args29639.length;
  switch(G__29641) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29639.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__29646 = cljs.core.next(s);
      var G__29647 = cljs.core.next(lead);
      s = G__29646;
      lead = G__29647;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args29648 = [];
  var len__5189__auto___29653 = arguments.length;
  var i__5190__auto___29654 = 0;
  while (true) {
    if (i__5190__auto___29654 < len__5189__auto___29653) {
      args29648.push(arguments[i__5190__auto___29654]);
      var G__29655 = i__5190__auto___29654 + 1;
      i__5190__auto___29654 = G__29655;
      continue;
    } else {
    }
    break;
  }
  var G__29650 = args29648.length;
  switch(G__29650) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29648.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__29657 = null;
        var G__29657__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__29657__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__29657__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4119__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4119__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4119__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__29657 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__29657__0.call(this);
            case 1:
              return G__29657__1.call(this, result);
            case 2:
              return G__29657__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__29657.cljs$core$IFn$_invoke$arity$0 = G__29657__0;
        G__29657.cljs$core$IFn$_invoke$arity$1 = G__29657__1;
        G__29657.cljs$core$IFn$_invoke$arity$2 = G__29657__2;
        return G__29657;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4119__auto__ = s;
        if (and__4119__auto__) {
          var G__29652 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__29652) : pred__$1.call(null, G__29652);
        } else {
          return and__4119__auto__;
        }
      }())) {
        var G__29658 = pred__$1;
        var G__29659 = cljs.core.rest(s);
        pred__$1 = G__29658;
        coll__$1 = G__29659;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args29660 = [];
  var len__5189__auto___29663 = arguments.length;
  var i__5190__auto___29664 = 0;
  while (true) {
    if (i__5190__auto___29664 < len__5189__auto___29663) {
      args29660.push(arguments[i__5190__auto___29664]);
      var G__29665 = i__5190__auto___29664 + 1;
      i__5190__auto___29664 = G__29665;
      continue;
    } else {
    }
    break;
  }
  var G__29662 = args29660.length;
  switch(G__29662) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29660.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args29667 = [];
  var len__5189__auto___29670 = arguments.length;
  var i__5190__auto___29671 = 0;
  while (true) {
    if (i__5190__auto___29671 < len__5189__auto___29670) {
      args29667.push(arguments[i__5190__auto___29671]);
      var G__29672 = i__5190__auto___29671 + 1;
      i__5190__auto___29671 = G__29672;
      continue;
    } else {
    }
    break;
  }
  var G__29669 = args29667.length;
  switch(G__29669) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29667.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args29676 = [];
  var len__5189__auto___29682 = arguments.length;
  var i__5190__auto___29683 = 0;
  while (true) {
    if (i__5190__auto___29683 < len__5189__auto___29682) {
      args29676.push(arguments[i__5190__auto___29683]);
      var G__29684 = i__5190__auto___29683 + 1;
      i__5190__auto___29683 = G__29684;
      continue;
    } else {
    }
    break;
  }
  var G__29681 = args29676.length;
  switch(G__29681) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29676.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5208__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq29677) {
  var G__29678 = cljs.core.first(seq29677);
  var seq29677__$1 = cljs.core.next(seq29677);
  var G__29679 = cljs.core.first(seq29677__$1);
  var seq29677__$2 = cljs.core.next(seq29677__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__29678, G__29679, seq29677__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args29686 = [];
  var len__5189__auto___29689 = arguments.length;
  var i__5190__auto___29690 = 0;
  while (true) {
    if (i__5190__auto___29690 < len__5189__auto___29689) {
      args29686.push(arguments[i__5190__auto___29690]);
      var G__29691 = i__5190__auto___29690 + 1;
      i__5190__auto___29690 = G__29691;
      continue;
    } else {
    }
    break;
  }
  var G__29688 = args29686.length;
  switch(G__29688) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29686.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__29693 = null;
        var G__29693__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__29693__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__29693__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__29693 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__29693__0.call(this);
            case 1:
              return G__29693__1.call(this, result);
            case 2:
              return G__29693__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__29693.cljs$core$IFn$_invoke$arity$0 = G__29693__0;
        G__29693.cljs$core$IFn$_invoke$arity$1 = G__29693__1;
        G__29693.cljs$core$IFn$_invoke$arity$2 = G__29693__2;
        return G__29693;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.cat;
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args29702 = [];
  var len__5189__auto___29707 = arguments.length;
  var i__5190__auto___29708 = 0;
  while (true) {
    if (i__5190__auto___29708 < len__5189__auto___29707) {
      args29702.push(arguments[i__5190__auto___29708]);
      var G__29709 = i__5190__auto___29708 + 1;
      i__5190__auto___29708 = G__29709;
      continue;
    } else {
    }
    break;
  }
  var G__29706 = args29702.length;
  switch(G__29706) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29702.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5208__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq29703) {
  var G__29704 = cljs.core.first(seq29703);
  var seq29703__$1 = cljs.core.next(seq29703);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__29704, seq29703__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args29711 = [];
  var len__5189__auto___29715 = arguments.length;
  var i__5190__auto___29716 = 0;
  while (true) {
    if (i__5190__auto___29716 < len__5189__auto___29715) {
      args29711.push(arguments[i__5190__auto___29716]);
      var G__29717 = i__5190__auto___29716 + 1;
      i__5190__auto___29716 = G__29717;
      continue;
    } else {
    }
    break;
  }
  var G__29713 = args29711.length;
  switch(G__29713) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29711.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__29719 = null;
      var G__29719__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__29719__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__29719__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__29719 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__29719__0.call(this);
          case 1:
            return G__29719__1.call(this, result);
          case 2:
            return G__29719__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__29719.cljs$core$IFn$_invoke$arity$0 = G__29719__0;
      G__29719.cljs$core$IFn$_invoke$arity$1 = G__29719__1;
      G__29719.cljs$core$IFn$_invoke$arity$2 = G__29719__2;
      return G__29719;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5034__auto___29720 = size;
        var i_29721 = 0;
        while (true) {
          if (i_29721 < n__5034__auto___29720) {
            if (cljs.core.truth_(function() {
              var G__29714 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_29721);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__29714) : pred.call(null, G__29714);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_29721));
            } else {
            }
            var G__29722 = i_29721 + 1;
            i_29721 = G__29722;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args29723 = [];
  var len__5189__auto___29726 = arguments.length;
  var i__5190__auto___29727 = 0;
  while (true) {
    if (i__5190__auto___29727 < len__5189__auto___29726) {
      args29723.push(arguments[i__5190__auto___29727]);
      var G__29728 = i__5190__auto___29727 + 1;
      i__5190__auto___29727 = G__29728;
      continue;
    } else {
    }
    break;
  }
  var G__29725 = args29723.length;
  switch(G__29725) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29723.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__29730_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__29730_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args29731 = [];
  var len__5189__auto___29736 = arguments.length;
  var i__5190__auto___29737 = 0;
  while (true) {
    if (i__5190__auto___29737 < len__5189__auto___29736) {
      args29731.push(arguments[i__5190__auto___29737]);
      var G__29738 = i__5190__auto___29737 + 1;
      i__5190__auto___29737 = G__29738;
      continue;
    } else {
    }
    break;
  }
  var G__29733 = args29731.length;
  switch(G__29733) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29731.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args29740 = [];
  var len__5189__auto___29748 = arguments.length;
  var i__5190__auto___29749 = 0;
  while (true) {
    if (i__5190__auto___29749 < len__5189__auto___29748) {
      args29740.push(arguments[i__5190__auto___29749]);
      var G__29750 = i__5190__auto___29749 + 1;
      i__5190__auto___29749 = G__29750;
      continue;
    } else {
    }
    break;
  }
  var G__29747 = args29740.length;
  switch(G__29747) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29740.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5208__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq29741) {
  var G__29742 = cljs.core.first(seq29741);
  var seq29741__$1 = cljs.core.next(seq29741);
  var G__29743 = cljs.core.first(seq29741__$1);
  var seq29741__$2 = cljs.core.next(seq29741__$1);
  var G__29744 = cljs.core.first(seq29741__$2);
  var seq29741__$3 = cljs.core.next(seq29741__$2);
  var G__29745 = cljs.core.first(seq29741__$3);
  var seq29741__$4 = cljs.core.next(seq29741__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__29742, G__29743, G__29744, G__29745, seq29741__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args29752 = [];
  var len__5189__auto___29755 = arguments.length;
  var i__5190__auto___29756 = 0;
  while (true) {
    if (i__5190__auto___29756 < len__5189__auto___29755) {
      args29752.push(arguments[i__5190__auto___29756]);
      var G__29757 = i__5190__auto___29756 + 1;
      i__5190__auto___29756 = G__29757;
      continue;
    } else {
    }
    break;
  }
  var G__29754 = args29752.length;
  switch(G__29754) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29752.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args29759 = [];
  var len__5189__auto___29763 = arguments.length;
  var i__5190__auto___29764 = 0;
  while (true) {
    if (i__5190__auto___29764 < len__5189__auto___29763) {
      args29759.push(arguments[i__5190__auto___29764]);
      var G__29765 = i__5190__auto___29764 + 1;
      i__5190__auto___29764 = G__29765;
      continue;
    } else {
    }
    break;
  }
  var G__29761 = args29759.length;
  switch(G__29761) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29759.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__29767 = sentinel;
          var G__29768 = m__$2;
          var G__29769 = cljs.core.next(ks__$1);
          sentinel = G__29767;
          m__$1 = G__29768;
          ks__$1 = G__29769;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__29770, v) {
  var vec__29775 = p__29770;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29775, 0, null);
  var ks = cljs.core.nthnext(vec__29775, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args29776 = [];
  var len__5189__auto___29806 = arguments.length;
  var i__5190__auto___29807 = 0;
  while (true) {
    if (i__5190__auto___29807 < len__5189__auto___29806) {
      args29776.push(arguments[i__5190__auto___29807]);
      var G__29808 = i__5190__auto___29807 + 1;
      i__5190__auto___29807 = G__29808;
      continue;
    } else {
    }
    break;
  }
  var G__29785 = args29776.length;
  switch(G__29785) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29776.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5208__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__29786, f) {
  var vec__29787 = p__29786;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29787, 0, null);
  var ks = cljs.core.nthnext(vec__29787, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__29788 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29788) : f.call(null, G__29788);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__29789, f, a) {
  var vec__29790 = p__29789;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29790, 0, null);
  var ks = cljs.core.nthnext(vec__29790, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__29791 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__29792 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29791, G__29792) : f.call(null, G__29791, G__29792);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__29793, f, a, b) {
  var vec__29794 = p__29793;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29794, 0, null);
  var ks = cljs.core.nthnext(vec__29794, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__29795 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__29796 = a;
      var G__29797 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29795, G__29796, G__29797) : f.call(null, G__29795, G__29796, G__29797);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__29798, f, a, b, c) {
  var vec__29799 = p__29798;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29799, 0, null);
  var ks = cljs.core.nthnext(vec__29799, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__29800 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__29801 = a;
      var G__29802 = b;
      var G__29803 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29800, G__29801, G__29802, G__29803) : f.call(null, G__29800, G__29801, G__29802, G__29803);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__29804, f, a, b, c, args) {
  var vec__29805 = p__29804;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29805, 0, null);
  var ks = cljs.core.nthnext(vec__29805, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq29777) {
  var G__29778 = cljs.core.first(seq29777);
  var seq29777__$1 = cljs.core.next(seq29777);
  var G__29779 = cljs.core.first(seq29777__$1);
  var seq29777__$2 = cljs.core.next(seq29777__$1);
  var G__29780 = cljs.core.first(seq29777__$2);
  var seq29777__$3 = cljs.core.next(seq29777__$2);
  var G__29781 = cljs.core.first(seq29777__$3);
  var seq29777__$4 = cljs.core.next(seq29777__$3);
  var G__29782 = cljs.core.first(seq29777__$4);
  var seq29777__$5 = cljs.core.next(seq29777__$4);
  var G__29783 = cljs.core.first(seq29777__$5);
  var seq29777__$6 = cljs.core.next(seq29777__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__29778, G__29779, G__29780, G__29781, G__29782, G__29783, seq29777__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args29810 = [];
  var len__5189__auto___29830 = arguments.length;
  var i__5190__auto___29831 = 0;
  while (true) {
    if (i__5190__auto___29831 < len__5189__auto___29830) {
      args29810.push(arguments[i__5190__auto___29831]);
      var G__29832 = i__5190__auto___29831 + 1;
      i__5190__auto___29831 = G__29832;
      continue;
    } else {
    }
    break;
  }
  var G__29819 = args29810.length;
  switch(G__29819) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args29810.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5208__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__29820 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__29820) : f.call(null, G__29820);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__29821 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__29822 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29821, G__29822) : f.call(null, G__29821, G__29822);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__29823 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__29824 = x;
    var G__29825 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29823, G__29824, G__29825) : f.call(null, G__29823, G__29824, G__29825);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__29826 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__29827 = x;
    var G__29828 = y;
    var G__29829 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__29826, G__29827, G__29828, G__29829) : f.call(null, G__29826, G__29827, G__29828, G__29829);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq29811) {
  var G__29812 = cljs.core.first(seq29811);
  var seq29811__$1 = cljs.core.next(seq29811);
  var G__29813 = cljs.core.first(seq29811__$1);
  var seq29811__$2 = cljs.core.next(seq29811__$1);
  var G__29814 = cljs.core.first(seq29811__$2);
  var seq29811__$3 = cljs.core.next(seq29811__$2);
  var G__29815 = cljs.core.first(seq29811__$3);
  var seq29811__$4 = cljs.core.next(seq29811__$3);
  var G__29816 = cljs.core.first(seq29811__$4);
  var seq29811__$5 = cljs.core.next(seq29811__$4);
  var G__29817 = cljs.core.first(seq29811__$5);
  var seq29811__$6 = cljs.core.next(seq29811__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__29812, G__29813, G__29814, G__29815, G__29816, G__29817, seq29811__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__29834 = ll - 5;
      var G__29835 = r;
      ll = G__29834;
      ret = G__29835;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__29840 = cljs.core.pv_aget(node, 0);
      var G__29841 = level - 5;
      node = G__29840;
      level = G__29841;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__29842 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__29843 = level - 5;
        node = G__29842;
        level = G__29843;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.tv_editable_root;
cljs.core.tv_editable_tail;
cljs.core.TransientVector;
cljs.core.deref;
cljs.core.pr_sequential_writer;
cljs.core.pr_writer;
cljs.core.chunked_seq;
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__29853 = init__$2;
              var G__29854 = j + i;
              var G__29855 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29853, G__29854, G__29855) : f.call(null, G__29853, G__29854, G__29855);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__29862 = j + 1;
              var G__29863 = init__$3;
              j = G__29862;
              init__$2 = G__29863;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__29864 = i + len;
        var G__29865 = init__$2;
        i = G__29864;
        init__$1 = G__29865;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__29856 = init__$2;
              var G__29857 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29856, G__29857) : f.call(null, G__29856, G__29857);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__29866 = j + 1;
              var G__29867 = init__$3;
              j = G__29866;
              init__$2 = G__29867;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__29868 = i + len;
        var G__29869 = init__$2;
        i = G__29868;
        init__$1 = G__29869;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__29858 = coll__$1;
      var G__29859 = cljs.core.first_array_for_longvec(coll__$1);
      var G__29860 = 0;
      var G__29861 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29858, G__29859, G__29860, G__29861) : cljs.core.chunked_seq.call(null, G__29858, G__29859, G__29860, G__29861);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5034__auto___29870 = len;
    var i_29871 = 0;
    while (true) {
      if (i_29871 < n__5034__auto___29870) {
        new_tail[i_29871] = self__.tail[i_29871];
        var G__29872 = i_29871 + 1;
        i_29871 = G__29872;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__29873 = null;
  var G__29873__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__29873__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__29873 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__29873__2.call(this, self__, k);
      case 3:
        return G__29873__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__29873.cljs$core$IFn$_invoke$arity$2 = G__29873__2;
  G__29873.cljs$core$IFn$_invoke$arity$3 = G__29873__3;
  return G__29873;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args29852) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args29852)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__29874 = i + 1;
        var G__29875 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__29874;
        out = G__29875;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___29877 = arguments.length;
  var i__5190__auto___29878 = 0;
  while (true) {
    if (i__5190__auto___29878 < len__5189__auto___29877) {
      args__5196__auto__.push(arguments[i__5190__auto___29878]);
      var G__29879 = i__5190__auto___29878 + 1;
      i__5190__auto___29878 = G__29879;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq29876) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq29876));
};
cljs.core.subvec;
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__29880 = self__.vec;
      var G__29881 = self__.node;
      var G__29882 = self__.i;
      var G__29883 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29880, G__29881, G__29882, G__29883) : cljs.core.chunked_seq.call(null, G__29880, G__29881, G__29882, G__29883);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__29884 = self__.vec;
    var G__29885 = self__.i + self__.off;
    var G__29886 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__29884, G__29885, G__29886) : cljs.core.subvec.call(null, G__29884, G__29885, G__29886);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__29887 = self__.vec;
    var G__29888 = self__.i + self__.off;
    var G__29889 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__29887, G__29888, G__29889) : cljs.core.subvec.call(null, G__29887, G__29888, G__29889);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__29890 = self__.vec;
      var G__29891 = self__.node;
      var G__29892 = self__.i;
      var G__29893 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29890, G__29891, G__29892, G__29893) : cljs.core.chunked_seq.call(null, G__29890, G__29891, G__29892, G__29893);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__29894 = self__.vec;
    var G__29895 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__29896 = end;
    var G__29897 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29894, G__29895, G__29896, G__29897) : cljs.core.chunked_seq.call(null, G__29894, G__29895, G__29896, G__29897);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__29898 = self__.vec;
    var G__29899 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__29900 = end;
    var G__29901 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__29898, G__29899, G__29900, G__29901) : cljs.core.chunked_seq.call(null, G__29898, G__29899, G__29900, G__29901);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args29902 = [];
  var len__5189__auto___29905 = arguments.length;
  var i__5190__auto___29906 = 0;
  while (true) {
    if (i__5190__auto___29906 < len__5189__auto___29905) {
      args29902.push(arguments[i__5190__auto___29906]);
      var G__29907 = i__5190__auto___29906 + 1;
      i__5190__auto___29906 = G__29907;
      continue;
    } else {
    }
    break;
  }
  var G__29904 = args29902.length;
  switch(G__29904) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29902.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.build_subvec;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__29910 = init__$1;
        var G__29911 = j;
        var G__29912 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29910, G__29911, G__29912) : f.call(null, G__29910, G__29911, G__29912);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__29929 = i + 1;
        var G__29930 = j + 1;
        var G__29931 = init__$2;
        i = G__29929;
        j = G__29930;
        init__$1 = G__29931;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__29913 = self__.meta;
  var G__29914 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__29915 = self__.start;
  var G__29916 = function() {
    var x__4462__auto__ = self__.end;
    var y__4463__auto__ = v_pos + 1;
    return x__4462__auto__ > y__4463__auto__ ? x__4462__auto__ : y__4463__auto__;
  }();
  var G__29917 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29913, G__29914, G__29915, G__29916, G__29917) : cljs.core.build_subvec.call(null, G__29913, G__29914, G__29915, G__29916, G__29917);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__29918 = self__.meta;
    var G__29919 = self__.v;
    var G__29920 = self__.start;
    var G__29921 = self__.end - 1;
    var G__29922 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29918, G__29919, G__29920, G__29921, G__29922) : cljs.core.build_subvec.call(null, G__29918, G__29919, G__29920, G__29921, G__29922);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__29924 = self__.meta;
  var G__29925 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__29926 = self__.start;
  var G__29927 = self__.end + 1;
  var G__29928 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__29924, G__29925, G__29926, G__29927, G__29928) : cljs.core.build_subvec.call(null, G__29924, G__29925, G__29926, G__29927, G__29928);
};
cljs.core.Subvec.prototype.call = function() {
  var G__29932 = null;
  var G__29932__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__29932__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__29932 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__29932__2.call(this, self__, k);
      case 3:
        return G__29932__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__29932.cljs$core$IFn$_invoke$arity$2 = G__29932__2;
  G__29932.cljs$core$IFn$_invoke$arity$3 = G__29932__3;
  return G__29932;
}();
cljs.core.Subvec.prototype.apply = function(self__, args29909) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args29909)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__29933 = meta;
      var G__29934 = v.v;
      var G__29935 = v.start + start;
      var G__29936 = v.start + end;
      var G__29937 = __hash;
      meta = G__29933;
      v = G__29934;
      start = G__29935;
      end = G__29936;
      __hash = G__29937;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args29938 = [];
  var len__5189__auto___29941 = arguments.length;
  var i__5190__auto___29942 = 0;
  while (true) {
    if (i__5190__auto___29942 < len__5189__auto___29941) {
      args29938.push(arguments[i__5190__auto___29942]);
      var G__29943 = i__5190__auto___29942 + 1;
      i__5190__auto___29942 = G__29943;
      continue;
    } else {
    }
    break;
  }
  var G__29940 = args29938.length;
  switch(G__29940) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29938.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__29956 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__29957 = level - 5;
        node = G__29956;
        level = G__29957;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__29961 = null;
  var G__29961__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__29961__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__29961 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__29961__2.call(this, self__, k);
      case 3:
        return G__29961__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__29961.cljs$core$IFn$_invoke$arity$2 = G__29961__2;
  G__29961.cljs$core$IFn$_invoke$arity$3 = G__29961__3;
  return G__29961;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args29958) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args29958)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4131__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var and__4119__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4119__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4119__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4131__auto__ = self__.front;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4131__auto__ = self__.rear;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__29962 = i + incr;
        i = G__29962;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__29963 = i + 1;
      var G__29964 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__29963;
      out = G__29964;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_29969 = 0;
  while (true) {
    if (i_29969 < l) {
      var k_29970 = ks[i_29969];
      new_obj[k_29970] = obj[k_29970];
      var G__29971 = i_29969 + 1;
      i_29969 = G__29971;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__29974 = init__$1;
        var G__29975 = k;
        var G__29976 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29974, G__29975, G__29976) : f.call(null, G__29974, G__29975, G__29976);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__29977 = cljs.core.rest(keys__$1);
        var G__29978 = init__$2;
        keys__$1 = G__29977;
        init__$1 = G__29978;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__29972_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__29972_SHARP_, self__.strobj[p1__29972_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__29979 = null;
  var G__29979__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__29979__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__29979 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__29979__2.call(this, self__, k);
      case 3:
        return G__29979__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__29979.cljs$core$IFn$_invoke$arity$2 = G__29979__2;
  G__29979.cljs$core$IFn$_invoke$arity$3 = G__29979__3;
  return G__29979;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args29973) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args29973)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4131__auto__ = self__.i < self__.base_count;
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__29982 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29982, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29982, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__29983 = i + 2;
        i = G__29983;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__29984 = i + 2;
        i = G__29984;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__29985 = i + 2;
        i = G__29985;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__29986 = i + 2;
        i = G__29986;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__29987 = i + 2;
        i = G__29987;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_29988 = 0;
  while (true) {
    if (i_29988 < l) {
      narr[i_29988] = arr[i_29988];
      var G__29989 = i_29988 + 1;
      i_29988 = G__29989;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.TransientArrayMap;
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.keys;
cljs.core.vals;
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__29991 = cljs.core.seq(coll);
  var chunk__29992 = null;
  var count__29993 = 0;
  var i__29994 = 0;
  while (true) {
    if (i__29994 < count__29993) {
      var vec__29995 = chunk__29992.cljs$core$IIndexed$_nth$arity$2(null, i__29994);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29995, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29995, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__30004 = seq__29991;
      var G__30005 = chunk__29992;
      var G__30006 = count__29993;
      var G__30007 = i__29994 + 1;
      seq__29991 = G__30004;
      chunk__29992 = G__30005;
      count__29993 = G__30006;
      i__29994 = G__30007;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__29991);
      if (temp__4425__auto__) {
        var seq__29991__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__29991__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__29991__$1);
          var G__30008 = cljs.core.chunk_rest(seq__29991__$1);
          var G__30009 = c__4934__auto__;
          var G__30010 = cljs.core.count(c__4934__auto__);
          var G__30011 = 0;
          seq__29991 = G__30008;
          chunk__29992 = G__30009;
          count__29993 = G__30010;
          i__29994 = G__30011;
          continue;
        } else {
          var vec__29996 = cljs.core.first(seq__29991__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29996, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29996, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__30012 = cljs.core.next(seq__29991__$1);
          var G__30013 = null;
          var G__30014 = 0;
          var G__30015 = 0;
          seq__29991 = G__30012;
          chunk__29992 = G__30013;
          count__29993 = G__30014;
          i__29994 = G__30015;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__29997 = init__$1;
        var G__29998 = self__.arr[i];
        var G__29999 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__29997, G__29998, G__29999) : f.call(null, G__29997, G__29998, G__29999);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__30016 = i + 2;
        var G__30017 = init__$2;
        i = G__30016;
        init__$1 = G__30017;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__30018 = i + 2;
              i = G__30018;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__30019 = s + 2;
            var G__30020 = d;
            s = G__30019;
            d = G__30020;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__30021 = s + 2;
            var G__30022 = d + 2;
            s = G__30021;
            d = G__30022;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__30003 = cljs.core.aclone(self__.arr);
        G__30003[idx + 1] = v;
        return G__30003;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__30023 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__30024 = cljs.core.next(es);
          ret = G__30023;
          es = G__30024;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__30025 = null;
  var G__30025__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30025__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30025 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30025__2.call(this, self__, k);
      case 3:
        return G__30025__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30025.cljs$core$IFn$_invoke$arity$2 = G__30025__2;
  G__30025.cljs$core$IFn$_invoke$arity$3 = G__30025__3;
  return G__30025;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args29990) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args29990)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_30026 = 0;
    while (true) {
      if (i_30026 < arr__$1.length) {
        var k_30027 = arr__$1[i_30026];
        var v_30028 = arr__$1[i_30026 + 1];
        var idx_30029 = cljs.core.array_index_of(ret, k_30027);
        if (idx_30029 === -1) {
          ret.push(k_30027);
          ret.push(v_30028);
        } else {
        }
        var G__30030 = i_30026 + 2;
        i_30026 = G__30030;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.array__GT_transient_hash_map;
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__30033 = cljs.core.next(es);
          var G__30034 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__30033;
          tcoll__$2 = G__30034;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__30032_30035 = self__.arr;
      G__30032_30035.pop();
      G__30032_30035.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.TransientHashMap;
cljs.core.PersistentHashMap;
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__30036 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__30037 = i + 2;
      out = G__30036;
      i = G__30037;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.create_inode_seq;
cljs.core.create_array_node_seq;
cljs.core.reset_BANG_;
cljs.core.create_node;
cljs.core.atom;
cljs.core.deref;
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args30038 = [];
  var len__5189__auto___30043 = arguments.length;
  var i__5190__auto___30044 = 0;
  while (true) {
    if (i__5190__auto___30044 < len__5189__auto___30043) {
      args30038.push(arguments[i__5190__auto___30044]);
      var G__30045 = i__5190__auto___30044 + 1;
      i__5190__auto___30044 = G__30045;
      continue;
    } else {
    }
    break;
  }
  var G__30040 = args30038.length;
  switch(G__30040) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30038.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__30041 = cljs.core.aclone(arr);
  G__30041[i] = a;
  return G__30041;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__30042 = cljs.core.aclone(arr);
  G__30042[i] = a;
  G__30042[j] = b;
  return G__30042;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args30047 = [];
  var len__5189__auto___30050 = arguments.length;
  var i__5190__auto___30051 = 0;
  while (true) {
    if (i__5190__auto___30051 < len__5189__auto___30050) {
      args30047.push(arguments[i__5190__auto___30051]);
      var G__30052 = i__5190__auto___30051 + 1;
      i__5190__auto___30051 = G__30052;
      continue;
    } else {
    }
    break;
  }
  var G__30049 = args30047.length;
  switch(G__30049) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30047.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__30057 = init__$1;
          var G__30058 = k;
          var G__30059 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30057, G__30058, G__30059) : f.call(null, G__30057, G__30058, G__30059);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__30060 = i + 2;
        var G__30061 = init__$2;
        i = G__30060;
        init__$1 = G__30061;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode;
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4131__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_30075 = 0;
        var j_30076 = 0;
        while (true) {
          if (i_30075 < 32) {
            if ((self__.bitmap >>> i_30075 & 1) === 0) {
              var G__30077 = i_30075 + 1;
              var G__30078 = j_30076;
              i_30075 = G__30077;
              j_30076 = G__30078;
              continue;
            } else {
              nodes[i_30075] = !(self__.arr[j_30076] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_30076]), self__.arr[j_30076], self__.arr[j_30076 + 1], added_leaf_QMARK_) : self__.arr[j_30076 + 1];
              var G__30079 = i_30075 + 1;
              var G__30080 = j_30076 + 2;
              i_30075 = G__30079;
              j_30076 = G__30080;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__30062 = edit__$1;
          var G__30063 = shift + 5;
          var G__30064 = key_or_nil;
          var G__30065 = val_or_node;
          var G__30066 = hash;
          var G__30067 = key;
          var G__30068 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__30062, G__30063, G__30064, G__30065, G__30066, G__30067, G__30068) : cljs.core.create_node.call(null, G__30062, G__30063, G__30064, G__30065, G__30066, G__30067, G__30068);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_30081 = 0;
      var j_30082 = 0;
      while (true) {
        if (i_30081 < 32) {
          if ((self__.bitmap >>> i_30081 & 1) === 0) {
            var G__30083 = i_30081 + 1;
            var G__30084 = j_30082;
            i_30081 = G__30083;
            j_30082 = G__30084;
            continue;
          } else {
            nodes[i_30081] = !(self__.arr[j_30082] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_30082]), self__.arr[j_30082], self__.arr[j_30082 + 1], added_leaf_QMARK_) : self__.arr[j_30082 + 1];
            var G__30085 = i_30081 + 1;
            var G__30086 = j_30082 + 2;
            i_30081 = G__30085;
            j_30082 = G__30086;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__30069 = shift + 5;
          var G__30070 = key_or_nil;
          var G__30071 = val_or_node;
          var G__30072 = hash;
          var G__30073 = key;
          var G__30074 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__30069, G__30070, G__30071, G__30072, G__30073, G__30074) : cljs.core.create_node.call(null, G__30069, G__30070, G__30071, G__30072, G__30073, G__30074);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__30087 = i + 1;
        var G__30088 = j + 2;
        var G__30089 = bitmap | 1 << i;
        i = G__30087;
        j = G__30088;
        bitmap = G__30089;
        continue;
      } else {
        var G__30090 = i + 1;
        var G__30091 = j;
        var G__30092 = bitmap;
        i = G__30090;
        j = G__30091;
        bitmap = G__30092;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__30093 = i + 1;
          var G__30094 = init__$2;
          i = G__30093;
          init__$1 = G__30094;
          continue;
        }
      } else {
        var G__30095 = i + 1;
        var G__30096 = init__$1;
        i = G__30095;
        init__$1 = G__30096;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__30097 = i + 2;
        i = G__30097;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args30098 = [];
  var len__5189__auto___30101 = arguments.length;
  var i__5190__auto___30102 = 0;
  while (true) {
    if (i__5190__auto___30102 < len__5189__auto___30101) {
      args30098.push(arguments[i__5190__auto___30102]);
      var G__30103 = i__5190__auto___30102 + 1;
      i__5190__auto___30102 = G__30103;
      continue;
    } else {
    }
    break;
  }
  var G__30100 = args30098.length;
  switch(G__30100) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30098.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__30105 = self__.nodes;
    var G__30106 = self__.i + 2;
    var G__30107 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__30105, G__30106, G__30107) : cljs.core.create_inode_seq.call(null, G__30105, G__30106, G__30107);
  } else {
    var G__30108 = self__.nodes;
    var G__30109 = self__.i;
    var G__30110 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__30108, G__30109, G__30110) : cljs.core.create_inode_seq.call(null, G__30108, G__30109, G__30110);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args30111 = [];
  var len__5189__auto___30114 = arguments.length;
  var i__5190__auto___30115 = 0;
  while (true) {
    if (i__5190__auto___30115 < len__5189__auto___30114) {
      args30111.push(arguments[i__5190__auto___30115]);
      var G__30116 = i__5190__auto___30115 + 1;
      i__5190__auto___30115 = G__30116;
      continue;
    } else {
    }
    break;
  }
  var G__30113 = args30111.length;
  switch(G__30113) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30111.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__30118 = j + 2;
              j = G__30118;
              continue;
            }
          } else {
            var G__30119 = j + 2;
            j = G__30119;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__30120 = null;
  var G__30121 = self__.nodes;
  var G__30122 = self__.i;
  var G__30123 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__30120, G__30121, G__30122, G__30123) : cljs.core.create_array_node_seq.call(null, G__30120, G__30121, G__30122, G__30123);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args30124 = [];
  var len__5189__auto___30127 = arguments.length;
  var i__5190__auto___30128 = 0;
  while (true) {
    if (i__5190__auto___30128 < len__5189__auto___30127) {
      args30124.push(arguments[i__5190__auto___30128]);
      var G__30129 = i__5190__auto___30128 + 1;
      i__5190__auto___30128 = G__30129;
      continue;
    } else {
    }
    break;
  }
  var G__30126 = args30124.length;
  switch(G__30126) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30124.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__30131 = j + 1;
            j = G__30131;
            continue;
          }
        } else {
          var G__30132 = j + 1;
          j = G__30132;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.TransientHashMap;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__30134 = cljs.core.seq(coll);
  var chunk__30135 = null;
  var count__30136 = 0;
  var i__30137 = 0;
  while (true) {
    if (i__30137 < count__30136) {
      var vec__30138 = chunk__30135.cljs$core$IIndexed$_nth$arity$2(null, i__30137);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30138, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30138, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__30142 = seq__30134;
      var G__30143 = chunk__30135;
      var G__30144 = count__30136;
      var G__30145 = i__30137 + 1;
      seq__30134 = G__30142;
      chunk__30135 = G__30143;
      count__30136 = G__30144;
      i__30137 = G__30145;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__30134);
      if (temp__4425__auto__) {
        var seq__30134__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__30134__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__30134__$1);
          var G__30146 = cljs.core.chunk_rest(seq__30134__$1);
          var G__30147 = c__4934__auto__;
          var G__30148 = cljs.core.count(c__4934__auto__);
          var G__30149 = 0;
          seq__30134 = G__30146;
          chunk__30135 = G__30147;
          count__30136 = G__30148;
          i__30137 = G__30149;
          continue;
        } else {
          var vec__30139 = cljs.core.first(seq__30134__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30139, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30139, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__30150 = cljs.core.next(seq__30134__$1);
          var G__30151 = null;
          var G__30152 = 0;
          var G__30153 = 0;
          seq__30134 = G__30150;
          chunk__30135 = G__30151;
          count__30136 = G__30152;
          i__30137 = G__30153;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__30154 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__30155 = cljs.core.next(es);
          ret = G__30154;
          es = G__30155;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__30156 = null;
  var G__30156__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30156__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30156 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30156__2.call(this, self__, k);
      case 3:
        return G__30156__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30156.cljs$core$IFn$_invoke$arity$2 = G__30156__2;
  G__30156.cljs$core$IFn$_invoke$arity$3 = G__30156__3;
  return G__30156;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args30133) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30133)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__30157 = i + 2;
      var G__30158 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__30157;
      ret = G__30158;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__30159 = i + 1;
      var G__30160 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__30159;
      out = G__30160;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__30162 = cljs.core.next(es);
          var G__30163 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__30162;
          tcoll__$1 = G__30163;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__30164 = ascending_QMARK_ ? t.left : t.right;
      var G__30165 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__30164;
      stack__$1 = G__30165;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.RedNode;
cljs.core.BlackNode;
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__30175 = init__$1;
      var G__30176 = node.key;
      var G__30177 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30175, G__30176, G__30177) : f.call(null, G__30175, G__30176, G__30177);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__30179 = null;
  var G__30179__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30179__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30179 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30179__2.call(this, self__, k);
      case 3:
        return G__30179__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30179.cljs$core$IFn$_invoke$arity$2 = G__30179__2;
  G__30179.cljs$core$IFn$_invoke$arity$3 = G__30179__3;
  return G__30179;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args30178) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30178)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__30181 = null;
  var G__30181__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30181__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30181 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30181__2.call(this, self__, k);
      case 3:
        return G__30181__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30181.cljs$core$IFn$_invoke$arity$2 = G__30181__2;
  G__30181.cljs$core$IFn$_invoke$arity$3 = G__30181__3;
  return G__30181;
}();
cljs.core.RedNode.prototype.apply = function(self__, args30180) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30180)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__30194 = k;
      var G__30195 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__30194, G__30195) : comp.call(null, G__30194, G__30195);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__30214 = k;
      var G__30215 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__30214, G__30215) : comp.call(null, G__30214, G__30215);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.key;
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__30225 = cljs.core.seq(coll);
  var chunk__30226 = null;
  var count__30227 = 0;
  var i__30228 = 0;
  while (true) {
    if (i__30228 < count__30227) {
      var vec__30229 = chunk__30226.cljs$core$IIndexed$_nth$arity$2(null, i__30228);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30229, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30229, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__30235 = seq__30225;
      var G__30236 = chunk__30226;
      var G__30237 = count__30227;
      var G__30238 = i__30228 + 1;
      seq__30225 = G__30235;
      chunk__30226 = G__30236;
      count__30227 = G__30237;
      i__30228 = G__30238;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__30225);
      if (temp__4425__auto__) {
        var seq__30225__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__30225__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__30225__$1);
          var G__30239 = cljs.core.chunk_rest(seq__30225__$1);
          var G__30240 = c__4934__auto__;
          var G__30241 = cljs.core.count(c__4934__auto__);
          var G__30242 = 0;
          seq__30225 = G__30239;
          chunk__30226 = G__30240;
          count__30227 = G__30241;
          i__30228 = G__30242;
          continue;
        } else {
          var vec__30230 = cljs.core.first(seq__30225__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30230, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30230, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__30243 = cljs.core.next(seq__30225__$1);
          var G__30244 = null;
          var G__30245 = 0;
          var G__30246 = 0;
          seq__30225 = G__30243;
          chunk__30226 = G__30244;
          count__30227 = G__30245;
          i__30228 = G__30246;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__30231 = k;
        var G__30232 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__30231, G__30232) : self__.comp.call(null, G__30231, G__30232);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__30247 = t.left;
          t = G__30247;
          continue;
        } else {
          var G__30248 = t.right;
          t = G__30248;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__30249 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__30250 = cljs.core.next(es);
          ret = G__30249;
          es = G__30250;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__30251 = null;
  var G__30251__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30251__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30251 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30251__2.call(this, self__, k);
      case 3:
        return G__30251__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30251.cljs$core$IFn$_invoke$arity$2 = G__30251__2;
  G__30251.cljs$core$IFn$_invoke$arity$3 = G__30251__3;
  return G__30251;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args30224) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30224)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__30233 = k;
          var G__30234 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__30233, G__30234) : self__.comp.call(null, G__30233, G__30234);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__30252 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__30253 = t.left;
              stack = G__30252;
              t = G__30253;
              continue;
            } else {
              var G__30254 = stack;
              var G__30255 = t.right;
              stack = G__30254;
              t = G__30255;
              continue;
            }
          } else {
            if (c > 0) {
              var G__30256 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__30257 = t.right;
              stack = G__30256;
              t = G__30257;
              continue;
            } else {
              var G__30258 = stack;
              var G__30259 = t.left;
              stack = G__30258;
              t = G__30259;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30261 = arguments.length;
  var i__5190__auto___30262 = 0;
  while (true) {
    if (i__5190__auto___30262 < len__5189__auto___30261) {
      args__5196__auto__.push(arguments[i__5190__auto___30262]);
      var G__30263 = i__5190__auto___30262 + 1;
      i__5190__auto___30262 = G__30263;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__30264 = cljs.core.nnext(in$);
      var G__30265 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__30264;
      out = G__30265;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq30260) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30260));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30267 = arguments.length;
  var i__5190__auto___30268 = 0;
  while (true) {
    if (i__5190__auto___30268 < len__5189__auto___30267) {
      args__5196__auto__.push(arguments[i__5190__auto___30268]);
      var G__30269 = i__5190__auto___30268 + 1;
      i__5190__auto___30268 = G__30269;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq30266) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30266));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30273 = arguments.length;
  var i__5190__auto___30274 = 0;
  while (true) {
    if (i__5190__auto___30274 < len__5189__auto___30273) {
      args__5196__auto__.push(arguments[i__5190__auto___30274]);
      var G__30275 = i__5190__auto___30274 + 1;
      i__5190__auto___30274 = G__30275;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__30276 = cljs.core.nnext(kvs);
      kvs = G__30276;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq30270) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30270));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30278 = arguments.length;
  var i__5190__auto___30279 = 0;
  while (true) {
    if (i__5190__auto___30279 < len__5189__auto___30278) {
      args__5196__auto__.push(arguments[i__5190__auto___30279]);
      var G__30280 = i__5190__auto___30279 + 1;
      i__5190__auto___30279 = G__30280;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__30281 = cljs.core.nnext(in$);
      var G__30282 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__30281;
      out = G__30282;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq30277) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30277));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30285 = arguments.length;
  var i__5190__auto___30286 = 0;
  while (true) {
    if (i__5190__auto___30286 < len__5189__auto___30285) {
      args__5196__auto__.push(arguments[i__5190__auto___30286]);
      var G__30287 = i__5190__auto___30286 + 1;
      i__5190__auto___30286 = G__30287;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 1 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5197__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__30288 = cljs.core.nnext(in$);
      var G__30289 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__30288;
      out = G__30289;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq30283) {
  var G__30284 = cljs.core.first(seq30283);
  var seq30283__$1 = cljs.core.next(seq30283);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__30284, seq30283__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30297 = arguments.length;
  var i__5190__auto___30298 = 0;
  while (true) {
    if (i__5190__auto___30298 < len__5189__auto___30297) {
      args__5196__auto__.push(arguments[i__5190__auto___30298]);
      var G__30299 = i__5190__auto___30298 + 1;
      i__5190__auto___30298 = G__30299;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__30294_SHARP_, p2__30295_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4131__auto__ = p1__30294_SHARP_;
        if (cljs.core.truth_(or__4131__auto__)) {
          return or__4131__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__30295_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq30296) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30296));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30304 = arguments.length;
  var i__5190__auto___30305 = 0;
  while (true) {
    if (i__5190__auto___30305 < len__5189__auto___30304) {
      args__5196__auto__.push(arguments[i__5190__auto___30305]);
      var G__30306 = i__5190__auto___30305 + 1;
      i__5190__auto___30305 = G__30306;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 1 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5197__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__30302 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__30303 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30302, G__30303) : f.call(null, G__30302, G__30303);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4131__auto__ = m1;
          if (cljs.core.truth_(or__4131__auto__)) {
            return or__4131__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq30300) {
  var G__30301 = cljs.core.first(seq30300);
  var seq30300__$1 = cljs.core.next(seq30300);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__30301, seq30300__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__30307 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__30308 = cljs.core.next(keys);
      ret = G__30307;
      keys = G__30308;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.TransientHashSet;
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__30311 = cljs.core.seq(coll);
  var chunk__30312 = null;
  var count__30313 = 0;
  var i__30314 = 0;
  while (true) {
    if (i__30314 < count__30313) {
      var vec__30315 = chunk__30312.cljs$core$IIndexed$_nth$arity$2(null, i__30314);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30315, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30315, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__30317 = seq__30311;
      var G__30318 = chunk__30312;
      var G__30319 = count__30313;
      var G__30320 = i__30314 + 1;
      seq__30311 = G__30317;
      chunk__30312 = G__30318;
      count__30313 = G__30319;
      i__30314 = G__30320;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__30311);
      if (temp__4425__auto__) {
        var seq__30311__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__30311__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__30311__$1);
          var G__30321 = cljs.core.chunk_rest(seq__30311__$1);
          var G__30322 = c__4934__auto__;
          var G__30323 = cljs.core.count(c__4934__auto__);
          var G__30324 = 0;
          seq__30311 = G__30321;
          chunk__30312 = G__30322;
          count__30313 = G__30323;
          i__30314 = G__30324;
          continue;
        } else {
          var vec__30316 = cljs.core.first(seq__30311__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30316, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30316, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__30325 = cljs.core.next(seq__30311__$1);
          var G__30326 = null;
          var G__30327 = 0;
          var G__30328 = 0;
          seq__30311 = G__30325;
          chunk__30312 = G__30326;
          count__30313 = G__30327;
          i__30314 = G__30328;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__30309_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__30309_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__30329 = null;
  var G__30329__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30329__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30329 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30329__2.call(this, self__, k);
      case 3:
        return G__30329__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30329.cljs$core$IFn$_invoke$arity$2 = G__30329__2;
  G__30329.cljs$core$IFn$_invoke$arity$3 = G__30329__3;
  return G__30329;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args30310) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30310)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__30330 = i + 1;
        var G__30331 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__30330;
        out = G__30331;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__30332 = i + 1;
        var G__30333 = cljs.core._conj_BANG_(out, items[i]);
        i = G__30332;
        out = G__30333;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__30335 = null;
  var G__30335__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__30335__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__30335 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30335__2.call(this, self__, k);
      case 3:
        return G__30335__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30335.cljs$core$IFn$_invoke$arity$2 = G__30335__2;
  G__30335.cljs$core$IFn$_invoke$arity$3 = G__30335__3;
  return G__30335;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args30334) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30334)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__30338 = cljs.core.seq(coll);
  var chunk__30339 = null;
  var count__30340 = 0;
  var i__30341 = 0;
  while (true) {
    if (i__30341 < count__30340) {
      var vec__30342 = chunk__30339.cljs$core$IIndexed$_nth$arity$2(null, i__30341);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30342, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30342, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__30344 = seq__30338;
      var G__30345 = chunk__30339;
      var G__30346 = count__30340;
      var G__30347 = i__30341 + 1;
      seq__30338 = G__30344;
      chunk__30339 = G__30345;
      count__30340 = G__30346;
      i__30341 = G__30347;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__30338);
      if (temp__4425__auto__) {
        var seq__30338__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__30338__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__30338__$1);
          var G__30348 = cljs.core.chunk_rest(seq__30338__$1);
          var G__30349 = c__4934__auto__;
          var G__30350 = cljs.core.count(c__4934__auto__);
          var G__30351 = 0;
          seq__30338 = G__30348;
          chunk__30339 = G__30349;
          count__30340 = G__30350;
          i__30341 = G__30351;
          continue;
        } else {
          var vec__30343 = cljs.core.first(seq__30338__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30343, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30343, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__30352 = cljs.core.next(seq__30338__$1);
          var G__30353 = null;
          var G__30354 = 0;
          var G__30355 = 0;
          seq__30338 = G__30352;
          chunk__30339 = G__30353;
          count__30340 = G__30354;
          i__30341 = G__30355;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__30336_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__30336_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__30356 = null;
  var G__30356__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__30356__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__30356 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__30356__2.call(this, self__, k);
      case 3:
        return G__30356__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30356.cljs$core$IFn$_invoke$arity$2 = G__30356__2;
  G__30356.cljs$core$IFn$_invoke$arity$3 = G__30356__3;
  return G__30356;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args30337) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30337)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5028__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5028__auto__.length) {
        var G__30357 = i + 1;
        var G__30358 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__30357;
        res = G__30358;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__30359 = cljs.core.next(in$__$1);
          var G__30360 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__30359;
          out = G__30360;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args30361 = [];
  var len__5189__auto___30365 = arguments.length;
  var i__5190__auto___30366 = 0;
  while (true) {
    if (i__5190__auto___30366 < len__5189__auto___30365) {
      args30361.push(arguments[i__5190__auto___30366]);
      var G__30367 = i__5190__auto___30366 + 1;
      i__5190__auto___30366 = G__30367;
      continue;
    } else {
    }
    break;
  }
  var G__30364 = args30361.length;
  switch(G__30364) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args30361.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5208__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq30362) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30362));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30370 = arguments.length;
  var i__5190__auto___30371 = 0;
  while (true) {
    if (i__5190__auto___30371 < len__5189__auto___30370) {
      args__5196__auto__.push(arguments[i__5190__auto___30371]);
      var G__30372 = i__5190__auto___30371 + 1;
      i__5190__auto___30371 = G__30372;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq30369) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30369));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30375 = arguments.length;
  var i__5190__auto___30376 = 0;
  while (true) {
    if (i__5190__auto___30376 < len__5189__auto___30375) {
      args__5196__auto__.push(arguments[i__5190__auto___30376]);
      var G__30377 = i__5190__auto___30376 + 1;
      i__5190__auto___30376 = G__30377;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 1 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5197__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq30373) {
  var G__30374 = cljs.core.first(seq30373);
  var seq30373__$1 = cljs.core.next(seq30373);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__30374, seq30373__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args30380 = [];
  var len__5189__auto___30383 = arguments.length;
  var i__5190__auto___30384 = 0;
  while (true) {
    if (i__5190__auto___30384 < len__5189__auto___30383) {
      args30380.push(arguments[i__5190__auto___30384]);
      var G__30385 = i__5190__auto___30384 + 1;
      i__5190__auto___30384 = G__30385;
      continue;
    } else {
    }
    break;
  }
  var G__30382 = args30380.length;
  switch(G__30382) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30380.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__30378_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__30378_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__30378_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__30379_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__30379_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__30379_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args30387 = [];
  var len__5189__auto___30396 = arguments.length;
  var i__5190__auto___30397 = 0;
  while (true) {
    if (i__5190__auto___30397 < len__5189__auto___30396) {
      args30387.push(arguments[i__5190__auto___30397]);
      var G__30398 = i__5190__auto___30397 + 1;
      i__5190__auto___30397 = G__30398;
      continue;
    } else {
    }
    break;
  }
  var G__30389 = args30387.length;
  switch(G__30389) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30387.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__30400 = null;
        var G__30400__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__30400__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__30400__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__30400 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__30400__0.call(this);
            case 1:
              return G__30400__1.call(this, result);
            case 2:
              return G__30400__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__30400.cljs$core$IFn$_invoke$arity$0 = G__30400__0;
        G__30400.cljs$core$IFn$_invoke$arity$1 = G__30400__1;
        G__30400.cljs$core$IFn$_invoke$arity$2 = G__30400__2;
        return G__30400;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__30394, seen__$1) {
        while (true) {
          var vec__30395 = p__30394;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30395, 0, null);
          var xs__$1 = vec__30395;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__30401 = cljs.core.rest(s);
              var G__30402 = seen__$1;
              p__30394 = G__30401;
              seen__$1 = G__30402;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__30403 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__30404 = cljs.core.next(s__$1);
      ret = G__30403;
      s__$1 = G__30404;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__30407 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__30408 = cljs.core.next(ks);
      var G__30409 = cljs.core.next(vs);
      map = G__30407;
      ks = G__30408;
      vs = G__30409;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args30412 = [];
  var len__5189__auto___30419 = arguments.length;
  var i__5190__auto___30420 = 0;
  while (true) {
    if (i__5190__auto___30420 < len__5189__auto___30419) {
      args30412.push(arguments[i__5190__auto___30420]);
      var G__30421 = i__5190__auto___30420 + 1;
      i__5190__auto___30420 = G__30421;
      continue;
    } else {
    }
    break;
  }
  var G__30418 = args30412.length;
  switch(G__30418) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args30412.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__30410_SHARP_, p2__30411_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__30410_SHARP_, p2__30411_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq30413) {
  var G__30414 = cljs.core.first(seq30413);
  var seq30413__$1 = cljs.core.next(seq30413);
  var G__30415 = cljs.core.first(seq30413__$1);
  var seq30413__$2 = cljs.core.next(seq30413__$1);
  var G__30416 = cljs.core.first(seq30413__$2);
  var seq30413__$3 = cljs.core.next(seq30413__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__30414, G__30415, G__30416, seq30413__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args30425 = [];
  var len__5189__auto___30432 = arguments.length;
  var i__5190__auto___30433 = 0;
  while (true) {
    if (i__5190__auto___30433 < len__5189__auto___30432) {
      args30425.push(arguments[i__5190__auto___30433]);
      var G__30434 = i__5190__auto___30433 + 1;
      i__5190__auto___30433 = G__30434;
      continue;
    } else {
    }
    break;
  }
  var G__30431 = args30425.length;
  switch(G__30431) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args30425.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__30423_SHARP_, p2__30424_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__30423_SHARP_, p2__30424_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq30426) {
  var G__30427 = cljs.core.first(seq30426);
  var seq30426__$1 = cljs.core.next(seq30426);
  var G__30428 = cljs.core.first(seq30426__$1);
  var seq30426__$2 = cljs.core.next(seq30426__$1);
  var G__30429 = cljs.core.first(seq30426__$2);
  var seq30426__$3 = cljs.core.next(seq30426__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__30427, G__30428, G__30429, seq30426__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args30436 = [];
  var len__5189__auto___30439 = arguments.length;
  var i__5190__auto___30440 = 0;
  while (true) {
    if (i__5190__auto___30440 < len__5189__auto___30439) {
      args30436.push(arguments[i__5190__auto___30440]);
      var G__30441 = i__5190__auto___30440 + 1;
      i__5190__auto___30440 = G__30441;
      continue;
    } else {
    }
    break;
  }
  var G__30438 = args30436.length;
  switch(G__30438) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30436.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__30443 = null;
        var G__30443__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__30443__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__30443__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__30443 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__30443__0.call(this);
            case 1:
              return G__30443__1.call(this, result);
            case 2:
              return G__30443__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__30443.cljs$core$IFn$_invoke$arity$0 = G__30443__0;
        G__30443.cljs$core$IFn$_invoke$arity$1 = G__30443__1;
        G__30443.cljs$core$IFn$_invoke$arity$2 = G__30443__2;
        return G__30443;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args30444 = [];
  var len__5189__auto___30448 = arguments.length;
  var i__5190__auto___30449 = 0;
  while (true) {
    if (i__5190__auto___30449 < len__5189__auto___30448) {
      args30444.push(arguments[i__5190__auto___30449]);
      var G__30450 = i__5190__auto___30449 + 1;
      i__5190__auto___30449 = G__30450;
      continue;
    } else {
    }
    break;
  }
  var G__30446 = args30444.length;
  switch(G__30446) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30444.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__30452 = null;
      var G__30452__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__30452__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__30452__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__30452 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__30452__0.call(this);
          case 1:
            return G__30452__1.call(this, result);
          case 2:
            return G__30452__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__30452.cljs$core$IFn$_invoke$arity$0 = G__30452__0;
      G__30452.cljs$core$IFn$_invoke$arity$1 = G__30452__1;
      G__30452.cljs$core$IFn$_invoke$arity$2 = G__30452__2;
      return G__30452;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__30447 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__30447) : pred.call(null, G__30447);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__30461 = function() {
      var G__30463 = cljs.core._entry_key(sc, e);
      var G__30464 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__30463, G__30464) : comp.call(null, G__30463, G__30464);
    }();
    var G__30462 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__30461, G__30462) : test.call(null, G__30461, G__30462);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args30465 = [];
  var len__5189__auto___30470 = arguments.length;
  var i__5190__auto___30471 = 0;
  while (true) {
    if (i__5190__auto___30471 < len__5189__auto___30470) {
      args30465.push(arguments[i__5190__auto___30471]);
      var G__30472 = i__5190__auto___30471 + 1;
      i__5190__auto___30471 = G__30472;
      continue;
    } else {
    }
    break;
  }
  var G__30467 = args30465.length;
  switch(G__30467) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30465.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__30468 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30468, 0, null);
      var s = vec__30468;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__30469 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30469, 0, null);
    var s = vec__30469;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args30474 = [];
  var len__5189__auto___30479 = arguments.length;
  var i__5190__auto___30480 = 0;
  while (true) {
    if (i__5190__auto___30480 < len__5189__auto___30479) {
      args30474.push(arguments[i__5190__auto___30480]);
      var G__30481 = i__5190__auto___30480 + 1;
      i__5190__auto___30480 = G__30481;
      continue;
    } else {
    }
    break;
  }
  var G__30476 = args30474.length;
  switch(G__30476) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30474.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__30477 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30477, 0, null);
      var s = vec__30477;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__30478 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30478, 0, null);
    var s = vec__30478;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__30483 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__30483);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__30484 = i + self__.step;
        var G__30485 = ret__$1;
        i = G__30484;
        ret = G__30485;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args30486 = [];
  var len__5189__auto___30489 = arguments.length;
  var i__5190__auto___30490 = 0;
  while (true) {
    if (i__5190__auto___30490 < len__5189__auto___30489) {
      args30486.push(arguments[i__5190__auto___30490]);
      var G__30491 = i__5190__auto___30490 + 1;
      i__5190__auto___30490 = G__30491;
      continue;
    } else {
    }
    break;
  }
  var G__30488 = args30486.length;
  switch(G__30488) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30486.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args30493 = [];
  var len__5189__auto___30498 = arguments.length;
  var i__5190__auto___30499 = 0;
  while (true) {
    if (i__5190__auto___30499 < len__5189__auto___30498) {
      args30493.push(arguments[i__5190__auto___30499]);
      var G__30500 = i__5190__auto___30499 + 1;
      i__5190__auto___30499 = G__30500;
      continue;
    } else {
    }
    break;
  }
  var G__30495 = args30493.length;
  switch(G__30495) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30493.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__30496 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__30496) : cljs.core.pr_str.call(null, G__30496);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__30502 = null;
        var G__30502__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__30502__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__30502__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__30502 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__30502__0.call(this);
            case 1:
              return G__30502__1.call(this, result);
            case 2:
              return G__30502__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__30502.cljs$core$IFn$_invoke$arity$0 = G__30502__0;
        G__30502.cljs$core$IFn$_invoke$arity$1 = G__30502__1;
        G__30502.cljs$core$IFn$_invoke$arity$2 = G__30502__2;
        return G__30502;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__30497 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__30497) : cljs.core.pr_str.call(null, G__30497);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args30504 = [];
  var len__5189__auto___30507 = arguments.length;
  var i__5190__auto___30508 = 0;
  while (true) {
    if (i__5190__auto___30508 < len__5189__auto___30507) {
      args30504.push(arguments[i__5190__auto___30508]);
      var G__30509 = i__5190__auto___30508 + 1;
      i__5190__auto___30508 = G__30509;
      continue;
    } else {
    }
    break;
  }
  var G__30506 = args30504.length;
  switch(G__30506) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30504.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__30511 = null;
        var G__30511__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__30511__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__30511__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__30511 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__30511__0.call(this);
            case 1:
              return G__30511__1.call(this, result);
            case 2:
              return G__30511__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__30511.cljs$core$IFn$_invoke$arity$0 = G__30511__0;
        G__30511.cljs$core$IFn$_invoke$arity$1 = G__30511__1;
        G__30511.cljs$core$IFn$_invoke$arity$2 = G__30511__2;
        return G__30511;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__30503_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__30503_SHARP_) : f.call(null, p1__30503_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args30512 = [];
  var len__5189__auto___30517 = arguments.length;
  var i__5190__auto___30518 = 0;
  while (true) {
    if (i__5190__auto___30518 < len__5189__auto___30517) {
      args30512.push(arguments[i__5190__auto___30518]);
      var G__30519 = i__5190__auto___30518 + 1;
      i__5190__auto___30518 = G__30519;
      continue;
    } else {
    }
    break;
  }
  var G__30514 = args30512.length;
  switch(G__30514) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30512.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__30515 = init;
        var G__30516 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30515, G__30516) : f.call(null, G__30515, G__30516);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args30531 = [];
  var len__5189__auto___30538 = arguments.length;
  var i__5190__auto___30539 = 0;
  while (true) {
    if (i__5190__auto___30539 < len__5189__auto___30538) {
      args30531.push(arguments[i__5190__auto___30539]);
      var G__30540 = i__5190__auto___30539 + 1;
      i__5190__auto___30539 = G__30540;
      continue;
    } else {
    }
    break;
  }
  var G__30537 = args30531.length;
  switch(G__30537) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args30531.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5208__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__30542 = null;
    var G__30542__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__30542__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__30542__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__30542__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__30542__4 = function() {
      var G__30543__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__30543 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__30544__i = 0, G__30544__a = new Array(arguments.length - 3);
          while (G__30544__i < G__30544__a.length) {
            G__30544__a[G__30544__i] = arguments[G__30544__i + 3];
            ++G__30544__i;
          }
          args = new cljs.core.IndexedSeq(G__30544__a, 0);
        }
        return G__30543__delegate.call(this, x, y, z, args);
      };
      G__30543.cljs$lang$maxFixedArity = 3;
      G__30543.cljs$lang$applyTo = function(arglist__30545) {
        var x = cljs.core.first(arglist__30545);
        arglist__30545 = cljs.core.next(arglist__30545);
        var y = cljs.core.first(arglist__30545);
        arglist__30545 = cljs.core.next(arglist__30545);
        var z = cljs.core.first(arglist__30545);
        var args = cljs.core.rest(arglist__30545);
        return G__30543__delegate(x, y, z, args);
      };
      G__30543.cljs$core$IFn$_invoke$arity$variadic = G__30543__delegate;
      return G__30543;
    }();
    G__30542 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__30542__0.call(this);
        case 1:
          return G__30542__1.call(this, x);
        case 2:
          return G__30542__2.call(this, x, y);
        case 3:
          return G__30542__3.call(this, x, y, z);
        default:
          var G__30546 = null;
          if (arguments.length > 3) {
            var G__30547__i = 0, G__30547__a = new Array(arguments.length - 3);
            while (G__30547__i < G__30547__a.length) {
              G__30547__a[G__30547__i] = arguments[G__30547__i + 3];
              ++G__30547__i;
            }
            G__30546 = new cljs.core.IndexedSeq(G__30547__a, 0);
          }
          return G__30542__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__30546);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__30542.cljs$lang$maxFixedArity = 3;
    G__30542.cljs$lang$applyTo = G__30542__4.cljs$lang$applyTo;
    G__30542.cljs$core$IFn$_invoke$arity$0 = G__30542__0;
    G__30542.cljs$core$IFn$_invoke$arity$1 = G__30542__1;
    G__30542.cljs$core$IFn$_invoke$arity$2 = G__30542__2;
    G__30542.cljs$core$IFn$_invoke$arity$3 = G__30542__3;
    G__30542.cljs$core$IFn$_invoke$arity$variadic = G__30542__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__30542;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__30548 = null;
    var G__30548__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__30548__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__30548__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__30548__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__30548__4 = function() {
      var G__30549__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__30549 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__30550__i = 0, G__30550__a = new Array(arguments.length - 3);
          while (G__30550__i < G__30550__a.length) {
            G__30550__a[G__30550__i] = arguments[G__30550__i + 3];
            ++G__30550__i;
          }
          args = new cljs.core.IndexedSeq(G__30550__a, 0);
        }
        return G__30549__delegate.call(this, x, y, z, args);
      };
      G__30549.cljs$lang$maxFixedArity = 3;
      G__30549.cljs$lang$applyTo = function(arglist__30551) {
        var x = cljs.core.first(arglist__30551);
        arglist__30551 = cljs.core.next(arglist__30551);
        var y = cljs.core.first(arglist__30551);
        arglist__30551 = cljs.core.next(arglist__30551);
        var z = cljs.core.first(arglist__30551);
        var args = cljs.core.rest(arglist__30551);
        return G__30549__delegate(x, y, z, args);
      };
      G__30549.cljs$core$IFn$_invoke$arity$variadic = G__30549__delegate;
      return G__30549;
    }();
    G__30548 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__30548__0.call(this);
        case 1:
          return G__30548__1.call(this, x);
        case 2:
          return G__30548__2.call(this, x, y);
        case 3:
          return G__30548__3.call(this, x, y, z);
        default:
          var G__30552 = null;
          if (arguments.length > 3) {
            var G__30553__i = 0, G__30553__a = new Array(arguments.length - 3);
            while (G__30553__i < G__30553__a.length) {
              G__30553__a[G__30553__i] = arguments[G__30553__i + 3];
              ++G__30553__i;
            }
            G__30552 = new cljs.core.IndexedSeq(G__30553__a, 0);
          }
          return G__30548__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__30552);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__30548.cljs$lang$maxFixedArity = 3;
    G__30548.cljs$lang$applyTo = G__30548__4.cljs$lang$applyTo;
    G__30548.cljs$core$IFn$_invoke$arity$0 = G__30548__0;
    G__30548.cljs$core$IFn$_invoke$arity$1 = G__30548__1;
    G__30548.cljs$core$IFn$_invoke$arity$2 = G__30548__2;
    G__30548.cljs$core$IFn$_invoke$arity$3 = G__30548__3;
    G__30548.cljs$core$IFn$_invoke$arity$variadic = G__30548__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__30548;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__30554 = null;
    var G__30554__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__30554__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__30554__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__30554__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__30554__4 = function() {
      var G__30555__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__30555 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__30556__i = 0, G__30556__a = new Array(arguments.length - 3);
          while (G__30556__i < G__30556__a.length) {
            G__30556__a[G__30556__i] = arguments[G__30556__i + 3];
            ++G__30556__i;
          }
          args = new cljs.core.IndexedSeq(G__30556__a, 0);
        }
        return G__30555__delegate.call(this, x, y, z, args);
      };
      G__30555.cljs$lang$maxFixedArity = 3;
      G__30555.cljs$lang$applyTo = function(arglist__30557) {
        var x = cljs.core.first(arglist__30557);
        arglist__30557 = cljs.core.next(arglist__30557);
        var y = cljs.core.first(arglist__30557);
        arglist__30557 = cljs.core.next(arglist__30557);
        var z = cljs.core.first(arglist__30557);
        var args = cljs.core.rest(arglist__30557);
        return G__30555__delegate(x, y, z, args);
      };
      G__30555.cljs$core$IFn$_invoke$arity$variadic = G__30555__delegate;
      return G__30555;
    }();
    G__30554 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__30554__0.call(this);
        case 1:
          return G__30554__1.call(this, x);
        case 2:
          return G__30554__2.call(this, x, y);
        case 3:
          return G__30554__3.call(this, x, y, z);
        default:
          var G__30558 = null;
          if (arguments.length > 3) {
            var G__30559__i = 0, G__30559__a = new Array(arguments.length - 3);
            while (G__30559__i < G__30559__a.length) {
              G__30559__a[G__30559__i] = arguments[G__30559__i + 3];
              ++G__30559__i;
            }
            G__30558 = new cljs.core.IndexedSeq(G__30559__a, 0);
          }
          return G__30554__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__30558);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__30554.cljs$lang$maxFixedArity = 3;
    G__30554.cljs$lang$applyTo = G__30554__4.cljs$lang$applyTo;
    G__30554.cljs$core$IFn$_invoke$arity$0 = G__30554__0;
    G__30554.cljs$core$IFn$_invoke$arity$1 = G__30554__1;
    G__30554.cljs$core$IFn$_invoke$arity$2 = G__30554__2;
    G__30554.cljs$core$IFn$_invoke$arity$3 = G__30554__3;
    G__30554.cljs$core$IFn$_invoke$arity$variadic = G__30554__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__30554;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__30560 = null;
      var G__30560__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__30521_SHARP_, p2__30522_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30521_SHARP_, p2__30522_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__30522_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__30522_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__30560__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__30523_SHARP_, p2__30524_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30523_SHARP_, p2__30524_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__30524_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__30524_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__30560__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__30525_SHARP_, p2__30526_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30525_SHARP_, p2__30526_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__30526_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__30526_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__30560__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__30527_SHARP_, p2__30528_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30527_SHARP_, p2__30528_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__30528_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__30528_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__30560__4 = function() {
        var G__30561__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__30529_SHARP_, p2__30530_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__30529_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__30530_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__30561 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__30562__i = 0, G__30562__a = new Array(arguments.length - 3);
            while (G__30562__i < G__30562__a.length) {
              G__30562__a[G__30562__i] = arguments[G__30562__i + 3];
              ++G__30562__i;
            }
            args = new cljs.core.IndexedSeq(G__30562__a, 0);
          }
          return G__30561__delegate.call(this, x, y, z, args);
        };
        G__30561.cljs$lang$maxFixedArity = 3;
        G__30561.cljs$lang$applyTo = function(arglist__30563) {
          var x = cljs.core.first(arglist__30563);
          arglist__30563 = cljs.core.next(arglist__30563);
          var y = cljs.core.first(arglist__30563);
          arglist__30563 = cljs.core.next(arglist__30563);
          var z = cljs.core.first(arglist__30563);
          var args = cljs.core.rest(arglist__30563);
          return G__30561__delegate(x, y, z, args);
        };
        G__30561.cljs$core$IFn$_invoke$arity$variadic = G__30561__delegate;
        return G__30561;
      }();
      G__30560 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__30560__0.call(this);
          case 1:
            return G__30560__1.call(this, x);
          case 2:
            return G__30560__2.call(this, x, y);
          case 3:
            return G__30560__3.call(this, x, y, z);
          default:
            var G__30564 = null;
            if (arguments.length > 3) {
              var G__30565__i = 0, G__30565__a = new Array(arguments.length - 3);
              while (G__30565__i < G__30565__a.length) {
                G__30565__a[G__30565__i] = arguments[G__30565__i + 3];
                ++G__30565__i;
              }
              G__30564 = new cljs.core.IndexedSeq(G__30565__a, 0);
            }
            return G__30560__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__30564);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__30560.cljs$lang$maxFixedArity = 3;
      G__30560.cljs$lang$applyTo = G__30560__4.cljs$lang$applyTo;
      G__30560.cljs$core$IFn$_invoke$arity$0 = G__30560__0;
      G__30560.cljs$core$IFn$_invoke$arity$1 = G__30560__1;
      G__30560.cljs$core$IFn$_invoke$arity$2 = G__30560__2;
      G__30560.cljs$core$IFn$_invoke$arity$3 = G__30560__3;
      G__30560.cljs$core$IFn$_invoke$arity$variadic = G__30560__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__30560;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq30532) {
  var G__30533 = cljs.core.first(seq30532);
  var seq30532__$1 = cljs.core.next(seq30532);
  var G__30534 = cljs.core.first(seq30532__$1);
  var seq30532__$2 = cljs.core.next(seq30532__$1);
  var G__30535 = cljs.core.first(seq30532__$2);
  var seq30532__$3 = cljs.core.next(seq30532__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__30533, G__30534, G__30535, seq30532__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args30566 = [];
  var len__5189__auto___30569 = arguments.length;
  var i__5190__auto___30570 = 0;
  while (true) {
    if (i__5190__auto___30570 < len__5189__auto___30569) {
      args30566.push(arguments[i__5190__auto___30570]);
      var G__30571 = i__5190__auto___30570 + 1;
      i__5190__auto___30570 = G__30571;
      continue;
    } else {
    }
    break;
  }
  var G__30568 = args30566.length;
  switch(G__30568) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30566.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__30573 = cljs.core.next(coll);
      coll = G__30573;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__30574 = n - 1;
      var G__30575 = cljs.core.next(coll);
      n = G__30574;
      coll = G__30575;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args30576 = [];
  var len__5189__auto___30579 = arguments.length;
  var i__5190__auto___30580 = 0;
  while (true) {
    if (i__5190__auto___30580 < len__5189__auto___30579) {
      args30576.push(arguments[i__5190__auto___30580]);
      var G__30581 = i__5190__auto___30580 + 1;
      i__5190__auto___30580 = G__30581;
      continue;
    } else {
    }
    break;
  }
  var G__30578 = args30576.length;
  switch(G__30578) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30576.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__30584 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30584, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30584, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4131__auto__ = flags;
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_30592 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4131__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__30593_30599 = cljs.core.first(coll);
          var G__30594_30600 = writer;
          var G__30595_30601 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30593_30599, G__30594_30600, G__30595_30601) : print_one.call(null, G__30593_30599, G__30594_30600, G__30595_30601);
        } else {
        }
        var coll_30602__$1 = cljs.core.next(coll);
        var n_30603 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_30602__$1 && (n_30603 == null || !(n_30603 === 0))) {
            cljs.core._write(writer, sep);
            var G__30596_30604 = cljs.core.first(coll_30602__$1);
            var G__30597_30605 = writer;
            var G__30598_30606 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30596_30604, G__30597_30605, G__30598_30606) : print_one.call(null, G__30596_30604, G__30597_30605, G__30598_30606);
            var G__30607 = cljs.core.next(coll_30602__$1);
            var G__30608 = n_30603 - 1;
            coll_30602__$1 = G__30607;
            n_30603 = G__30608;
            continue;
          } else {
            if (cljs.core.seq(coll_30602__$1) && n_30603 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4131__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4131__auto__)) {
                  return or__4131__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_30592;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30615 = arguments.length;
  var i__5190__auto___30616 = 0;
  while (true) {
    if (i__5190__auto___30616 < len__5189__auto___30615) {
      args__5196__auto__.push(arguments[i__5190__auto___30616]);
      var G__30617 = i__5190__auto___30616 + 1;
      i__5190__auto___30616 = G__30617;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 1 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5197__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__30611 = cljs.core.seq(ss);
  var chunk__30612 = null;
  var count__30613 = 0;
  var i__30614 = 0;
  while (true) {
    if (i__30614 < count__30613) {
      var s = chunk__30612.cljs$core$IIndexed$_nth$arity$2(null, i__30614);
      cljs.core._write(writer, s);
      var G__30618 = seq__30611;
      var G__30619 = chunk__30612;
      var G__30620 = count__30613;
      var G__30621 = i__30614 + 1;
      seq__30611 = G__30618;
      chunk__30612 = G__30619;
      count__30613 = G__30620;
      i__30614 = G__30621;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__30611);
      if (temp__4425__auto__) {
        var seq__30611__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__30611__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__30611__$1);
          var G__30622 = cljs.core.chunk_rest(seq__30611__$1);
          var G__30623 = c__4934__auto__;
          var G__30624 = cljs.core.count(c__4934__auto__);
          var G__30625 = 0;
          seq__30611 = G__30622;
          chunk__30612 = G__30623;
          count__30613 = G__30624;
          i__30614 = G__30625;
          continue;
        } else {
          var s = cljs.core.first(seq__30611__$1);
          cljs.core._write(writer, s);
          var G__30626 = cljs.core.next(seq__30611__$1);
          var G__30627 = null;
          var G__30628 = 0;
          var G__30629 = 0;
          seq__30611 = G__30626;
          chunk__30612 = G__30627;
          count__30613 = G__30628;
          i__30614 = G__30629;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq30609) {
  var G__30610 = cljs.core.first(seq30609);
  var seq30609__$1 = cljs.core.next(seq30609);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__30610, seq30609__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj30631 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj30631;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_map;
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4119__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4119__auto__) {
    var and__4119__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4119__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4119__auto____$1;
    }
  } else {
    return and__4119__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__30647_30656 = cljs.core.meta(obj);
      var G__30648_30657 = writer;
      var G__30649_30658 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__30647_30656, G__30648_30657, G__30649_30658) : cljs.core.pr_writer.call(null, G__30647_30656, G__30648_30657, G__30649_30658);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__30651 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__30652 = cljs.core.pr_writer;
            var G__30653 = writer;
            var G__30654 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__30651, G__30652, G__30653, G__30654) : cljs.core.print_map.call(null, G__30651, G__30652, G__30653, G__30654);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4131__auto__ = name == null;
                    if (or__4131__auto__) {
                      return or__4131__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__30659 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__30659;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4131__auto__ = name == null;
                            if (or__4131__auto__) {
                              return or__4131__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__30663 = obj;
    var G__30664 = writer;
    var G__30665 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__30663, G__30664, G__30665) : alt_impl.call(null, G__30663, G__30664, G__30665);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__30670 = cljs.core.seq(cljs.core.next(objs));
  var chunk__30671 = null;
  var count__30672 = 0;
  var i__30673 = 0;
  while (true) {
    if (i__30673 < count__30672) {
      var obj = chunk__30671.cljs$core$IIndexed$_nth$arity$2(null, i__30673);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__30674 = seq__30670;
      var G__30675 = chunk__30671;
      var G__30676 = count__30672;
      var G__30677 = i__30673 + 1;
      seq__30670 = G__30674;
      chunk__30671 = G__30675;
      count__30672 = G__30676;
      i__30673 = G__30677;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__30670);
      if (temp__4425__auto__) {
        var seq__30670__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__30670__$1)) {
          var c__4934__auto__ = cljs.core.chunk_first(seq__30670__$1);
          var G__30678 = cljs.core.chunk_rest(seq__30670__$1);
          var G__30679 = c__4934__auto__;
          var G__30680 = cljs.core.count(c__4934__auto__);
          var G__30681 = 0;
          seq__30670 = G__30678;
          chunk__30671 = G__30679;
          count__30672 = G__30680;
          i__30673 = G__30681;
          continue;
        } else {
          var obj = cljs.core.first(seq__30670__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__30682 = cljs.core.next(seq__30670__$1);
          var G__30683 = null;
          var G__30684 = 0;
          var G__30685 = 0;
          seq__30670 = G__30682;
          chunk__30671 = G__30683;
          count__30672 = G__30684;
          i__30673 = G__30685;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args30686 = [];
  var len__5189__auto___30689 = arguments.length;
  var i__5190__auto___30690 = 0;
  while (true) {
    if (i__5190__auto___30690 < len__5189__auto___30689) {
      args30686.push(arguments[i__5190__auto___30690]);
      var G__30691 = i__5190__auto___30690 + 1;
      i__5190__auto___30690 = G__30691;
      continue;
    } else {
    }
    break;
  }
  var G__30688 = args30686.length;
  switch(G__30688) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30686.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30694 = arguments.length;
  var i__5190__auto___30695 = 0;
  while (true) {
    if (i__5190__auto___30695 < len__5189__auto___30694) {
      args__5196__auto__.push(arguments[i__5190__auto___30695]);
      var G__30696 = i__5190__auto___30695 + 1;
      i__5190__auto___30695 = G__30696;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq30693) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30693));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30698 = arguments.length;
  var i__5190__auto___30699 = 0;
  while (true) {
    if (i__5190__auto___30699 < len__5189__auto___30698) {
      args__5196__auto__.push(arguments[i__5190__auto___30699]);
      var G__30700 = i__5190__auto___30699 + 1;
      i__5190__auto___30699 = G__30700;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq30697) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30697));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30702 = arguments.length;
  var i__5190__auto___30703 = 0;
  while (true) {
    if (i__5190__auto___30703 < len__5189__auto___30702) {
      args__5196__auto__.push(arguments[i__5190__auto___30703]);
      var G__30704 = i__5190__auto___30703 + 1;
      i__5190__auto___30703 = G__30704;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq30701) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30701));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__30705__i = 0, G__30705__a = new Array(arguments.length - 0);
      while (G__30705__i < G__30705__a.length) {
        G__30705__a[G__30705__i] = arguments[G__30705__i + 0];
        ++G__30705__i;
      }
      objs = new cljs.core.IndexedSeq(G__30705__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__30706) {
    var objs = cljs.core.seq(arglist__30706);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30708 = arguments.length;
  var i__5190__auto___30709 = 0;
  while (true) {
    if (i__5190__auto___30709 < len__5189__auto___30708) {
      args__5196__auto__.push(arguments[i__5190__auto___30709]);
      var G__30710 = i__5190__auto___30709 + 1;
      i__5190__auto___30709 = G__30710;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq30707) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30707));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30712 = arguments.length;
  var i__5190__auto___30713 = 0;
  while (true) {
    if (i__5190__auto___30713 < len__5189__auto___30712) {
      args__5196__auto__.push(arguments[i__5190__auto___30713]);
      var G__30714 = i__5190__auto___30713 + 1;
      i__5190__auto___30713 = G__30714;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq30711) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30711));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30716 = arguments.length;
  var i__5190__auto___30717 = 0;
  while (true) {
    if (i__5190__auto___30717 < len__5189__auto___30716) {
      args__5196__auto__.push(arguments[i__5190__auto___30717]);
      var G__30718 = i__5190__auto___30717 + 1;
      i__5190__auto___30717 = G__30718;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq30715) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30715));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30720 = arguments.length;
  var i__5190__auto___30721 = 0;
  while (true) {
    if (i__5190__auto___30721 < len__5189__auto___30720) {
      args__5196__auto__.push(arguments[i__5190__auto___30721]);
      var G__30722 = i__5190__auto___30721 + 1;
      i__5190__auto___30721 = G__30722;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq30719) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30719));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__30729_30735 = cljs.core.key(e);
    var G__30730_30736 = w;
    var G__30731_30737 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30729_30735, G__30730_30736, G__30731_30737) : print_one.call(null, G__30729_30735, G__30730_30736, G__30731_30737);
    cljs.core._write(w, " ");
    var G__30732 = cljs.core.val(e);
    var G__30733 = w;
    var G__30734 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__30732, G__30733, G__30734) : print_one.call(null, G__30732, G__30733, G__30734);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30741 = arguments.length;
  var i__5190__auto___30742 = 0;
  while (true) {
    if (i__5190__auto___30742 < len__5189__auto___30741) {
      args__5196__auto__.push(arguments[i__5190__auto___30742]);
      var G__30743 = i__5190__auto___30742 + 1;
      i__5190__auto___30742 = G__30743;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 2 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5197__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq30738) {
  var G__30739 = cljs.core.first(seq30738);
  var seq30738__$1 = cljs.core.next(seq30738);
  var G__30740 = cljs.core.first(seq30738__$1);
  var seq30738__$2 = cljs.core.next(seq30738__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__30739, G__30740, seq30738__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args30744 = [];
  var len__5189__auto___30747 = arguments.length;
  var i__5190__auto___30748 = 0;
  while (true) {
    if (i__5190__auto___30748 < len__5189__auto___30747) {
      args30744.push(arguments[i__5190__auto___30748]);
      var G__30749 = i__5190__auto___30748 + 1;
      i__5190__auto___30748 = G__30749;
      continue;
    } else {
    }
    break;
  }
  var G__30746 = args30744.length;
  switch(G__30746) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30744.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__30751_SHARP_, p2__30752_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__30751_SHARP_, p2__30752_SHARP_) : rf.call(null, p1__30751_SHARP_, p2__30752_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__30753 = null;
      var G__30753__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__30753__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__30753__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__30753 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__30753__0.call(this);
          case 1:
            return G__30753__1.call(this, result);
          case 2:
            return G__30753__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__30753.cljs$core$IFn$_invoke$arity$0 = G__30753__0;
      G__30753.cljs$core$IFn$_invoke$arity$1 = G__30753__1;
      G__30753.cljs$core$IFn$_invoke$arity$2 = G__30753__2;
      return G__30753;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args30754 = [];
  var len__5189__auto___30757 = arguments.length;
  var i__5190__auto___30758 = 0;
  while (true) {
    if (i__5190__auto___30758 < len__5189__auto___30757) {
      args30754.push(arguments[i__5190__auto___30758]);
      var G__30759 = i__5190__auto___30758 + 1;
      i__5190__auto___30758 = G__30759;
      continue;
    } else {
    }
    break;
  }
  var G__30756 = args30754.length;
  switch(G__30756) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30754.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__30761 = null;
        var G__30761__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__30761__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__30761__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__30761 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__30761__0.call(this);
            case 1:
              return G__30761__1.call(this, result);
            case 2:
              return G__30761__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__30761.cljs$core$IFn$_invoke$arity$0 = G__30761__0;
        G__30761.cljs$core$IFn$_invoke$arity$1 = G__30761__1;
        G__30761.cljs$core$IFn$_invoke$arity$2 = G__30761__2;
        return G__30761;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.rand;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args30762 = [];
  var len__5189__auto___30765 = arguments.length;
  var i__5190__auto___30766 = 0;
  while (true) {
    if (i__5190__auto___30766 < len__5189__auto___30765) {
      args30762.push(arguments[i__5190__auto___30766]);
      var G__30767 = i__5190__auto___30766 + 1;
      i__5190__auto___30766 = G__30767;
      continue;
    } else {
    }
    break;
  }
  var G__30764 = args30762.length;
  switch(G__30764) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30762.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5125__auto__ = this;
  return cljs.core.es6_iterator(this__5125__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30770 = arguments.length;
  var i__5190__auto___30771 = 0;
  while (true) {
    if (i__5190__auto___30771 < len__5189__auto___30770) {
      args__5196__auto__.push(arguments[i__5190__auto___30771]);
      var G__30772 = i__5190__auto___30771 + 1;
      i__5190__auto___30771 = G__30772;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 0 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5197__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq30769) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30769));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__30774_SHARP_, p2__30773_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__30773_SHARP_) : proc.call(null, p2__30773_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4786__auto__ = x == null ? null : x;
    var m__4787__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto__.call(null, x);
    } else {
      var m__4787__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4786__auto__ = x == null ? null : x;
    var m__4787__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto__.call(null, x);
    } else {
      var m__4787__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__4787__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.clj__GT_js;
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__30793_30803 = cljs.core.seq(x);
            var chunk__30794_30804 = null;
            var count__30795_30805 = 0;
            var i__30796_30806 = 0;
            while (true) {
              if (i__30796_30806 < count__30795_30805) {
                var vec__30797_30807 = chunk__30794_30804.cljs$core$IIndexed$_nth$arity$2(null, i__30796_30806);
                var k_30808 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30797_30807, 0, null);
                var v_30809 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30797_30807, 1, null);
                m[cljs.core.key__GT_js(k_30808)] = cljs$core$clj__GT_js(v_30809);
                var G__30810 = seq__30793_30803;
                var G__30811 = chunk__30794_30804;
                var G__30812 = count__30795_30805;
                var G__30813 = i__30796_30806 + 1;
                seq__30793_30803 = G__30810;
                chunk__30794_30804 = G__30811;
                count__30795_30805 = G__30812;
                i__30796_30806 = G__30813;
                continue;
              } else {
                var temp__4425__auto___30814 = cljs.core.seq(seq__30793_30803);
                if (temp__4425__auto___30814) {
                  var seq__30793_30815__$1 = temp__4425__auto___30814;
                  if (cljs.core.chunked_seq_QMARK_(seq__30793_30815__$1)) {
                    var c__4934__auto___30816 = cljs.core.chunk_first(seq__30793_30815__$1);
                    var G__30817 = cljs.core.chunk_rest(seq__30793_30815__$1);
                    var G__30818 = c__4934__auto___30816;
                    var G__30819 = cljs.core.count(c__4934__auto___30816);
                    var G__30820 = 0;
                    seq__30793_30803 = G__30817;
                    chunk__30794_30804 = G__30818;
                    count__30795_30805 = G__30819;
                    i__30796_30806 = G__30820;
                    continue;
                  } else {
                    var vec__30798_30821 = cljs.core.first(seq__30793_30815__$1);
                    var k_30822 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30798_30821, 0, null);
                    var v_30823 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30798_30821, 1, null);
                    m[cljs.core.key__GT_js(k_30822)] = cljs$core$clj__GT_js(v_30823);
                    var G__30824 = cljs.core.next(seq__30793_30815__$1);
                    var G__30825 = null;
                    var G__30826 = 0;
                    var G__30827 = 0;
                    seq__30793_30803 = G__30824;
                    chunk__30794_30804 = G__30825;
                    count__30795_30805 = G__30826;
                    i__30796_30806 = G__30827;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__30799_30828 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__30800_30829 = null;
              var count__30801_30830 = 0;
              var i__30802_30831 = 0;
              while (true) {
                if (i__30802_30831 < count__30801_30830) {
                  var x_30832__$1 = chunk__30800_30829.cljs$core$IIndexed$_nth$arity$2(null, i__30802_30831);
                  arr.push(x_30832__$1);
                  var G__30833 = seq__30799_30828;
                  var G__30834 = chunk__30800_30829;
                  var G__30835 = count__30801_30830;
                  var G__30836 = i__30802_30831 + 1;
                  seq__30799_30828 = G__30833;
                  chunk__30800_30829 = G__30834;
                  count__30801_30830 = G__30835;
                  i__30802_30831 = G__30836;
                  continue;
                } else {
                  var temp__4425__auto___30837 = cljs.core.seq(seq__30799_30828);
                  if (temp__4425__auto___30837) {
                    var seq__30799_30838__$1 = temp__4425__auto___30837;
                    if (cljs.core.chunked_seq_QMARK_(seq__30799_30838__$1)) {
                      var c__4934__auto___30839 = cljs.core.chunk_first(seq__30799_30838__$1);
                      var G__30840 = cljs.core.chunk_rest(seq__30799_30838__$1);
                      var G__30841 = c__4934__auto___30839;
                      var G__30842 = cljs.core.count(c__4934__auto___30839);
                      var G__30843 = 0;
                      seq__30799_30828 = G__30840;
                      chunk__30800_30829 = G__30841;
                      count__30801_30830 = G__30842;
                      i__30802_30831 = G__30843;
                      continue;
                    } else {
                      var x_30844__$1 = cljs.core.first(seq__30799_30838__$1);
                      arr.push(x_30844__$1);
                      var G__30845 = cljs.core.next(seq__30799_30838__$1);
                      var G__30846 = null;
                      var G__30847 = 0;
                      var G__30848 = 0;
                      seq__30799_30828 = G__30845;
                      chunk__30800_30829 = G__30846;
                      count__30801_30830 = G__30847;
                      i__30802_30831 = G__30848;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4786__auto__ = x == null ? null : x;
    var m__4787__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4787__auto__.call(null, x, options);
    } else {
      var m__4787__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__4787__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args30849 = [];
  var len__5189__auto___30874 = arguments.length;
  var i__5190__auto___30875 = 0;
  while (true) {
    if (i__5190__auto___30875 < len__5189__auto___30874) {
      args30849.push(arguments[i__5190__auto___30875]);
      var G__30876 = i__5190__auto___30875 + 1;
      i__5190__auto___30875 = G__30876;
      continue;
    } else {
    }
    break;
  }
  var G__30853 = args30849.length;
  switch(G__30853) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args30849.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5208__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__30854 = opts;
  var map__30854__$1 = (!(map__30854 == null) ? map__30854.cljs$lang$protocol_mask$partition0$ & 64 || map__30854.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__30854) : map__30854;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30854__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__30854, map__30854__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__4903__auto__ = function(map__30854, map__30854__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__30868(s__30869) {
                      return new cljs.core.LazySeq(null, function(map__30854, map__30854__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__30869__$1 = s__30869;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__30869__$1);
                            if (temp__4425__auto__) {
                              var s__30869__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__30869__$2)) {
                                var c__4901__auto__ = cljs.core.chunk_first(s__30869__$2);
                                var size__4902__auto__ = cljs.core.count(c__4901__auto__);
                                var b__30871 = cljs.core.chunk_buffer(size__4902__auto__);
                                if (function() {
                                  var i__30870 = 0;
                                  while (true) {
                                    if (i__30870 < size__4902__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4901__auto__, i__30870);
                                      cljs.core.chunk_append(b__30871, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__30878 = i__30870 + 1;
                                      i__30870 = G__30878;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__30871), cljs$core$thisfn_$_iter__30868(cljs.core.chunk_rest(s__30869__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__30871), null);
                                }
                              } else {
                                var k = cljs.core.first(s__30869__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__30868(cljs.core.rest(s__30869__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__30854, map__30854__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__30854, map__30854__$1, keywordize_keys, keyfn);
                  return iter__4903__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__30854, map__30854__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq30850) {
  var G__30851 = cljs.core.first(seq30850);
  var seq30850__$1 = cljs.core.next(seq30850);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__30851, seq30850__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__30880 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30880) : cljs.core.atom.call(null, G__30880);
  }();
  return function(mem) {
    return function() {
      var G__30881__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__30881 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__30882__i = 0, G__30882__a = new Array(arguments.length - 0);
          while (G__30882__i < G__30882__a.length) {
            G__30882__a[G__30882__i] = arguments[G__30882__i + 0];
            ++G__30882__i;
          }
          args = new cljs.core.IndexedSeq(G__30882__a, 0);
        }
        return G__30881__delegate.call(this, args);
      };
      G__30881.cljs$lang$maxFixedArity = 0;
      G__30881.cljs$lang$applyTo = function(arglist__30883) {
        var args = cljs.core.seq(arglist__30883);
        return G__30881__delegate(args);
      };
      G__30881.cljs$core$IFn$_invoke$arity$variadic = G__30881__delegate;
      return G__30881;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args30884 = [];
  var len__5189__auto___30889 = arguments.length;
  var i__5190__auto___30890 = 0;
  while (true) {
    if (i__5190__auto___30890 < len__5189__auto___30889) {
      args30884.push(arguments[i__5190__auto___30890]);
      var G__30891 = i__5190__auto___30890 + 1;
      i__5190__auto___30890 = G__30891;
      continue;
    } else {
    }
    break;
  }
  var G__30888 = args30884.length;
  switch(G__30888) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5208__auto__ = new cljs.core.IndexedSeq(args30884.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5208__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__30893 = ret;
      f = G__30893;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq30885) {
  var G__30886 = cljs.core.first(seq30885);
  var seq30885__$1 = cljs.core.next(seq30885);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__30886, seq30885__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args30894 = [];
  var len__5189__auto___30897 = arguments.length;
  var i__5190__auto___30898 = 0;
  while (true) {
    if (i__5190__auto___30898 < len__5189__auto___30897) {
      args30894.push(arguments[i__5190__auto___30898]);
      var G__30899 = i__5190__auto___30898 + 1;
      i__5190__auto___30898 = G__30899;
      continue;
    } else {
    }
    break;
  }
  var G__30896 = args30894.length;
  switch(G__30896) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30894.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__30902 = Math.random() * n;
  return Math.floor(G__30902);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__30904 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__30904) : cljs.core.atom.call(null, G__30904);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___30907 = arguments.length;
  var i__5190__auto___30908 = 0;
  while (true) {
    if (i__5190__auto___30908 < len__5189__auto___30907) {
      args__5196__auto__.push(arguments[i__5190__auto___30908]);
      var G__30909 = i__5190__auto___30908 + 1;
      i__5190__auto___30908 = G__30909;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 1 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5197__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq30905) {
  var G__30906 = cljs.core.first(seq30905);
  var seq30905__$1 = cljs.core.next(seq30905);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__30906, seq30905__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args30910 = [];
  var len__5189__auto___30914 = arguments.length;
  var i__5190__auto___30915 = 0;
  while (true) {
    if (i__5190__auto___30915 < len__5189__auto___30914) {
      args30910.push(arguments[i__5190__auto___30915]);
      var G__30916 = i__5190__auto___30915 + 1;
      i__5190__auto___30915 = G__30916;
      continue;
    } else {
    }
    break;
  }
  var G__30912 = args30910.length;
  switch(G__30912) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30910.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__30913 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30913) : cljs.core.deref.call(null, G__30913);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4131__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4131__auto__) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4131__auto____$1) {
      return or__4131__auto____$1;
    } else {
      var and__4119__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4119__auto__) {
        var and__4119__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4119__auto____$1) {
          var and__4119__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4119__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__30918 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__30919 = i + 1;
                ret = G__30918;
                i = G__30919;
                continue;
              }
              break;
            }
          } else {
            return and__4119__auto____$2;
          }
        } else {
          return and__4119__auto____$1;
        }
      } else {
        return and__4119__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args30920 = [];
  var len__5189__auto___30924 = arguments.length;
  var i__5190__auto___30925 = 0;
  while (true) {
    if (i__5190__auto___30925 < len__5189__auto___30924) {
      args30920.push(arguments[i__5190__auto___30925]);
      var G__30926 = i__5190__auto___30925 + 1;
      i__5190__auto___30925 = G__30926;
      continue;
    } else {
    }
    break;
  }
  var G__30922 = args30920.length;
  switch(G__30922) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30920.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__30923 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30923) : cljs.core.deref.call(null, G__30923);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args30928 = [];
  var len__5189__auto___30932 = arguments.length;
  var i__5190__auto___30933 = 0;
  while (true) {
    if (i__5190__auto___30933 < len__5189__auto___30932) {
      args30928.push(arguments[i__5190__auto___30933]);
      var G__30934 = i__5190__auto___30933 + 1;
      i__5190__auto___30933 = G__30934;
      continue;
    } else {
    }
    break;
  }
  var G__30930 = args30928.length;
  switch(G__30930) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30928.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__30931 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30931) : cljs.core.deref.call(null, G__30931);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args30936 = [];
  var len__5189__auto___30940 = arguments.length;
  var i__5190__auto___30941 = 0;
  while (true) {
    if (i__5190__auto___30941 < len__5189__auto___30940) {
      args30936.push(arguments[i__5190__auto___30941]);
      var G__30942 = i__5190__auto___30941 + 1;
      i__5190__auto___30941 = G__30942;
      continue;
    } else {
    }
    break;
  }
  var G__30938 = args30936.length;
  switch(G__30938) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30936.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__30939 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__30939) : cljs.core.deref.call(null, G__30939);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args30944 = [];
  var len__5189__auto___30947 = arguments.length;
  var i__5190__auto___30948 = 0;
  while (true) {
    if (i__5190__auto___30948 < len__5189__auto___30947) {
      args30944.push(arguments[i__5190__auto___30948]);
      var G__30949 = i__5190__auto___30948 + 1;
      i__5190__auto___30948 = G__30949;
      continue;
    } else {
    }
    break;
  }
  var G__30946 = args30944.length;
  switch(G__30946) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30944.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4131__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args30954 = [];
  var len__5189__auto___30957 = arguments.length;
  var i__5190__auto___30958 = 0;
  while (true) {
    if (i__5190__auto___30958 < len__5189__auto___30957) {
      args30954.push(arguments[i__5190__auto___30958]);
      var G__30959 = i__5190__auto___30958 + 1;
      i__5190__auto___30958 = G__30959;
      continue;
    } else {
    }
    break;
  }
  var G__30956 = args30954.length;
  switch(G__30956) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30954.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__30951_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__30951_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__30951_SHARP_), cljs.core.second(p1__30951_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__30952_SHARP_, p2__30953_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__30952_SHARP_, p2__30953_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4131__auto__ = cljs.core.truth_(function() {
    var and__4119__auto__ = xprefs;
    if (cljs.core.truth_(and__4119__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4119__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var or__4131__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__30973 = cljs.core.rest(ps);
          ps = G__30973;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4131__auto____$1)) {
      return or__4131__auto____$1;
    } else {
      var or__4131__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__30974 = cljs.core.rest(ps);
            ps = G__30974;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4131__auto____$2)) {
        return or__4131__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4131__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__30977) {
    var vec__30978 = p__30977;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30978, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30978, 1, null);
    var e = vec__30978;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4131__auto__ = be == null;
        if (or__4131__auto__) {
          return or__4131__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._reset[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto__.call(null, mf);
    } else {
      var m__4787__auto____$1 = cljs.core._reset["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._add_method[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4787__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__4787__auto____$1 = cljs.core._add_method["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4787__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._remove_method[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4787__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4787__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4787__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._prefer_method[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4787__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__4787__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4787__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._get_method[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4787__auto__.call(null, mf, dispatch_val);
    } else {
      var m__4787__auto____$1 = cljs.core._get_method["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4787__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._methods[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto__.call(null, mf);
    } else {
      var m__4787__auto____$1 = cljs.core._methods["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._prefers[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto__.call(null, mf);
    } else {
      var m__4787__auto____$1 = cljs.core._prefers["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto__.call(null, mf);
    } else {
      var m__4787__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4786__auto__ = mf == null ? null : mf;
    var m__4787__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto__.call(null, mf);
    } else {
      var m__4787__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__4787__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__4787__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__30980 = null;
  var G__30980__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__30980__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__30980__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__30980__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__30980__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__30980__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__30980__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__30980__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__30980__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__30980__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__30980__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__30980__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__30980__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__30980__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__30980__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__30980__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__30980__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__30980__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__30980__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__30980__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__30980__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__30980__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__30980 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__30980__1.call(this, self__);
      case 2:
        return G__30980__2.call(this, self__, a);
      case 3:
        return G__30980__3.call(this, self__, a, b);
      case 4:
        return G__30980__4.call(this, self__, a, b, c);
      case 5:
        return G__30980__5.call(this, self__, a, b, c, d);
      case 6:
        return G__30980__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__30980__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__30980__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__30980__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__30980__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__30980__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__30980__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__30980__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__30980__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__30980__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__30980__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__30980__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__30980__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__30980__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__30980__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__30980__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__30980__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__30980.cljs$core$IFn$_invoke$arity$1 = G__30980__1;
  G__30980.cljs$core$IFn$_invoke$arity$2 = G__30980__2;
  G__30980.cljs$core$IFn$_invoke$arity$3 = G__30980__3;
  G__30980.cljs$core$IFn$_invoke$arity$4 = G__30980__4;
  G__30980.cljs$core$IFn$_invoke$arity$5 = G__30980__5;
  G__30980.cljs$core$IFn$_invoke$arity$6 = G__30980__6;
  G__30980.cljs$core$IFn$_invoke$arity$7 = G__30980__7;
  G__30980.cljs$core$IFn$_invoke$arity$8 = G__30980__8;
  G__30980.cljs$core$IFn$_invoke$arity$9 = G__30980__9;
  G__30980.cljs$core$IFn$_invoke$arity$10 = G__30980__10;
  G__30980.cljs$core$IFn$_invoke$arity$11 = G__30980__11;
  G__30980.cljs$core$IFn$_invoke$arity$12 = G__30980__12;
  G__30980.cljs$core$IFn$_invoke$arity$13 = G__30980__13;
  G__30980.cljs$core$IFn$_invoke$arity$14 = G__30980__14;
  G__30980.cljs$core$IFn$_invoke$arity$15 = G__30980__15;
  G__30980.cljs$core$IFn$_invoke$arity$16 = G__30980__16;
  G__30980.cljs$core$IFn$_invoke$arity$17 = G__30980__17;
  G__30980.cljs$core$IFn$_invoke$arity$18 = G__30980__18;
  G__30980.cljs$core$IFn$_invoke$arity$19 = G__30980__19;
  G__30980.cljs$core$IFn$_invoke$arity$20 = G__30980__20;
  G__30980.cljs$core$IFn$_invoke$arity$21 = G__30980__21;
  G__30980.cljs$core$IFn$_invoke$arity$22 = G__30980__22;
  return G__30980;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args30979) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args30979)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__30981 = self__.uuid;
  var G__30982 = other.uuid;
  return goog.array.defaultCompare(G__30981, G__30982);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args30983 = [];
  var len__5189__auto___30986 = arguments.length;
  var i__5190__auto___30987 = 0;
  while (true) {
    if (i__5190__auto___30987 < len__5189__auto___30986) {
      args30983.push(arguments[i__5190__auto___30987]);
      var G__30988 = i__5190__auto___30987 + 1;
      i__5190__auto___30987 = G__30988;
      continue;
    } else {
    }
    break;
  }
  var G__30985 = args30983.length;
  switch(G__30985) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args30983.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__30990 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__30990) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__30992_SHARP_, p2__30993_SHARP_) {
      goog.object.set(p1__30992_SHARP_, p2__30993_SHARP_, true);
      return p1__30992_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__30996 = cljs.core.next(ks__$1);
          var G__30997 = [cljs.core.str(function() {
            var G__30995 = ret;
            var G__30995__$1 = !(ret === "") ? [cljs.core.str(G__30995), cljs.core.str("|")].join("") : G__30995;
            return G__30995__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__30996;
          ret = G__30997;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_30998 = 0;
  while (true) {
    if (i_30998 < name.length) {
      var c_30999 = name.charAt(i_30998);
      var sub_31000 = goog.object.get(cljs.core.CHAR_MAP, c_30999);
      if (!(sub_31000 == null)) {
        sb.append(sub_31000);
      } else {
        sb.append(c_30999);
      }
      var G__31001 = i_30998 + 1;
      i_30998 = G__31001;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__31003 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31003, 0, null);
      var G__31004 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__31005 = r.lastIndex;
      ret = G__31004;
      last_match_end = G__31005;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write(writer__4730__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__31010 = function() {
          var G__31008 = ctxt;
          var G__31009 = cljs.core.first(xs);
          return goog.object.get(G__31008, G__31009);
        }();
        var G__31011 = cljs.core.next(xs);
        ctxt = G__31010;
        xs = G__31011;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__31015 = cljs.core._STAR_target_STAR_;
  switch(G__31015) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__31017 = cljs.core.first(segs);
            return eval(G__31017);
          } catch (e31016) {
            if (e31016 instanceof ReferenceError) {
              var e = e31016;
              return null;
            } else {
              throw e31016;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args31019 = [];
  var len__5189__auto___31022 = arguments.length;
  var i__5190__auto___31023 = 0;
  while (true) {
    if (i__5190__auto___31023 < len__5189__auto___31022) {
      args31019.push(arguments[i__5190__auto___31023]);
      var G__31024 = i__5190__auto___31023 + 1;
      i__5190__auto___31023 = G__31024;
      continue;
    } else {
    }
    break;
  }
  var G__31021 = args31019.length;
  switch(G__31021) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31019.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__31027 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__31027) : cljs.core.atom.call(null, G__31027);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__31029 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__31029) : cljs.core.atom.call(null, G__31029);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4786__auto__ = port == null ? null : port;
    var m__4787__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, port, fn1_handler);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4786__auto__ = port == null ? null : port;
    var m__4787__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4786__auto__ = chan == null ? null : chan;
    var m__4787__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, chan);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4786__auto__ = chan == null ? null : chan;
    var m__4787__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, chan);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4786__auto__ = h == null ? null : h;
    var m__4787__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, h);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4786__auto__ = h == null ? null : h;
    var m__4787__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, h);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4786__auto__ = b == null ? null : b;
    var m__4787__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, b);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4786__auto__ = b == null ? null : b;
    var m__4787__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, b);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4786__auto__ = b == null ? null : b;
    var m__4787__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, b, itm);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args31032 = [];
  var len__5189__auto___31035 = arguments.length;
  var i__5190__auto___31036 = 0;
  while (true) {
    if (i__5190__auto___31036 < len__5189__auto___31035) {
      args31032.push(arguments[i__5190__auto___31036]);
      var G__31037 = i__5190__auto___31036 + 1;
      i__5190__auto___31036 = G__31037;
      continue;
    } else {
    }
    break;
  }
  var G__31034 = args31032.length;
  switch(G__31034) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31032.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__31041 = cnt + 1;
      cnt = G__31041;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__5034__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__5034__auto__) {
      var v_31042 = this$.pop();
      if (keep_QMARK_.call(null, v_31042)) {
        this$.unshift(v_31042);
      } else {
      }
      var G__31043 = x + 1;
      x = G__31043;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.queue_dispatcher;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_31046 = 0;
  while (true) {
    var m_31047 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_31047 == null) {
    } else {
      m_31047.call(null);
      if (count_31046 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__31048 = count_31046 + 1;
        count_31046 = G__31048;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__4119__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__4119__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__4119__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054 = function(box, val, meta31055) {
      this.box = box;
      this.val = val;
      this.meta31055 = meta31055;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_31056, meta31055__$1) {
      var self__ = this;
      var _31056__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054(self__.box, self__.val, meta31055__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.prototype.cljs$core$IMeta$_meta$arity$1 = function(_31056) {
      var self__ = this;
      var _31056__$1 = this;
      return self__.meta31055;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta31055", "meta31055", -321724916, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels31054";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels31054");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels31054 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels31054(box__$1, val__$1, meta31055) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054(box__$1, val__$1, meta31055);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels31054(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4786__auto__ = this$ == null ? null : this$;
    var m__4787__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, this$);
    } else {
      var m__4787__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_31057 = self__.puts.pop();
    if (putter_31057 == null) {
    } else {
      var put_handler_31058 = putter_31057.handler;
      var val_31059 = putter_31057.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_31058)) {
        var put_cb_31060 = cljs.core.async.impl.protocols.commit.call(null, put_handler_31058);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_31060, put_handler_31058, val_31059, putter_31057, this$__$1) {
          return function() {
            return put_cb_31060.call(null, true);
          };
        }(put_cb_31060, put_handler_31058, val_31059, putter_31057, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = self__.buf;
      if (cljs.core.truth_(and__4119__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__4119__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_31061 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_31061)) {
            var take_cb_31062 = cljs.core.async.impl.protocols.commit.call(null, taker_31061);
            var val_31063__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_31062, val_31063__$1, taker_31061, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_31062.call(null, val_31063__$1);
              };
            }(take_cb_31062, val_31063__$1, taker_31061, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_31064 = self__.puts.pop();
          if (putter_31064 == null) {
          } else {
            var put_handler_31065 = putter_31064.handler;
            var val_31066 = putter_31064.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_31065)) {
              var put_cb_31067 = cljs.core.async.impl.protocols.commit.call(null, put_handler_31065);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_31067, put_handler_31065, val_31066, putter_31064, _, retval, this$__$1) {
                return function() {
                  return put_cb_31067.call(null, true);
                };
              }(put_cb_31067, put_handler_31065, val_31066, putter_31064, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_31066))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__4119__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__4119__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__4119__auto__;
            }
          }())) {
            var has_val = function() {
              var and__4119__auto__ = self__.buf;
              if (cljs.core.truth_(and__4119__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__4119__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = self__.buf;
      if (cljs.core.truth_(and__4119__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__4119__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_31068 = self__.takes.pop();
      if (taker_31068 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_31068)) {
          var take_cb_31069 = cljs.core.async.impl.protocols.commit.call(null, taker_31068);
          var val_31070 = cljs.core.truth_(function() {
            var and__4119__auto__ = self__.buf;
            if (cljs.core.truth_(and__4119__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__4119__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_31069, val_31070, taker_31068, this$__$1) {
            return function() {
              return take_cb_31069.call(null, val_31070);
            };
          }(take_cb_31069, val_31070, taker_31068, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__4131__auto__ = exh;
    if (cljs.core.truth_(or__4131__auto__)) {
      return or__4131__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args31071 = [];
  var len__5189__auto___31076 = arguments.length;
  var i__5190__auto___31077 = 0;
  while (true) {
    if (i__5190__auto___31077 < len__5189__auto___31076) {
      args31071.push(arguments[i__5190__auto___31077]);
      var G__31078 = i__5190__auto___31077 + 1;
      i__5190__auto___31077 = G__31078;
      continue;
    } else {
    }
    break;
  }
  var G__31073 = args31071.length;
  switch(G__31073) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31071.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__31080 = null;
        var G__31080__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e31074) {
            var t = e31074;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__31080__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e31075) {
            var t = e31075;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__31080 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__31080__1.call(this, buf__$1);
            case 2:
              return G__31080__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__31080.cljs$core$IFn$_invoke$arity$1 = G__31080__1;
        G__31080.cljs$core$IFn$_invoke$arity$2 = G__31080__2;
        return G__31080;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086 = function(fn_handler, f, meta31087) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta31087 = meta31087;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_31088, meta31087__$1) {
      var self__ = this;
      var _31088__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086(self__.fn_handler, self__.f, meta31087__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.prototype.cljs$core$IMeta$_meta$arity$1 = function(_31088) {
      var self__ = this;
      var _31088__$1 = this;
      return self__.meta31087;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta31087", "meta31087", -1673687750, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers31086";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers31086");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers31086 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers31086(fn_handler__$1, f__$1, meta31087) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086(fn_handler__$1, f__$1, meta31087);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers31086(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e31090) {
    if (e31090 instanceof Object) {
      var ex = e31090;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e31090;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_31093_31095 = state;
    statearr_31093_31095[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_31093_31095[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_31094_31096 = state;
    statearr_31094_31096[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_31094_31096[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_31099_31101 = state;
    statearr_31099_31101[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_31099_31101[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var cb = temp__4423__auto__;
    var statearr_31100_31102 = state;
    statearr_31100_31102[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_31100_31102[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4745__auto__, k__4746__auto__) {
  var self__ = this;
  var this__4745__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4745__auto____$1, k__4746__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4747__auto__, k31104, else__4748__auto__) {
  var self__ = this;
  var this__4747__auto____$1 = this;
  var G__31106 = k31104 instanceof cljs.core.Keyword ? k31104.fqn : null;
  switch(G__31106) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k31104, else__4748__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4759__auto__, writer__4760__auto__, opts__4761__auto__) {
  var self__ = this;
  var this__4759__auto____$1 = this;
  var pr_pair__4762__auto__ = function(this__4759__auto____$1) {
    return function(keyval__4763__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4760__auto__, cljs.core.pr_writer, "", " ", "", opts__4761__auto__, keyval__4763__auto__);
    };
  }(this__4759__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4760__auto__, pr_pair__4762__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4761__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__31103) {
  var self__ = this;
  var G__31103__$1 = this;
  return new cljs.core.RecordIter(0, G__31103__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4743__auto__) {
  var self__ = this;
  var this__4743__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4739__auto__) {
  var self__ = this;
  var this__4739__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4749__auto__) {
  var self__ = this;
  var this__4749__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4740__auto__) {
  var self__ = this;
  var this__4740__auto____$1 = this;
  var h__4566__auto__ = self__.__hash;
  if (!(h__4566__auto__ == null)) {
    return h__4566__auto__;
  } else {
    var h__4566__auto____$1 = cljs.core.hash_imap.call(null, this__4740__auto____$1);
    self__.__hash = h__4566__auto____$1;
    return h__4566__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4741__auto__, other__4742__auto__) {
  var self__ = this;
  var this__4741__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4119__auto__ = other__4742__auto__;
    if (cljs.core.truth_(and__4119__auto__)) {
      var and__4119__auto____$1 = this__4741__auto____$1.constructor === other__4742__auto__.constructor;
      if (and__4119__auto____$1) {
        return cljs.core.equiv_map.call(null, this__4741__auto____$1, other__4742__auto__);
      } else {
        return and__4119__auto____$1;
      }
    } else {
      return and__4119__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4754__auto__, k__4755__auto__) {
  var self__ = this;
  var this__4754__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4755__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4754__auto____$1), self__.__meta), k__4755__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4755__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4752__auto__, k__4753__auto__, G__31103) {
  var self__ = this;
  var this__4752__auto____$1 = this;
  var pred__31107 = cljs.core.keyword_identical_QMARK_;
  var expr__31108 = k__4753__auto__;
  if (cljs.core.truth_(pred__31107.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__31108))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__31103, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__31107.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__31108))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__31103, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__31107.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__31108))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__31103, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__31107.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__31108))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__31103, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__31107.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__31108))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__31103, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4753__auto__, G__31103), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4757__auto__) {
  var self__ = this;
  var this__4757__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4744__auto__, G__31103) {
  var self__ = this;
  var this__4744__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__31103, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4750__auto__, entry__4751__auto__) {
  var self__ = this;
  var this__4750__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4751__auto__)) {
    return cljs.core._assoc.call(null, this__4750__auto____$1, cljs.core._nth.call(null, entry__4751__auto__, 0), cljs.core._nth.call(null, entry__4751__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4750__auto____$1, entry__4751__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4779__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4779__auto__, writer__4780__auto__) {
  return cljs.core._write.call(null, writer__4780__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__31105) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__31105), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__31105), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__31105), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__31105), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__31105), null, cljs.core.dissoc.call(null, G__31105, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_31112 = state;
  statearr_31112[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_31112;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__4119__auto__ = exception;
      if (cljs.core.truth_(and__4119__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__4119__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__4119__auto__ = exception;
        if (cljs.core.truth_(and__4119__auto__)) {
          var and__4119__auto____$1 = catch_block;
          if (cljs.core.truth_(and__4119__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__4119__auto____$1;
          }
        } else {
          return and__4119__auto__;
        }
      }())) {
        var statearr_31118 = state;
        statearr_31118[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_31118[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_31118[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_31118[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_31118;
      } else {
        if (cljs.core.truth_(function() {
          var and__4119__auto__ = exception;
          if (cljs.core.truth_(and__4119__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__4119__auto__;
          }
        }())) {
          var statearr_31119_31123 = state;
          statearr_31119_31123[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__31124 = state;
          state = G__31124;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__4119__auto__ = exception;
            if (cljs.core.truth_(and__4119__auto__)) {
              var and__4119__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__4119__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4119__auto____$1;
              }
            } else {
              return and__4119__auto__;
            }
          }())) {
            var statearr_31120 = state;
            statearr_31120[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_31120[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_31120;
          } else {
            if (cljs.core.truth_(function() {
              var and__4119__auto__ = cljs.core.not.call(null, exception);
              if (and__4119__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__4119__auto__;
              }
            }())) {
              var statearr_31121 = state;
              statearr_31121[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_31121[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_31121;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_31122 = state;
                statearr_31122[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_31122[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_31122;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args31127 = [];
  var len__5189__auto___31130 = arguments.length;
  var i__5190__auto___31131 = 0;
  while (true) {
    if (i__5190__auto___31131 < len__5189__auto___31130) {
      args31127.push(arguments[i__5190__auto___31131]);
      var G__31132 = i__5190__auto___31131 + 1;
      i__5190__auto___31131 = G__31132;
      continue;
    } else {
    }
    break;
  }
  var G__31129 = args31127.length;
  switch(G__31129) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31127.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__31134 = level + 1;
      level = G__31134;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args31135 = [];
  var len__5189__auto___31138 = arguments.length;
  var i__5190__auto___31139 = 0;
  while (true) {
    if (i__5190__auto___31139 < len__5189__auto___31138) {
      args31135.push(arguments[i__5190__auto___31139]);
      var G__31140 = i__5190__auto___31139 + 1;
      i__5190__auto___31139 = G__31140;
      continue;
    } else {
    }
    break;
  }
  var G__31137 = args31135.length;
  switch(G__31137) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31135.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_31142 = 0;
  while (true) {
    if (i_31142 < arr.length) {
      arr[i_31142] = null;
      var G__31143 = i_31142 + 1;
      i_31142 = G__31143;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args31144 = [];
  var len__5189__auto___31147 = arguments.length;
  var i__5190__auto___31148 = 0;
  while (true) {
    if (i__5190__auto___31148 < len__5189__auto___31147) {
      args31144.push(arguments[i__5190__auto___31148]);
      var G__31149 = i__5190__auto___31148 + 1;
      i__5190__auto___31148 = G__31149;
      continue;
    } else {
    }
    break;
  }
  var G__31146 = args31144.length;
  switch(G__31146) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31144.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4423__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var x_SINGLEQUOTE_ = temp__4423__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__31151 = x_SINGLEQUOTE_;
              x__$1 = G__31151;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__31152 = x__$1;
      var G__31153 = k;
      var G__31154 = level - 1;
      var G__31155 = update;
      x = G__31152;
      k = G__31153;
      level = G__31154;
      update = G__31155;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_31156 = self__.level + 1;
      while (true) {
        if (i_31156 <= new_level + 1) {
          update[i_31156] = self__.header;
          var G__31157 = i_31156 + 1;
          i_31156 = G__31157;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_31158 = 0;
    while (true) {
      if (i_31158 <= self__.level) {
        var links_31159 = update[i_31158].forward;
        if (links_31159[i_31158] === x__$1) {
          links_31159[i_31158] = x__$1.forward[i_31158];
          var G__31160 = i_31158 + 1;
          i_31158 = G__31160;
          continue;
        } else {
          var G__31161 = i_31158 + 1;
          i_31158 = G__31161;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__31162 = x_SINGLEQUOTE_;
              x__$1 = G__31162;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__31163 = nx;
        var G__31164 = level__$1 - 1;
        x = G__31163;
        level__$1 = G__31164;
        continue;
      } else {
        var G__31165 = x;
        var G__31166 = level__$1 - 1;
        x = G__31165;
        level__$1 = G__31166;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__31167 = x_SINGLEQUOTE_;
              x__$1 = G__31167;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__31168 = nx;
        var G__31169 = level__$1 - 1;
        x = G__31168;
        level__$1 = G__31169;
        continue;
      } else {
        var G__31170 = x;
        var G__31171 = level__$1 - 1;
        x = G__31170;
        level__$1 = G__31171;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
  return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__4131__auto__ = cljs.core.truth_(function() {
    var and__4119__auto__ = me;
    if (cljs.core.truth_(and__4119__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__4119__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__4131__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__4131__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(f) {
  if (typeof cljs.core.async.t_cljs$core$async31177 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async31177 = function(fn_handler, f, meta31178) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta31178 = meta31178;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async31177.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_31179, meta31178__$1) {
      var self__ = this;
      var _31179__$1 = this;
      return new cljs.core.async.t_cljs$core$async31177(self__.fn_handler, self__.f, meta31178__$1);
    };
    cljs.core.async.t_cljs$core$async31177.prototype.cljs$core$IMeta$_meta$arity$1 = function(_31179) {
      var self__ = this;
      var _31179__$1 = this;
      return self__.meta31178;
    };
    cljs.core.async.t_cljs$core$async31177.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async31177.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async31177.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async31177.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta31178", "meta31178", -678997591, null)], null);
    };
    cljs.core.async.t_cljs$core$async31177.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async31177.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async31177";
    cljs.core.async.t_cljs$core$async31177.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async31177");
    };
    cljs.core.async.__GT_t_cljs$core$async31177 = function cljs$core$async$fn_handler_$___GT_t_cljs$core$async31177(fn_handler__$1, f__$1, meta31178) {
      return new cljs.core.async.t_cljs$core$async31177(fn_handler__$1, f__$1, meta31178);
    };
  }
  return new cljs.core.async.t_cljs$core$async31177(cljs$core$async$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args31182 = [];
  var len__5189__auto___31185 = arguments.length;
  var i__5190__auto___31186 = 0;
  while (true) {
    if (i__5190__auto___31186 < len__5189__auto___31185) {
      args31182.push(arguments[i__5190__auto___31186]);
      var G__31187 = i__5190__auto___31186 + 1;
      i__5190__auto___31186 = G__31187;
      continue;
    } else {
    }
    break;
  }
  var G__31184 = args31182.length;
  switch(G__31184) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31182.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args31189 = [];
  var len__5189__auto___31192 = arguments.length;
  var i__5190__auto___31193 = 0;
  while (true) {
    if (i__5190__auto___31193 < len__5189__auto___31192) {
      args31189.push(arguments[i__5190__auto___31193]);
      var G__31194 = i__5190__auto___31193 + 1;
      i__5190__auto___31193 = G__31194;
      continue;
    } else {
    }
    break;
  }
  var G__31191 = args31189.length;
  switch(G__31191) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31189.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_31196 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_31196);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_31196, ret) {
        return function() {
          return fn1.call(null, val_31196);
        };
      }(val_31196, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args31197 = [];
  var len__5189__auto___31200 = arguments.length;
  var i__5190__auto___31201 = 0;
  while (true) {
    if (i__5190__auto___31201 < len__5189__auto___31200) {
      args31197.push(arguments[i__5190__auto___31201]);
      var G__31202 = i__5190__auto___31201 + 1;
      i__5190__auto___31201 = G__31202;
      continue;
    } else {
    }
    break;
  }
  var G__31199 = args31197.length;
  switch(G__31199) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31197.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var ret = temp__4423__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4423__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var retb = temp__4423__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4423__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4423__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__5034__auto___31204 = n;
  var x_31205 = 0;
  while (true) {
    if (x_31205 < n__5034__auto___31204) {
      a[x_31205] = 0;
      var G__31206 = x_31205 + 1;
      x_31205 = G__31206;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__31207 = i + 1;
      i = G__31207;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async31211 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async31211 = function(alt_flag, flag, meta31212) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta31212 = meta31212;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async31211.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_31213, meta31212__$1) {
        var self__ = this;
        var _31213__$1 = this;
        return new cljs.core.async.t_cljs$core$async31211(self__.alt_flag, self__.flag, meta31212__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async31211.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_31213) {
        var self__ = this;
        var _31213__$1 = this;
        return self__.meta31212;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async31211.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async31211.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async31211.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async31211.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta31212", "meta31212", -887190776, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async31211.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async31211.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async31211";
    cljs.core.async.t_cljs$core$async31211.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
        return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async31211");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async31211 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async31211(alt_flag__$1, flag__$1, meta31212) {
        return new cljs.core.async.t_cljs$core$async31211(alt_flag__$1, flag__$1, meta31212);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async31211(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async31217 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async31217 = function(alt_handler, flag, cb, meta31218) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta31218 = meta31218;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async31217.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_31219, meta31218__$1) {
      var self__ = this;
      var _31219__$1 = this;
      return new cljs.core.async.t_cljs$core$async31217(self__.alt_handler, self__.flag, self__.cb, meta31218__$1);
    };
    cljs.core.async.t_cljs$core$async31217.prototype.cljs$core$IMeta$_meta$arity$1 = function(_31219) {
      var self__ = this;
      var _31219__$1 = this;
      return self__.meta31218;
    };
    cljs.core.async.t_cljs$core$async31217.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async31217.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async31217.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async31217.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta31218", "meta31218", -1561684285, null)], null);
    };
    cljs.core.async.t_cljs$core$async31217.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async31217.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async31217";
    cljs.core.async.t_cljs$core$async31217.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async31217");
    };
    cljs.core.async.__GT_t_cljs$core$async31217 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async31217(alt_handler__$1, flag__$1, cb__$1, meta31218) {
      return new cljs.core.async.t_cljs$core$async31217(alt_handler__$1, flag__$1, cb__$1, meta31218);
    };
  }
  return new cljs.core.async.t_cljs$core$async31217(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__31220_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__31220_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__31221_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__31221_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__4131__auto__ = wport;
            if (cljs.core.truth_(or__4131__auto__)) {
              return or__4131__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__31222 = i + 1;
          i = G__31222;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__4131__auto__ = ret;
  if (cljs.core.truth_(or__4131__auto__)) {
    return or__4131__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4425__auto__ = function() {
        var and__4119__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__4119__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__4119__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto__)) {
        var got = temp__4425__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___31228 = arguments.length;
  var i__5190__auto___31229 = 0;
  while (true) {
    if (i__5190__auto___31229 < len__5189__auto___31228) {
      args__5196__auto__.push(arguments[i__5190__auto___31229]);
      var G__31230 = i__5190__auto___31229 + 1;
      i__5190__auto___31229 = G__31230;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 1 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(1), 0) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5197__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__31225) {
  var map__31226 = p__31225;
  var map__31226__$1 = (!(map__31226 == null) ? map__31226.cljs$lang$protocol_mask$partition0$ & 64 || map__31226.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__31226) : map__31226;
  var opts = map__31226__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq31223) {
  var G__31224 = cljs.core.first.call(null, seq31223);
  var seq31223__$1 = cljs.core.next.call(null, seq31223);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__31224, seq31223__$1);
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args31231 = [];
  var len__5189__auto___31281 = arguments.length;
  var i__5190__auto___31282 = 0;
  while (true) {
    if (i__5190__auto___31282 < len__5189__auto___31281) {
      args31231.push(arguments[i__5190__auto___31282]);
      var G__31283 = i__5190__auto___31282 + 1;
      i__5190__auto___31282 = G__31283;
      continue;
    } else {
    }
    break;
  }
  var G__31233 = args31231.length;
  switch(G__31233) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31231.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__10627__auto___31285 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___31285) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___31285) {
          return function(state_31257) {
            var state_val_31258 = state_31257[1];
            if (state_val_31258 === 7) {
              var inst_31253 = state_31257[2];
              var state_31257__$1 = state_31257;
              var statearr_31259_31286 = state_31257__$1;
              statearr_31259_31286[2] = inst_31253;
              statearr_31259_31286[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31258 === 1) {
                var state_31257__$1 = state_31257;
                var statearr_31260_31287 = state_31257__$1;
                statearr_31260_31287[2] = null;
                statearr_31260_31287[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31258 === 4) {
                  var inst_31236 = state_31257[7];
                  var inst_31236__$1 = state_31257[2];
                  var inst_31237 = inst_31236__$1 == null;
                  var state_31257__$1 = function() {
                    var statearr_31261 = state_31257;
                    statearr_31261[7] = inst_31236__$1;
                    return statearr_31261;
                  }();
                  if (cljs.core.truth_(inst_31237)) {
                    var statearr_31262_31288 = state_31257__$1;
                    statearr_31262_31288[1] = 5;
                  } else {
                    var statearr_31263_31289 = state_31257__$1;
                    statearr_31263_31289[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_31258 === 13) {
                    var state_31257__$1 = state_31257;
                    var statearr_31264_31290 = state_31257__$1;
                    statearr_31264_31290[2] = null;
                    statearr_31264_31290[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31258 === 6) {
                      var inst_31236 = state_31257[7];
                      var state_31257__$1 = state_31257;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31257__$1, 11, to, inst_31236);
                    } else {
                      if (state_val_31258 === 3) {
                        var inst_31255 = state_31257[2];
                        var state_31257__$1 = state_31257;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31257__$1, inst_31255);
                      } else {
                        if (state_val_31258 === 12) {
                          var state_31257__$1 = state_31257;
                          var statearr_31265_31291 = state_31257__$1;
                          statearr_31265_31291[2] = null;
                          statearr_31265_31291[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31258 === 2) {
                            var state_31257__$1 = state_31257;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31257__$1, 4, from);
                          } else {
                            if (state_val_31258 === 11) {
                              var inst_31246 = state_31257[2];
                              var state_31257__$1 = state_31257;
                              if (cljs.core.truth_(inst_31246)) {
                                var statearr_31266_31292 = state_31257__$1;
                                statearr_31266_31292[1] = 12;
                              } else {
                                var statearr_31267_31293 = state_31257__$1;
                                statearr_31267_31293[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31258 === 9) {
                                var state_31257__$1 = state_31257;
                                var statearr_31268_31294 = state_31257__$1;
                                statearr_31268_31294[2] = null;
                                statearr_31268_31294[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31258 === 5) {
                                  var state_31257__$1 = state_31257;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_31269_31295 = state_31257__$1;
                                    statearr_31269_31295[1] = 8;
                                  } else {
                                    var statearr_31270_31296 = state_31257__$1;
                                    statearr_31270_31296[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_31258 === 14) {
                                    var inst_31251 = state_31257[2];
                                    var state_31257__$1 = state_31257;
                                    var statearr_31271_31297 = state_31257__$1;
                                    statearr_31271_31297[2] = inst_31251;
                                    statearr_31271_31297[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_31258 === 10) {
                                      var inst_31243 = state_31257[2];
                                      var state_31257__$1 = state_31257;
                                      var statearr_31272_31298 = state_31257__$1;
                                      statearr_31272_31298[2] = inst_31243;
                                      statearr_31272_31298[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_31258 === 8) {
                                        var inst_31240 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_31257__$1 = state_31257;
                                        var statearr_31273_31299 = state_31257__$1;
                                        statearr_31273_31299[2] = inst_31240;
                                        statearr_31273_31299[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___31285);
        return function(switch__10515__auto__, c__10627__auto___31285) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_31277 = [null, null, null, null, null, null, null, null];
              statearr_31277[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_31277[1] = 1;
              return statearr_31277;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_31257) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_31257);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e31278) {
                    if (e31278 instanceof Object) {
                      var ex__10519__auto__ = e31278;
                      var statearr_31279_31300 = state_31257;
                      statearr_31279_31300[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31257);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31278;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31301 = state_31257;
                  state_31257 = G__31301;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_31257) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_31257);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___31285);
      }();
      var state__10629__auto__ = function() {
        var statearr_31280 = f__10628__auto__.call(null);
        statearr_31280[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___31285;
        return statearr_31280;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___31285));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__31485) {
      var vec__31486 = p__31485;
      var v = cljs.core.nth.call(null, vec__31486, 0, null);
      var p = cljs.core.nth.call(null, vec__31486, 1, null);
      var job = vec__31486;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__10627__auto___31668 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___31668, res, vec__31486, v, p, job, jobs, results) {
          return function() {
            var f__10628__auto__ = function() {
              var switch__10515__auto__ = function(c__10627__auto___31668, res, vec__31486, v, p, job, jobs, results) {
                return function(state_31491) {
                  var state_val_31492 = state_31491[1];
                  if (state_val_31492 === 1) {
                    var state_31491__$1 = state_31491;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31491__$1, 2, res, v);
                  } else {
                    if (state_val_31492 === 2) {
                      var inst_31488 = state_31491[2];
                      var inst_31489 = cljs.core.async.close_BANG_.call(null, res);
                      var state_31491__$1 = function() {
                        var statearr_31493 = state_31491;
                        statearr_31493[7] = inst_31488;
                        return statearr_31493;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31491__$1, inst_31489);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__10627__auto___31668, res, vec__31486, v, p, job, jobs, results);
              return function(switch__10515__auto__, c__10627__auto___31668, res, vec__31486, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0 = function() {
                    var statearr_31497 = [null, null, null, null, null, null, null, null];
                    statearr_31497[0] = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
                    statearr_31497[1] = 1;
                    return statearr_31497;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1 = function(state_31491) {
                    while (true) {
                      var ret_value__10517__auto__ = function() {
                        try {
                          while (true) {
                            var result__10518__auto__ = switch__10515__auto__.call(null, state_31491);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__10518__auto__;
                            }
                            break;
                          }
                        } catch (e31498) {
                          if (e31498 instanceof Object) {
                            var ex__10519__auto__ = e31498;
                            var statearr_31499_31669 = state_31491;
                            statearr_31499_31669[5] = ex__10519__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31491);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e31498;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__31670 = state_31491;
                        state_31491 = G__31670;
                        continue;
                      } else {
                        return ret_value__10517__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = function(state_31491) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1.call(this, state_31491);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
                }();
              }(switch__10515__auto__, c__10627__auto___31668, res, vec__31486, v, p, job, jobs, results);
            }();
            var state__10629__auto__ = function() {
              var statearr_31500 = f__10628__auto__.call(null);
              statearr_31500[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___31668;
              return statearr_31500;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
          };
        }(c__10627__auto___31668, res, vec__31486, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__31501) {
      var vec__31502 = p__31501;
      var v = cljs.core.nth.call(null, vec__31502, 0, null);
      var p = cljs.core.nth.call(null, vec__31502, 1, null);
      var job = vec__31502;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__5034__auto___31671 = n;
  var __31672 = 0;
  while (true) {
    if (__31672 < n__5034__auto___31671) {
      var G__31503_31673 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__31503_31673) {
        case "compute":
          var c__10627__auto___31675 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__31672, c__10627__auto___31675, G__31503_31673, n__5034__auto___31671, jobs, results, process, async) {
            return function() {
              var f__10628__auto__ = function() {
                var switch__10515__auto__ = function(__31672, c__10627__auto___31675, G__31503_31673, n__5034__auto___31671, jobs, results, process, async) {
                  return function(state_31516) {
                    var state_val_31517 = state_31516[1];
                    if (state_val_31517 === 1) {
                      var state_31516__$1 = state_31516;
                      var statearr_31518_31676 = state_31516__$1;
                      statearr_31518_31676[2] = null;
                      statearr_31518_31676[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31517 === 2) {
                        var state_31516__$1 = state_31516;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31516__$1, 4, jobs);
                      } else {
                        if (state_val_31517 === 3) {
                          var inst_31514 = state_31516[2];
                          var state_31516__$1 = state_31516;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31516__$1, inst_31514);
                        } else {
                          if (state_val_31517 === 4) {
                            var inst_31506 = state_31516[2];
                            var inst_31507 = process.call(null, inst_31506);
                            var state_31516__$1 = state_31516;
                            if (cljs.core.truth_(inst_31507)) {
                              var statearr_31519_31677 = state_31516__$1;
                              statearr_31519_31677[1] = 5;
                            } else {
                              var statearr_31520_31678 = state_31516__$1;
                              statearr_31520_31678[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_31517 === 5) {
                              var state_31516__$1 = state_31516;
                              var statearr_31521_31679 = state_31516__$1;
                              statearr_31521_31679[2] = null;
                              statearr_31521_31679[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31517 === 6) {
                                var state_31516__$1 = state_31516;
                                var statearr_31522_31680 = state_31516__$1;
                                statearr_31522_31680[2] = null;
                                statearr_31522_31680[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31517 === 7) {
                                  var inst_31512 = state_31516[2];
                                  var state_31516__$1 = state_31516;
                                  var statearr_31523_31681 = state_31516__$1;
                                  statearr_31523_31681[2] = inst_31512;
                                  statearr_31523_31681[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__31672, c__10627__auto___31675, G__31503_31673, n__5034__auto___31671, jobs, results, process, async);
                return function(__31672, switch__10515__auto__, c__10627__auto___31675, G__31503_31673, n__5034__auto___31671, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0 = function() {
                      var statearr_31527 = [null, null, null, null, null, null, null];
                      statearr_31527[0] = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
                      statearr_31527[1] = 1;
                      return statearr_31527;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1 = function(state_31516) {
                      while (true) {
                        var ret_value__10517__auto__ = function() {
                          try {
                            while (true) {
                              var result__10518__auto__ = switch__10515__auto__.call(null, state_31516);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__10518__auto__;
                              }
                              break;
                            }
                          } catch (e31528) {
                            if (e31528 instanceof Object) {
                              var ex__10519__auto__ = e31528;
                              var statearr_31529_31682 = state_31516;
                              statearr_31529_31682[5] = ex__10519__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31516);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e31528;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__31683 = state_31516;
                          state_31516 = G__31683;
                          continue;
                        } else {
                          return ret_value__10517__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = function(state_31516) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1.call(this, state_31516);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
                  }();
                }(__31672, switch__10515__auto__, c__10627__auto___31675, G__31503_31673, n__5034__auto___31671, jobs, results, process, async);
              }();
              var state__10629__auto__ = function() {
                var statearr_31530 = f__10628__auto__.call(null);
                statearr_31530[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___31675;
                return statearr_31530;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
            };
          }(__31672, c__10627__auto___31675, G__31503_31673, n__5034__auto___31671, jobs, results, process, async));
          break;
        case "async":
          var c__10627__auto___31684 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__31672, c__10627__auto___31684, G__31503_31673, n__5034__auto___31671, jobs, results, process, async) {
            return function() {
              var f__10628__auto__ = function() {
                var switch__10515__auto__ = function(__31672, c__10627__auto___31684, G__31503_31673, n__5034__auto___31671, jobs, results, process, async) {
                  return function(state_31543) {
                    var state_val_31544 = state_31543[1];
                    if (state_val_31544 === 1) {
                      var state_31543__$1 = state_31543;
                      var statearr_31545_31685 = state_31543__$1;
                      statearr_31545_31685[2] = null;
                      statearr_31545_31685[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31544 === 2) {
                        var state_31543__$1 = state_31543;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31543__$1, 4, jobs);
                      } else {
                        if (state_val_31544 === 3) {
                          var inst_31541 = state_31543[2];
                          var state_31543__$1 = state_31543;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31543__$1, inst_31541);
                        } else {
                          if (state_val_31544 === 4) {
                            var inst_31533 = state_31543[2];
                            var inst_31534 = async.call(null, inst_31533);
                            var state_31543__$1 = state_31543;
                            if (cljs.core.truth_(inst_31534)) {
                              var statearr_31546_31686 = state_31543__$1;
                              statearr_31546_31686[1] = 5;
                            } else {
                              var statearr_31547_31687 = state_31543__$1;
                              statearr_31547_31687[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_31544 === 5) {
                              var state_31543__$1 = state_31543;
                              var statearr_31548_31688 = state_31543__$1;
                              statearr_31548_31688[2] = null;
                              statearr_31548_31688[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31544 === 6) {
                                var state_31543__$1 = state_31543;
                                var statearr_31549_31689 = state_31543__$1;
                                statearr_31549_31689[2] = null;
                                statearr_31549_31689[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31544 === 7) {
                                  var inst_31539 = state_31543[2];
                                  var state_31543__$1 = state_31543;
                                  var statearr_31550_31690 = state_31543__$1;
                                  statearr_31550_31690[2] = inst_31539;
                                  statearr_31550_31690[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__31672, c__10627__auto___31684, G__31503_31673, n__5034__auto___31671, jobs, results, process, async);
                return function(__31672, switch__10515__auto__, c__10627__auto___31684, G__31503_31673, n__5034__auto___31671, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0 = function() {
                      var statearr_31554 = [null, null, null, null, null, null, null];
                      statearr_31554[0] = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
                      statearr_31554[1] = 1;
                      return statearr_31554;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1 = function(state_31543) {
                      while (true) {
                        var ret_value__10517__auto__ = function() {
                          try {
                            while (true) {
                              var result__10518__auto__ = switch__10515__auto__.call(null, state_31543);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__10518__auto__;
                              }
                              break;
                            }
                          } catch (e31555) {
                            if (e31555 instanceof Object) {
                              var ex__10519__auto__ = e31555;
                              var statearr_31556_31691 = state_31543;
                              statearr_31556_31691[5] = ex__10519__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31543);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e31555;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__31692 = state_31543;
                          state_31543 = G__31692;
                          continue;
                        } else {
                          return ret_value__10517__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = function(state_31543) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1.call(this, state_31543);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
                  }();
                }(__31672, switch__10515__auto__, c__10627__auto___31684, G__31503_31673, n__5034__auto___31671, jobs, results, process, async);
              }();
              var state__10629__auto__ = function() {
                var statearr_31557 = f__10628__auto__.call(null);
                statearr_31557[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___31684;
                return statearr_31557;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
            };
          }(__31672, c__10627__auto___31684, G__31503_31673, n__5034__auto___31671, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__31693 = __31672 + 1;
      __31672 = G__31693;
      continue;
    } else {
    }
    break;
  }
  var c__10627__auto___31694 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___31694, jobs, results, process, async) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___31694, jobs, results, process, async) {
          return function(state_31579) {
            var state_val_31580 = state_31579[1];
            if (state_val_31580 === 1) {
              var state_31579__$1 = state_31579;
              var statearr_31581_31695 = state_31579__$1;
              statearr_31581_31695[2] = null;
              statearr_31581_31695[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31580 === 2) {
                var state_31579__$1 = state_31579;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31579__$1, 4, from);
              } else {
                if (state_val_31580 === 3) {
                  var inst_31577 = state_31579[2];
                  var state_31579__$1 = state_31579;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31579__$1, inst_31577);
                } else {
                  if (state_val_31580 === 4) {
                    var inst_31560 = state_31579[7];
                    var inst_31560__$1 = state_31579[2];
                    var inst_31561 = inst_31560__$1 == null;
                    var state_31579__$1 = function() {
                      var statearr_31582 = state_31579;
                      statearr_31582[7] = inst_31560__$1;
                      return statearr_31582;
                    }();
                    if (cljs.core.truth_(inst_31561)) {
                      var statearr_31583_31696 = state_31579__$1;
                      statearr_31583_31696[1] = 5;
                    } else {
                      var statearr_31584_31697 = state_31579__$1;
                      statearr_31584_31697[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31580 === 5) {
                      var inst_31563 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_31579__$1 = state_31579;
                      var statearr_31585_31698 = state_31579__$1;
                      statearr_31585_31698[2] = inst_31563;
                      statearr_31585_31698[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31580 === 6) {
                        var inst_31565 = state_31579[8];
                        var inst_31560 = state_31579[7];
                        var inst_31565__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_31566 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_31567 = [inst_31560, inst_31565__$1];
                        var inst_31568 = new cljs.core.PersistentVector(null, 2, 5, inst_31566, inst_31567, null);
                        var state_31579__$1 = function() {
                          var statearr_31586 = state_31579;
                          statearr_31586[8] = inst_31565__$1;
                          return statearr_31586;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31579__$1, 8, jobs, inst_31568);
                      } else {
                        if (state_val_31580 === 7) {
                          var inst_31575 = state_31579[2];
                          var state_31579__$1 = state_31579;
                          var statearr_31587_31699 = state_31579__$1;
                          statearr_31587_31699[2] = inst_31575;
                          statearr_31587_31699[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31580 === 8) {
                            var inst_31565 = state_31579[8];
                            var inst_31570 = state_31579[2];
                            var state_31579__$1 = function() {
                              var statearr_31588 = state_31579;
                              statearr_31588[9] = inst_31570;
                              return statearr_31588;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31579__$1, 9, results, inst_31565);
                          } else {
                            if (state_val_31580 === 9) {
                              var inst_31572 = state_31579[2];
                              var state_31579__$1 = function() {
                                var statearr_31589 = state_31579;
                                statearr_31589[10] = inst_31572;
                                return statearr_31589;
                              }();
                              var statearr_31590_31700 = state_31579__$1;
                              statearr_31590_31700[2] = null;
                              statearr_31590_31700[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___31694, jobs, results, process, async);
        return function(switch__10515__auto__, c__10627__auto___31694, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0 = function() {
              var statearr_31594 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_31594[0] = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
              statearr_31594[1] = 1;
              return statearr_31594;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1 = function(state_31579) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_31579);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e31595) {
                    if (e31595 instanceof Object) {
                      var ex__10519__auto__ = e31595;
                      var statearr_31596_31701 = state_31579;
                      statearr_31596_31701[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31579);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31595;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31702 = state_31579;
                  state_31579 = G__31702;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = function(state_31579) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1.call(this, state_31579);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___31694, jobs, results, process, async);
      }();
      var state__10629__auto__ = function() {
        var statearr_31597 = f__10628__auto__.call(null);
        statearr_31597[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___31694;
        return statearr_31597;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___31694, jobs, results, process, async));
  var c__10627__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto__, jobs, results, process, async) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto__, jobs, results, process, async) {
          return function(state_31635) {
            var state_val_31636 = state_31635[1];
            if (state_val_31636 === 7) {
              var inst_31631 = state_31635[2];
              var state_31635__$1 = state_31635;
              var statearr_31637_31703 = state_31635__$1;
              statearr_31637_31703[2] = inst_31631;
              statearr_31637_31703[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31636 === 20) {
                var state_31635__$1 = state_31635;
                var statearr_31638_31704 = state_31635__$1;
                statearr_31638_31704[2] = null;
                statearr_31638_31704[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31636 === 1) {
                  var state_31635__$1 = state_31635;
                  var statearr_31639_31705 = state_31635__$1;
                  statearr_31639_31705[2] = null;
                  statearr_31639_31705[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_31636 === 4) {
                    var inst_31600 = state_31635[7];
                    var inst_31600__$1 = state_31635[2];
                    var inst_31601 = inst_31600__$1 == null;
                    var state_31635__$1 = function() {
                      var statearr_31640 = state_31635;
                      statearr_31640[7] = inst_31600__$1;
                      return statearr_31640;
                    }();
                    if (cljs.core.truth_(inst_31601)) {
                      var statearr_31641_31706 = state_31635__$1;
                      statearr_31641_31706[1] = 5;
                    } else {
                      var statearr_31642_31707 = state_31635__$1;
                      statearr_31642_31707[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31636 === 15) {
                      var inst_31613 = state_31635[8];
                      var state_31635__$1 = state_31635;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31635__$1, 18, to, inst_31613);
                    } else {
                      if (state_val_31636 === 21) {
                        var inst_31626 = state_31635[2];
                        var state_31635__$1 = state_31635;
                        var statearr_31643_31708 = state_31635__$1;
                        statearr_31643_31708[2] = inst_31626;
                        statearr_31643_31708[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_31636 === 13) {
                          var inst_31628 = state_31635[2];
                          var state_31635__$1 = function() {
                            var statearr_31644 = state_31635;
                            statearr_31644[9] = inst_31628;
                            return statearr_31644;
                          }();
                          var statearr_31645_31709 = state_31635__$1;
                          statearr_31645_31709[2] = null;
                          statearr_31645_31709[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31636 === 6) {
                            var inst_31600 = state_31635[7];
                            var state_31635__$1 = state_31635;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31635__$1, 11, inst_31600);
                          } else {
                            if (state_val_31636 === 17) {
                              var inst_31621 = state_31635[2];
                              var state_31635__$1 = state_31635;
                              if (cljs.core.truth_(inst_31621)) {
                                var statearr_31646_31710 = state_31635__$1;
                                statearr_31646_31710[1] = 19;
                              } else {
                                var statearr_31647_31711 = state_31635__$1;
                                statearr_31647_31711[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31636 === 3) {
                                var inst_31633 = state_31635[2];
                                var state_31635__$1 = state_31635;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31635__$1, inst_31633);
                              } else {
                                if (state_val_31636 === 12) {
                                  var inst_31610 = state_31635[10];
                                  var state_31635__$1 = state_31635;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31635__$1, 14, inst_31610);
                                } else {
                                  if (state_val_31636 === 2) {
                                    var state_31635__$1 = state_31635;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31635__$1, 4, results);
                                  } else {
                                    if (state_val_31636 === 19) {
                                      var state_31635__$1 = state_31635;
                                      var statearr_31648_31712 = state_31635__$1;
                                      statearr_31648_31712[2] = null;
                                      statearr_31648_31712[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_31636 === 11) {
                                        var inst_31610 = state_31635[2];
                                        var state_31635__$1 = function() {
                                          var statearr_31649 = state_31635;
                                          statearr_31649[10] = inst_31610;
                                          return statearr_31649;
                                        }();
                                        var statearr_31650_31713 = state_31635__$1;
                                        statearr_31650_31713[2] = null;
                                        statearr_31650_31713[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_31636 === 9) {
                                          var state_31635__$1 = state_31635;
                                          var statearr_31651_31714 = state_31635__$1;
                                          statearr_31651_31714[2] = null;
                                          statearr_31651_31714[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_31636 === 5) {
                                            var state_31635__$1 = state_31635;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_31652_31715 = state_31635__$1;
                                              statearr_31652_31715[1] = 8;
                                            } else {
                                              var statearr_31653_31716 = state_31635__$1;
                                              statearr_31653_31716[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_31636 === 14) {
                                              var inst_31615 = state_31635[11];
                                              var inst_31613 = state_31635[8];
                                              var inst_31613__$1 = state_31635[2];
                                              var inst_31614 = inst_31613__$1 == null;
                                              var inst_31615__$1 = cljs.core.not.call(null, inst_31614);
                                              var state_31635__$1 = function() {
                                                var statearr_31654 = state_31635;
                                                statearr_31654[11] = inst_31615__$1;
                                                statearr_31654[8] = inst_31613__$1;
                                                return statearr_31654;
                                              }();
                                              if (inst_31615__$1) {
                                                var statearr_31655_31717 = state_31635__$1;
                                                statearr_31655_31717[1] = 15;
                                              } else {
                                                var statearr_31656_31718 = state_31635__$1;
                                                statearr_31656_31718[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_31636 === 16) {
                                                var inst_31615 = state_31635[11];
                                                var state_31635__$1 = state_31635;
                                                var statearr_31657_31719 = state_31635__$1;
                                                statearr_31657_31719[2] = inst_31615;
                                                statearr_31657_31719[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_31636 === 10) {
                                                  var inst_31607 = state_31635[2];
                                                  var state_31635__$1 = state_31635;
                                                  var statearr_31658_31720 = state_31635__$1;
                                                  statearr_31658_31720[2] = inst_31607;
                                                  statearr_31658_31720[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_31636 === 18) {
                                                    var inst_31618 = state_31635[2];
                                                    var state_31635__$1 = state_31635;
                                                    var statearr_31659_31721 = state_31635__$1;
                                                    statearr_31659_31721[2] = inst_31618;
                                                    statearr_31659_31721[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_31636 === 8) {
                                                      var inst_31604 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_31635__$1 = state_31635;
                                                      var statearr_31660_31722 = state_31635__$1;
                                                      statearr_31660_31722[2] = inst_31604;
                                                      statearr_31660_31722[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto__, jobs, results, process, async);
        return function(switch__10515__auto__, c__10627__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0 = function() {
              var statearr_31664 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_31664[0] = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
              statearr_31664[1] = 1;
              return statearr_31664;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1 = function(state_31635) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_31635);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e31665) {
                    if (e31665 instanceof Object) {
                      var ex__10519__auto__ = e31665;
                      var statearr_31666_31723 = state_31635;
                      statearr_31666_31723[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31635);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31665;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31724 = state_31635;
                  state_31635 = G__31724;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__ = function(state_31635) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1.call(this, state_31635);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__10516__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto__, jobs, results, process, async);
      }();
      var state__10629__auto__ = function() {
        var statearr_31667 = f__10628__auto__.call(null);
        statearr_31667[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto__;
        return statearr_31667;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto__, jobs, results, process, async));
  return c__10627__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args31725 = [];
  var len__5189__auto___31728 = arguments.length;
  var i__5190__auto___31729 = 0;
  while (true) {
    if (i__5190__auto___31729 < len__5189__auto___31728) {
      args31725.push(arguments[i__5190__auto___31729]);
      var G__31730 = i__5190__auto___31729 + 1;
      i__5190__auto___31729 = G__31730;
      continue;
    } else {
    }
    break;
  }
  var G__31727 = args31725.length;
  switch(G__31727) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31725.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args31732 = [];
  var len__5189__auto___31735 = arguments.length;
  var i__5190__auto___31736 = 0;
  while (true) {
    if (i__5190__auto___31736 < len__5189__auto___31735) {
      args31732.push(arguments[i__5190__auto___31736]);
      var G__31737 = i__5190__auto___31736 + 1;
      i__5190__auto___31736 = G__31737;
      continue;
    } else {
    }
    break;
  }
  var G__31734 = args31732.length;
  switch(G__31734) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31732.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args31739 = [];
  var len__5189__auto___31792 = arguments.length;
  var i__5190__auto___31793 = 0;
  while (true) {
    if (i__5190__auto___31793 < len__5189__auto___31792) {
      args31739.push(arguments[i__5190__auto___31793]);
      var G__31794 = i__5190__auto___31793 + 1;
      i__5190__auto___31793 = G__31794;
      continue;
    } else {
    }
    break;
  }
  var G__31741 = args31739.length;
  switch(G__31741) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31739.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__10627__auto___31796 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___31796, tc, fc) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___31796, tc, fc) {
          return function(state_31767) {
            var state_val_31768 = state_31767[1];
            if (state_val_31768 === 7) {
              var inst_31763 = state_31767[2];
              var state_31767__$1 = state_31767;
              var statearr_31769_31797 = state_31767__$1;
              statearr_31769_31797[2] = inst_31763;
              statearr_31769_31797[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31768 === 1) {
                var state_31767__$1 = state_31767;
                var statearr_31770_31798 = state_31767__$1;
                statearr_31770_31798[2] = null;
                statearr_31770_31798[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31768 === 4) {
                  var inst_31744 = state_31767[7];
                  var inst_31744__$1 = state_31767[2];
                  var inst_31745 = inst_31744__$1 == null;
                  var state_31767__$1 = function() {
                    var statearr_31771 = state_31767;
                    statearr_31771[7] = inst_31744__$1;
                    return statearr_31771;
                  }();
                  if (cljs.core.truth_(inst_31745)) {
                    var statearr_31772_31799 = state_31767__$1;
                    statearr_31772_31799[1] = 5;
                  } else {
                    var statearr_31773_31800 = state_31767__$1;
                    statearr_31773_31800[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_31768 === 13) {
                    var state_31767__$1 = state_31767;
                    var statearr_31774_31801 = state_31767__$1;
                    statearr_31774_31801[2] = null;
                    statearr_31774_31801[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31768 === 6) {
                      var inst_31744 = state_31767[7];
                      var inst_31750 = p.call(null, inst_31744);
                      var state_31767__$1 = state_31767;
                      if (cljs.core.truth_(inst_31750)) {
                        var statearr_31775_31802 = state_31767__$1;
                        statearr_31775_31802[1] = 9;
                      } else {
                        var statearr_31776_31803 = state_31767__$1;
                        statearr_31776_31803[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31768 === 3) {
                        var inst_31765 = state_31767[2];
                        var state_31767__$1 = state_31767;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31767__$1, inst_31765);
                      } else {
                        if (state_val_31768 === 12) {
                          var state_31767__$1 = state_31767;
                          var statearr_31777_31804 = state_31767__$1;
                          statearr_31777_31804[2] = null;
                          statearr_31777_31804[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31768 === 2) {
                            var state_31767__$1 = state_31767;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31767__$1, 4, ch);
                          } else {
                            if (state_val_31768 === 11) {
                              var inst_31744 = state_31767[7];
                              var inst_31754 = state_31767[2];
                              var state_31767__$1 = state_31767;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31767__$1, 8, inst_31754, inst_31744);
                            } else {
                              if (state_val_31768 === 9) {
                                var state_31767__$1 = state_31767;
                                var statearr_31778_31805 = state_31767__$1;
                                statearr_31778_31805[2] = tc;
                                statearr_31778_31805[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31768 === 5) {
                                  var inst_31747 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_31748 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_31767__$1 = function() {
                                    var statearr_31779 = state_31767;
                                    statearr_31779[8] = inst_31747;
                                    return statearr_31779;
                                  }();
                                  var statearr_31780_31806 = state_31767__$1;
                                  statearr_31780_31806[2] = inst_31748;
                                  statearr_31780_31806[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_31768 === 14) {
                                    var inst_31761 = state_31767[2];
                                    var state_31767__$1 = state_31767;
                                    var statearr_31781_31807 = state_31767__$1;
                                    statearr_31781_31807[2] = inst_31761;
                                    statearr_31781_31807[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_31768 === 10) {
                                      var state_31767__$1 = state_31767;
                                      var statearr_31782_31808 = state_31767__$1;
                                      statearr_31782_31808[2] = fc;
                                      statearr_31782_31808[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_31768 === 8) {
                                        var inst_31756 = state_31767[2];
                                        var state_31767__$1 = state_31767;
                                        if (cljs.core.truth_(inst_31756)) {
                                          var statearr_31783_31809 = state_31767__$1;
                                          statearr_31783_31809[1] = 12;
                                        } else {
                                          var statearr_31784_31810 = state_31767__$1;
                                          statearr_31784_31810[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___31796, tc, fc);
        return function(switch__10515__auto__, c__10627__auto___31796, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_31788 = [null, null, null, null, null, null, null, null, null];
              statearr_31788[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_31788[1] = 1;
              return statearr_31788;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_31767) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_31767);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e31789) {
                    if (e31789 instanceof Object) {
                      var ex__10519__auto__ = e31789;
                      var statearr_31790_31811 = state_31767;
                      statearr_31790_31811[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31767);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31789;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31812 = state_31767;
                  state_31767 = G__31812;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_31767) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_31767);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___31796, tc, fc);
      }();
      var state__10629__auto__ = function() {
        var statearr_31791 = f__10628__auto__.call(null);
        statearr_31791[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___31796;
        return statearr_31791;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___31796, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__10627__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto__) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto__) {
          return function(state_31859) {
            var state_val_31860 = state_31859[1];
            if (state_val_31860 === 1) {
              var inst_31845 = init;
              var state_31859__$1 = function() {
                var statearr_31861 = state_31859;
                statearr_31861[7] = inst_31845;
                return statearr_31861;
              }();
              var statearr_31862_31877 = state_31859__$1;
              statearr_31862_31877[2] = null;
              statearr_31862_31877[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31860 === 2) {
                var state_31859__$1 = state_31859;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_31859__$1, 4, ch);
              } else {
                if (state_val_31860 === 3) {
                  var inst_31857 = state_31859[2];
                  var state_31859__$1 = state_31859;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31859__$1, inst_31857);
                } else {
                  if (state_val_31860 === 4) {
                    var inst_31848 = state_31859[8];
                    var inst_31848__$1 = state_31859[2];
                    var inst_31849 = inst_31848__$1 == null;
                    var state_31859__$1 = function() {
                      var statearr_31863 = state_31859;
                      statearr_31863[8] = inst_31848__$1;
                      return statearr_31863;
                    }();
                    if (cljs.core.truth_(inst_31849)) {
                      var statearr_31864_31878 = state_31859__$1;
                      statearr_31864_31878[1] = 5;
                    } else {
                      var statearr_31865_31879 = state_31859__$1;
                      statearr_31865_31879[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31860 === 5) {
                      var inst_31845 = state_31859[7];
                      var state_31859__$1 = state_31859;
                      var statearr_31866_31880 = state_31859__$1;
                      statearr_31866_31880[2] = inst_31845;
                      statearr_31866_31880[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31860 === 6) {
                        var inst_31845 = state_31859[7];
                        var inst_31848 = state_31859[8];
                        var inst_31852 = f.call(null, inst_31845, inst_31848);
                        var inst_31845__$1 = inst_31852;
                        var state_31859__$1 = function() {
                          var statearr_31867 = state_31859;
                          statearr_31867[7] = inst_31845__$1;
                          return statearr_31867;
                        }();
                        var statearr_31868_31881 = state_31859__$1;
                        statearr_31868_31881[2] = null;
                        statearr_31868_31881[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_31860 === 7) {
                          var inst_31855 = state_31859[2];
                          var state_31859__$1 = state_31859;
                          var statearr_31869_31882 = state_31859__$1;
                          statearr_31869_31882[2] = inst_31855;
                          statearr_31869_31882[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto__);
        return function(switch__10515__auto__, c__10627__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__10516__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__10516__auto____0 = function() {
              var statearr_31873 = [null, null, null, null, null, null, null, null, null];
              statearr_31873[0] = cljs$core$async$reduce_$_state_machine__10516__auto__;
              statearr_31873[1] = 1;
              return statearr_31873;
            };
            var cljs$core$async$reduce_$_state_machine__10516__auto____1 = function(state_31859) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_31859);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e31874) {
                    if (e31874 instanceof Object) {
                      var ex__10519__auto__ = e31874;
                      var statearr_31875_31883 = state_31859;
                      statearr_31875_31883[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31859);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31874;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31884 = state_31859;
                  state_31859 = G__31884;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__10516__auto__ = function(state_31859) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__10516__auto____1.call(this, state_31859);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__10516__auto____0;
            cljs$core$async$reduce_$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__10516__auto____1;
            return cljs$core$async$reduce_$_state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto__);
      }();
      var state__10629__auto__ = function() {
        var statearr_31876 = f__10628__auto__.call(null);
        statearr_31876[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto__;
        return statearr_31876;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto__));
  return c__10627__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args31885 = [];
  var len__5189__auto___31937 = arguments.length;
  var i__5190__auto___31938 = 0;
  while (true) {
    if (i__5190__auto___31938 < len__5189__auto___31937) {
      args31885.push(arguments[i__5190__auto___31938]);
      var G__31939 = i__5190__auto___31938 + 1;
      i__5190__auto___31938 = G__31939;
      continue;
    } else {
    }
    break;
  }
  var G__31887 = args31885.length;
  switch(G__31887) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args31885.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__10627__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto__) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto__) {
          return function(state_31912) {
            var state_val_31913 = state_31912[1];
            if (state_val_31913 === 7) {
              var inst_31894 = state_31912[2];
              var state_31912__$1 = state_31912;
              var statearr_31914_31941 = state_31912__$1;
              statearr_31914_31941[2] = inst_31894;
              statearr_31914_31941[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_31913 === 1) {
                var inst_31888 = cljs.core.seq.call(null, coll);
                var inst_31889 = inst_31888;
                var state_31912__$1 = function() {
                  var statearr_31915 = state_31912;
                  statearr_31915[7] = inst_31889;
                  return statearr_31915;
                }();
                var statearr_31916_31942 = state_31912__$1;
                statearr_31916_31942[2] = null;
                statearr_31916_31942[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_31913 === 4) {
                  var inst_31889 = state_31912[7];
                  var inst_31892 = cljs.core.first.call(null, inst_31889);
                  var state_31912__$1 = state_31912;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_31912__$1, 7, ch, inst_31892);
                } else {
                  if (state_val_31913 === 13) {
                    var inst_31906 = state_31912[2];
                    var state_31912__$1 = state_31912;
                    var statearr_31917_31943 = state_31912__$1;
                    statearr_31917_31943[2] = inst_31906;
                    statearr_31917_31943[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_31913 === 6) {
                      var inst_31897 = state_31912[2];
                      var state_31912__$1 = state_31912;
                      if (cljs.core.truth_(inst_31897)) {
                        var statearr_31918_31944 = state_31912__$1;
                        statearr_31918_31944[1] = 8;
                      } else {
                        var statearr_31919_31945 = state_31912__$1;
                        statearr_31919_31945[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_31913 === 3) {
                        var inst_31910 = state_31912[2];
                        var state_31912__$1 = state_31912;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_31912__$1, inst_31910);
                      } else {
                        if (state_val_31913 === 12) {
                          var state_31912__$1 = state_31912;
                          var statearr_31920_31946 = state_31912__$1;
                          statearr_31920_31946[2] = null;
                          statearr_31920_31946[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_31913 === 2) {
                            var inst_31889 = state_31912[7];
                            var state_31912__$1 = state_31912;
                            if (cljs.core.truth_(inst_31889)) {
                              var statearr_31921_31947 = state_31912__$1;
                              statearr_31921_31947[1] = 4;
                            } else {
                              var statearr_31922_31948 = state_31912__$1;
                              statearr_31922_31948[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_31913 === 11) {
                              var inst_31903 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_31912__$1 = state_31912;
                              var statearr_31923_31949 = state_31912__$1;
                              statearr_31923_31949[2] = inst_31903;
                              statearr_31923_31949[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_31913 === 9) {
                                var state_31912__$1 = state_31912;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_31924_31950 = state_31912__$1;
                                  statearr_31924_31950[1] = 11;
                                } else {
                                  var statearr_31925_31951 = state_31912__$1;
                                  statearr_31925_31951[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_31913 === 5) {
                                  var inst_31889 = state_31912[7];
                                  var state_31912__$1 = state_31912;
                                  var statearr_31926_31952 = state_31912__$1;
                                  statearr_31926_31952[2] = inst_31889;
                                  statearr_31926_31952[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_31913 === 10) {
                                    var inst_31908 = state_31912[2];
                                    var state_31912__$1 = state_31912;
                                    var statearr_31927_31953 = state_31912__$1;
                                    statearr_31927_31953[2] = inst_31908;
                                    statearr_31927_31953[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_31913 === 8) {
                                      var inst_31889 = state_31912[7];
                                      var inst_31899 = cljs.core.next.call(null, inst_31889);
                                      var inst_31889__$1 = inst_31899;
                                      var state_31912__$1 = function() {
                                        var statearr_31928 = state_31912;
                                        statearr_31928[7] = inst_31889__$1;
                                        return statearr_31928;
                                      }();
                                      var statearr_31929_31954 = state_31912__$1;
                                      statearr_31929_31954[2] = null;
                                      statearr_31929_31954[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto__);
        return function(switch__10515__auto__, c__10627__auto__) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_31933 = [null, null, null, null, null, null, null, null];
              statearr_31933[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_31933[1] = 1;
              return statearr_31933;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_31912) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_31912);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e31934) {
                    if (e31934 instanceof Object) {
                      var ex__10519__auto__ = e31934;
                      var statearr_31935_31955 = state_31912;
                      statearr_31935_31955[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_31912);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e31934;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__31956 = state_31912;
                  state_31912 = G__31956;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_31912) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_31912);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto__);
      }();
      var state__10629__auto__ = function() {
        var statearr_31936 = f__10628__auto__.call(null);
        statearr_31936[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto__;
        return statearr_31936;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto__));
  return c__10627__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4786__auto__ = _ == null ? null : _;
    var m__4787__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, _);
    } else {
      var m__4787__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__4787__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m, ch);
    } else {
      var m__4787__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m);
    } else {
      var m__4787__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async32178 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async32178 = function(mult, ch, cs, meta32179) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta32179 = meta32179;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_32180, meta32179__$1) {
          var self__ = this;
          var _32180__$1 = this;
          return new cljs.core.async.t_cljs$core$async32178(self__.mult, self__.ch, self__.cs, meta32179__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_32180) {
          var self__ = this;
          var _32180__$1 = this;
          return self__.meta32179;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta32179", "meta32179", 78861087, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async32178.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async32178.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32178";
      cljs.core.async.t_cljs$core$async32178.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
          return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async32178");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async32178 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async32178(mult__$1, ch__$1, cs__$1, meta32179) {
          return new cljs.core.async.t_cljs$core$async32178(mult__$1, ch__$1, cs__$1, meta32179);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async32178(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__10627__auto___32399 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___32399, cs, m, dchan, dctr, done) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___32399, cs, m, dchan, dctr, done) {
          return function(state_32311) {
            var state_val_32312 = state_32311[1];
            if (state_val_32312 === 7) {
              var inst_32307 = state_32311[2];
              var state_32311__$1 = state_32311;
              var statearr_32313_32400 = state_32311__$1;
              statearr_32313_32400[2] = inst_32307;
              statearr_32313_32400[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32312 === 20) {
                var inst_32212 = state_32311[7];
                var inst_32222 = cljs.core.first.call(null, inst_32212);
                var inst_32223 = cljs.core.nth.call(null, inst_32222, 0, null);
                var inst_32224 = cljs.core.nth.call(null, inst_32222, 1, null);
                var state_32311__$1 = function() {
                  var statearr_32314 = state_32311;
                  statearr_32314[8] = inst_32223;
                  return statearr_32314;
                }();
                if (cljs.core.truth_(inst_32224)) {
                  var statearr_32315_32401 = state_32311__$1;
                  statearr_32315_32401[1] = 22;
                } else {
                  var statearr_32316_32402 = state_32311__$1;
                  statearr_32316_32402[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32312 === 27) {
                  var inst_32252 = state_32311[9];
                  var inst_32259 = state_32311[10];
                  var inst_32254 = state_32311[11];
                  var inst_32183 = state_32311[12];
                  var inst_32259__$1 = cljs.core._nth.call(null, inst_32252, inst_32254);
                  var inst_32260 = cljs.core.async.put_BANG_.call(null, inst_32259__$1, inst_32183, done);
                  var state_32311__$1 = function() {
                    var statearr_32317 = state_32311;
                    statearr_32317[10] = inst_32259__$1;
                    return statearr_32317;
                  }();
                  if (cljs.core.truth_(inst_32260)) {
                    var statearr_32318_32403 = state_32311__$1;
                    statearr_32318_32403[1] = 30;
                  } else {
                    var statearr_32319_32404 = state_32311__$1;
                    statearr_32319_32404[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32312 === 1) {
                    var state_32311__$1 = state_32311;
                    var statearr_32320_32405 = state_32311__$1;
                    statearr_32320_32405[2] = null;
                    statearr_32320_32405[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32312 === 24) {
                      var inst_32212 = state_32311[7];
                      var inst_32229 = state_32311[2];
                      var inst_32230 = cljs.core.next.call(null, inst_32212);
                      var inst_32192 = inst_32230;
                      var inst_32193 = null;
                      var inst_32194 = 0;
                      var inst_32195 = 0;
                      var state_32311__$1 = function() {
                        var statearr_32321 = state_32311;
                        statearr_32321[13] = inst_32195;
                        statearr_32321[14] = inst_32229;
                        statearr_32321[15] = inst_32192;
                        statearr_32321[16] = inst_32193;
                        statearr_32321[17] = inst_32194;
                        return statearr_32321;
                      }();
                      var statearr_32322_32406 = state_32311__$1;
                      statearr_32322_32406[2] = null;
                      statearr_32322_32406[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32312 === 39) {
                        var state_32311__$1 = state_32311;
                        var statearr_32326_32407 = state_32311__$1;
                        statearr_32326_32407[2] = null;
                        statearr_32326_32407[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32312 === 4) {
                          var inst_32183 = state_32311[12];
                          var inst_32183__$1 = state_32311[2];
                          var inst_32184 = inst_32183__$1 == null;
                          var state_32311__$1 = function() {
                            var statearr_32327 = state_32311;
                            statearr_32327[12] = inst_32183__$1;
                            return statearr_32327;
                          }();
                          if (cljs.core.truth_(inst_32184)) {
                            var statearr_32328_32408 = state_32311__$1;
                            statearr_32328_32408[1] = 5;
                          } else {
                            var statearr_32329_32409 = state_32311__$1;
                            statearr_32329_32409[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32312 === 15) {
                            var inst_32195 = state_32311[13];
                            var inst_32192 = state_32311[15];
                            var inst_32193 = state_32311[16];
                            var inst_32194 = state_32311[17];
                            var inst_32208 = state_32311[2];
                            var inst_32209 = inst_32195 + 1;
                            var tmp32323 = inst_32192;
                            var tmp32324 = inst_32193;
                            var tmp32325 = inst_32194;
                            var inst_32192__$1 = tmp32323;
                            var inst_32193__$1 = tmp32324;
                            var inst_32194__$1 = tmp32325;
                            var inst_32195__$1 = inst_32209;
                            var state_32311__$1 = function() {
                              var statearr_32330 = state_32311;
                              statearr_32330[13] = inst_32195__$1;
                              statearr_32330[18] = inst_32208;
                              statearr_32330[15] = inst_32192__$1;
                              statearr_32330[16] = inst_32193__$1;
                              statearr_32330[17] = inst_32194__$1;
                              return statearr_32330;
                            }();
                            var statearr_32331_32410 = state_32311__$1;
                            statearr_32331_32410[2] = null;
                            statearr_32331_32410[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32312 === 21) {
                              var inst_32233 = state_32311[2];
                              var state_32311__$1 = state_32311;
                              var statearr_32335_32411 = state_32311__$1;
                              statearr_32335_32411[2] = inst_32233;
                              statearr_32335_32411[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32312 === 31) {
                                var inst_32259 = state_32311[10];
                                var inst_32263 = done.call(null, null);
                                var inst_32264 = cljs.core.async.untap_STAR_.call(null, m, inst_32259);
                                var state_32311__$1 = function() {
                                  var statearr_32336 = state_32311;
                                  statearr_32336[19] = inst_32263;
                                  return statearr_32336;
                                }();
                                var statearr_32337_32412 = state_32311__$1;
                                statearr_32337_32412[2] = inst_32264;
                                statearr_32337_32412[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32312 === 32) {
                                  var inst_32253 = state_32311[20];
                                  var inst_32252 = state_32311[9];
                                  var inst_32251 = state_32311[21];
                                  var inst_32254 = state_32311[11];
                                  var inst_32266 = state_32311[2];
                                  var inst_32267 = inst_32254 + 1;
                                  var tmp32332 = inst_32253;
                                  var tmp32333 = inst_32252;
                                  var tmp32334 = inst_32251;
                                  var inst_32251__$1 = tmp32334;
                                  var inst_32252__$1 = tmp32333;
                                  var inst_32253__$1 = tmp32332;
                                  var inst_32254__$1 = inst_32267;
                                  var state_32311__$1 = function() {
                                    var statearr_32338 = state_32311;
                                    statearr_32338[20] = inst_32253__$1;
                                    statearr_32338[22] = inst_32266;
                                    statearr_32338[9] = inst_32252__$1;
                                    statearr_32338[21] = inst_32251__$1;
                                    statearr_32338[11] = inst_32254__$1;
                                    return statearr_32338;
                                  }();
                                  var statearr_32339_32413 = state_32311__$1;
                                  statearr_32339_32413[2] = null;
                                  statearr_32339_32413[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_32312 === 40) {
                                    var inst_32279 = state_32311[23];
                                    var inst_32283 = done.call(null, null);
                                    var inst_32284 = cljs.core.async.untap_STAR_.call(null, m, inst_32279);
                                    var state_32311__$1 = function() {
                                      var statearr_32340 = state_32311;
                                      statearr_32340[24] = inst_32283;
                                      return statearr_32340;
                                    }();
                                    var statearr_32341_32414 = state_32311__$1;
                                    statearr_32341_32414[2] = inst_32284;
                                    statearr_32341_32414[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_32312 === 33) {
                                      var inst_32270 = state_32311[25];
                                      var inst_32272 = cljs.core.chunked_seq_QMARK_.call(null, inst_32270);
                                      var state_32311__$1 = state_32311;
                                      if (inst_32272) {
                                        var statearr_32342_32415 = state_32311__$1;
                                        statearr_32342_32415[1] = 36;
                                      } else {
                                        var statearr_32343_32416 = state_32311__$1;
                                        statearr_32343_32416[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_32312 === 13) {
                                        var inst_32202 = state_32311[26];
                                        var inst_32205 = cljs.core.async.close_BANG_.call(null, inst_32202);
                                        var state_32311__$1 = state_32311;
                                        var statearr_32344_32417 = state_32311__$1;
                                        statearr_32344_32417[2] = inst_32205;
                                        statearr_32344_32417[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32312 === 22) {
                                          var inst_32223 = state_32311[8];
                                          var inst_32226 = cljs.core.async.close_BANG_.call(null, inst_32223);
                                          var state_32311__$1 = state_32311;
                                          var statearr_32345_32418 = state_32311__$1;
                                          statearr_32345_32418[2] = inst_32226;
                                          statearr_32345_32418[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_32312 === 36) {
                                            var inst_32270 = state_32311[25];
                                            var inst_32274 = cljs.core.chunk_first.call(null, inst_32270);
                                            var inst_32275 = cljs.core.chunk_rest.call(null, inst_32270);
                                            var inst_32276 = cljs.core.count.call(null, inst_32274);
                                            var inst_32251 = inst_32275;
                                            var inst_32252 = inst_32274;
                                            var inst_32253 = inst_32276;
                                            var inst_32254 = 0;
                                            var state_32311__$1 = function() {
                                              var statearr_32346 = state_32311;
                                              statearr_32346[20] = inst_32253;
                                              statearr_32346[9] = inst_32252;
                                              statearr_32346[21] = inst_32251;
                                              statearr_32346[11] = inst_32254;
                                              return statearr_32346;
                                            }();
                                            var statearr_32347_32419 = state_32311__$1;
                                            statearr_32347_32419[2] = null;
                                            statearr_32347_32419[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_32312 === 41) {
                                              var inst_32270 = state_32311[25];
                                              var inst_32286 = state_32311[2];
                                              var inst_32287 = cljs.core.next.call(null, inst_32270);
                                              var inst_32251 = inst_32287;
                                              var inst_32252 = null;
                                              var inst_32253 = 0;
                                              var inst_32254 = 0;
                                              var state_32311__$1 = function() {
                                                var statearr_32348 = state_32311;
                                                statearr_32348[20] = inst_32253;
                                                statearr_32348[27] = inst_32286;
                                                statearr_32348[9] = inst_32252;
                                                statearr_32348[21] = inst_32251;
                                                statearr_32348[11] = inst_32254;
                                                return statearr_32348;
                                              }();
                                              var statearr_32349_32420 = state_32311__$1;
                                              statearr_32349_32420[2] = null;
                                              statearr_32349_32420[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_32312 === 43) {
                                                var state_32311__$1 = state_32311;
                                                var statearr_32350_32421 = state_32311__$1;
                                                statearr_32350_32421[2] = null;
                                                statearr_32350_32421[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_32312 === 29) {
                                                  var inst_32295 = state_32311[2];
                                                  var state_32311__$1 = state_32311;
                                                  var statearr_32351_32422 = state_32311__$1;
                                                  statearr_32351_32422[2] = inst_32295;
                                                  statearr_32351_32422[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_32312 === 44) {
                                                    var inst_32304 = state_32311[2];
                                                    var state_32311__$1 = function() {
                                                      var statearr_32352 = state_32311;
                                                      statearr_32352[28] = inst_32304;
                                                      return statearr_32352;
                                                    }();
                                                    var statearr_32353_32423 = state_32311__$1;
                                                    statearr_32353_32423[2] = null;
                                                    statearr_32353_32423[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_32312 === 6) {
                                                      var inst_32243 = state_32311[29];
                                                      var inst_32242 = cljs.core.deref.call(null, cs);
                                                      var inst_32243__$1 = cljs.core.keys.call(null, inst_32242);
                                                      var inst_32244 = cljs.core.count.call(null, inst_32243__$1);
                                                      var inst_32245 = cljs.core.reset_BANG_.call(null, dctr, inst_32244);
                                                      var inst_32250 = cljs.core.seq.call(null, inst_32243__$1);
                                                      var inst_32251 = inst_32250;
                                                      var inst_32252 = null;
                                                      var inst_32253 = 0;
                                                      var inst_32254 = 0;
                                                      var state_32311__$1 = function() {
                                                        var statearr_32354 = state_32311;
                                                        statearr_32354[20] = inst_32253;
                                                        statearr_32354[9] = inst_32252;
                                                        statearr_32354[21] = inst_32251;
                                                        statearr_32354[29] = inst_32243__$1;
                                                        statearr_32354[30] = inst_32245;
                                                        statearr_32354[11] = inst_32254;
                                                        return statearr_32354;
                                                      }();
                                                      var statearr_32355_32424 = state_32311__$1;
                                                      statearr_32355_32424[2] = null;
                                                      statearr_32355_32424[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_32312 === 28) {
                                                        var inst_32270 = state_32311[25];
                                                        var inst_32251 = state_32311[21];
                                                        var inst_32270__$1 = cljs.core.seq.call(null, inst_32251);
                                                        var state_32311__$1 = function() {
                                                          var statearr_32356 = state_32311;
                                                          statearr_32356[25] = inst_32270__$1;
                                                          return statearr_32356;
                                                        }();
                                                        if (inst_32270__$1) {
                                                          var statearr_32357_32425 = state_32311__$1;
                                                          statearr_32357_32425[1] = 33;
                                                        } else {
                                                          var statearr_32358_32426 = state_32311__$1;
                                                          statearr_32358_32426[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_32312 === 25) {
                                                          var inst_32253 = state_32311[20];
                                                          var inst_32254 = state_32311[11];
                                                          var inst_32256 = inst_32254 < inst_32253;
                                                          var inst_32257 = inst_32256;
                                                          var state_32311__$1 = state_32311;
                                                          if (cljs.core.truth_(inst_32257)) {
                                                            var statearr_32359_32427 = state_32311__$1;
                                                            statearr_32359_32427[1] = 27;
                                                          } else {
                                                            var statearr_32360_32428 = state_32311__$1;
                                                            statearr_32360_32428[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_32312 === 34) {
                                                            var state_32311__$1 = state_32311;
                                                            var statearr_32361_32429 = state_32311__$1;
                                                            statearr_32361_32429[2] = null;
                                                            statearr_32361_32429[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_32312 === 17) {
                                                              var state_32311__$1 = state_32311;
                                                              var statearr_32362_32430 = state_32311__$1;
                                                              statearr_32362_32430[2] = null;
                                                              statearr_32362_32430[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_32312 === 3) {
                                                                var inst_32309 = state_32311[2];
                                                                var state_32311__$1 = state_32311;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32311__$1, inst_32309);
                                                              } else {
                                                                if (state_val_32312 === 12) {
                                                                  var inst_32238 = state_32311[2];
                                                                  var state_32311__$1 = state_32311;
                                                                  var statearr_32363_32431 = state_32311__$1;
                                                                  statearr_32363_32431[2] = inst_32238;
                                                                  statearr_32363_32431[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_32312 === 2) {
                                                                    var state_32311__$1 = state_32311;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32311__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_32312 === 23) {
                                                                      var state_32311__$1 = state_32311;
                                                                      var statearr_32364_32432 = state_32311__$1;
                                                                      statearr_32364_32432[2] = null;
                                                                      statearr_32364_32432[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_32312 === 35) {
                                                                        var inst_32293 = state_32311[2];
                                                                        var state_32311__$1 = state_32311;
                                                                        var statearr_32365_32433 = state_32311__$1;
                                                                        statearr_32365_32433[2] = inst_32293;
                                                                        statearr_32365_32433[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_32312 === 19) {
                                                                          var inst_32212 = state_32311[7];
                                                                          var inst_32216 = cljs.core.chunk_first.call(null, inst_32212);
                                                                          var inst_32217 = cljs.core.chunk_rest.call(null, inst_32212);
                                                                          var inst_32218 = cljs.core.count.call(null, inst_32216);
                                                                          var inst_32192 = inst_32217;
                                                                          var inst_32193 = inst_32216;
                                                                          var inst_32194 = inst_32218;
                                                                          var inst_32195 = 0;
                                                                          var state_32311__$1 = function() {
                                                                            var statearr_32366 = state_32311;
                                                                            statearr_32366[13] = inst_32195;
                                                                            statearr_32366[15] = inst_32192;
                                                                            statearr_32366[16] = inst_32193;
                                                                            statearr_32366[17] = inst_32194;
                                                                            return statearr_32366;
                                                                          }();
                                                                          var statearr_32367_32434 = state_32311__$1;
                                                                          statearr_32367_32434[2] = null;
                                                                          statearr_32367_32434[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_32312 === 11) {
                                                                            var inst_32212 = state_32311[7];
                                                                            var inst_32192 = state_32311[15];
                                                                            var inst_32212__$1 = cljs.core.seq.call(null, inst_32192);
                                                                            var state_32311__$1 = function() {
                                                                              var statearr_32368 = state_32311;
                                                                              statearr_32368[7] = inst_32212__$1;
                                                                              return statearr_32368;
                                                                            }();
                                                                            if (inst_32212__$1) {
                                                                              var statearr_32369_32435 = state_32311__$1;
                                                                              statearr_32369_32435[1] = 16;
                                                                            } else {
                                                                              var statearr_32370_32436 = state_32311__$1;
                                                                              statearr_32370_32436[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_32312 === 9) {
                                                                              var inst_32240 = state_32311[2];
                                                                              var state_32311__$1 = state_32311;
                                                                              var statearr_32371_32437 = state_32311__$1;
                                                                              statearr_32371_32437[2] = inst_32240;
                                                                              statearr_32371_32437[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_32312 === 5) {
                                                                                var inst_32190 = cljs.core.deref.call(null, cs);
                                                                                var inst_32191 = cljs.core.seq.call(null, inst_32190);
                                                                                var inst_32192 = inst_32191;
                                                                                var inst_32193 = null;
                                                                                var inst_32194 = 0;
                                                                                var inst_32195 = 0;
                                                                                var state_32311__$1 = function() {
                                                                                  var statearr_32372 = state_32311;
                                                                                  statearr_32372[13] = inst_32195;
                                                                                  statearr_32372[15] = inst_32192;
                                                                                  statearr_32372[16] = inst_32193;
                                                                                  statearr_32372[17] = inst_32194;
                                                                                  return statearr_32372;
                                                                                }();
                                                                                var statearr_32373_32438 = state_32311__$1;
                                                                                statearr_32373_32438[2] = null;
                                                                                statearr_32373_32438[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_32312 === 14) {
                                                                                  var state_32311__$1 = state_32311;
                                                                                  var statearr_32374_32439 = state_32311__$1;
                                                                                  statearr_32374_32439[2] = null;
                                                                                  statearr_32374_32439[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_32312 === 45) {
                                                                                    var inst_32301 = state_32311[2];
                                                                                    var state_32311__$1 = state_32311;
                                                                                    var statearr_32375_32440 = state_32311__$1;
                                                                                    statearr_32375_32440[2] = inst_32301;
                                                                                    statearr_32375_32440[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_32312 === 26) {
                                                                                      var inst_32243 = state_32311[29];
                                                                                      var inst_32297 = state_32311[2];
                                                                                      var inst_32298 = cljs.core.seq.call(null, inst_32243);
                                                                                      var state_32311__$1 = function() {
                                                                                        var statearr_32376 = state_32311;
                                                                                        statearr_32376[31] = inst_32297;
                                                                                        return statearr_32376;
                                                                                      }();
                                                                                      if (inst_32298) {
                                                                                        var statearr_32377_32441 = state_32311__$1;
                                                                                        statearr_32377_32441[1] = 42;
                                                                                      } else {
                                                                                        var statearr_32378_32442 = state_32311__$1;
                                                                                        statearr_32378_32442[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_32312 === 16) {
                                                                                        var inst_32212 = state_32311[7];
                                                                                        var inst_32214 = cljs.core.chunked_seq_QMARK_.call(null, inst_32212);
                                                                                        var state_32311__$1 = state_32311;
                                                                                        if (inst_32214) {
                                                                                          var statearr_32379_32443 = state_32311__$1;
                                                                                          statearr_32379_32443[1] = 19;
                                                                                        } else {
                                                                                          var statearr_32380_32444 = state_32311__$1;
                                                                                          statearr_32380_32444[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_32312 === 38) {
                                                                                          var inst_32290 = state_32311[2];
                                                                                          var state_32311__$1 = state_32311;
                                                                                          var statearr_32381_32445 = state_32311__$1;
                                                                                          statearr_32381_32445[2] = inst_32290;
                                                                                          statearr_32381_32445[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_32312 === 30) {
                                                                                            var state_32311__$1 = state_32311;
                                                                                            var statearr_32382_32446 = state_32311__$1;
                                                                                            statearr_32382_32446[2] = null;
                                                                                            statearr_32382_32446[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_32312 === 10) {
                                                                                              var inst_32195 = state_32311[13];
                                                                                              var inst_32193 = state_32311[16];
                                                                                              var inst_32201 = cljs.core._nth.call(null, inst_32193, inst_32195);
                                                                                              var inst_32202 = cljs.core.nth.call(null, inst_32201, 0, null);
                                                                                              var inst_32203 = cljs.core.nth.call(null, inst_32201, 1, null);
                                                                                              var state_32311__$1 = function() {
                                                                                                var statearr_32383 = state_32311;
                                                                                                statearr_32383[26] = inst_32202;
                                                                                                return statearr_32383;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_32203)) {
                                                                                                var statearr_32384_32447 = state_32311__$1;
                                                                                                statearr_32384_32447[1] = 13;
                                                                                              } else {
                                                                                                var statearr_32385_32448 = state_32311__$1;
                                                                                                statearr_32385_32448[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_32312 === 18) {
                                                                                                var inst_32236 = state_32311[2];
                                                                                                var state_32311__$1 = state_32311;
                                                                                                var statearr_32386_32449 = state_32311__$1;
                                                                                                statearr_32386_32449[2] = inst_32236;
                                                                                                statearr_32386_32449[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_32312 === 42) {
                                                                                                  var state_32311__$1 = state_32311;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32311__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_32312 === 37) {
                                                                                                    var inst_32270 = state_32311[25];
                                                                                                    var inst_32279 = state_32311[23];
                                                                                                    var inst_32183 = state_32311[12];
                                                                                                    var inst_32279__$1 = cljs.core.first.call(null, inst_32270);
                                                                                                    var inst_32280 = cljs.core.async.put_BANG_.call(null, inst_32279__$1, inst_32183, done);
                                                                                                    var state_32311__$1 = function() {
                                                                                                      var statearr_32387 = state_32311;
                                                                                                      statearr_32387[23] = inst_32279__$1;
                                                                                                      return statearr_32387;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_32280)) {
                                                                                                      var statearr_32388_32450 = state_32311__$1;
                                                                                                      statearr_32388_32450[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_32389_32451 = state_32311__$1;
                                                                                                      statearr_32389_32451[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_32312 === 8) {
                                                                                                      var inst_32195 = state_32311[13];
                                                                                                      var inst_32194 = state_32311[17];
                                                                                                      var inst_32197 = inst_32195 < inst_32194;
                                                                                                      var inst_32198 = inst_32197;
                                                                                                      var state_32311__$1 = state_32311;
                                                                                                      if (cljs.core.truth_(inst_32198)) {
                                                                                                        var statearr_32390_32452 = state_32311__$1;
                                                                                                        statearr_32390_32452[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_32391_32453 = state_32311__$1;
                                                                                                        statearr_32391_32453[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___32399, cs, m, dchan, dctr, done);
        return function(switch__10515__auto__, c__10627__auto___32399, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__10516__auto__ = null;
            var cljs$core$async$mult_$_state_machine__10516__auto____0 = function() {
              var statearr_32395 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32395[0] = cljs$core$async$mult_$_state_machine__10516__auto__;
              statearr_32395[1] = 1;
              return statearr_32395;
            };
            var cljs$core$async$mult_$_state_machine__10516__auto____1 = function(state_32311) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_32311);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e32396) {
                    if (e32396 instanceof Object) {
                      var ex__10519__auto__ = e32396;
                      var statearr_32397_32454 = state_32311;
                      statearr_32397_32454[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32311);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32396;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32455 = state_32311;
                  state_32311 = G__32455;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__10516__auto__ = function(state_32311) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__10516__auto____1.call(this, state_32311);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__10516__auto____0;
            cljs$core$async$mult_$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__10516__auto____1;
            return cljs$core$async$mult_$_state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___32399, cs, m, dchan, dctr, done);
      }();
      var state__10629__auto__ = function() {
        var statearr_32398 = f__10628__auto__.call(null);
        statearr_32398[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___32399;
        return statearr_32398;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___32399, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args32456 = [];
  var len__5189__auto___32459 = arguments.length;
  var i__5190__auto___32460 = 0;
  while (true) {
    if (i__5190__auto___32460 < len__5189__auto___32459) {
      args32456.push(arguments[i__5190__auto___32460]);
      var G__32461 = i__5190__auto___32460 + 1;
      i__5190__auto___32460 = G__32461;
      continue;
    } else {
    }
    break;
  }
  var G__32458 = args32456.length;
  switch(G__32458) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32456.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m, ch);
    } else {
      var m__4787__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m, ch);
    } else {
      var m__4787__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m);
    } else {
      var m__4787__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m, state_map);
    } else {
      var m__4787__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4786__auto__ = m == null ? null : m;
    var m__4787__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, m, mode);
    } else {
      var m__4787__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__5196__auto__ = [];
  var len__5189__auto___32473 = arguments.length;
  var i__5190__auto___32474 = 0;
  while (true) {
    if (i__5190__auto___32474 < len__5189__auto___32473) {
      args__5196__auto__.push(arguments[i__5190__auto___32474]);
      var G__32475 = i__5190__auto___32474 + 1;
      i__5190__auto___32474 = G__32475;
      continue;
    } else {
    }
    break;
  }
  var argseq__5197__auto__ = 3 < args__5196__auto__.length ? new cljs.core.IndexedSeq(args__5196__auto__.slice(3), 0) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5197__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__32467) {
  var map__32468 = p__32467;
  var map__32468__$1 = (!(map__32468 == null) ? map__32468.cljs$lang$protocol_mask$partition0$ & 64 || map__32468.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__32468) : map__32468;
  var opts = map__32468__$1;
  var statearr_32470_32476 = state;
  statearr_32470_32476[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4425__auto__ = cljs.core.async.do_alts.call(null, function(map__32468, map__32468__$1, opts) {
    return function(val) {
      var statearr_32471_32477 = state;
      statearr_32471_32477[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__32468, map__32468__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var cb = temp__4425__auto__;
    var statearr_32472_32478 = state;
    statearr_32472_32478[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq32463) {
  var G__32464 = cljs.core.first.call(null, seq32463);
  var seq32463__$1 = cljs.core.next.call(null, seq32463);
  var G__32465 = cljs.core.first.call(null, seq32463__$1);
  var seq32463__$2 = cljs.core.next.call(null, seq32463__$1);
  var G__32466 = cljs.core.first.call(null, seq32463__$2);
  var seq32463__$3 = cljs.core.next.call(null, seq32463__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__32464, G__32465, G__32466, seq32463__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async32642 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async32642 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta32643) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta32643 = meta32643;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_32644, meta32643__$1) {
          var self__ = this;
          var _32644__$1 = this;
          return new cljs.core.async.t_cljs$core$async32642(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta32643__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_32644) {
          var self__ = this;
          var _32644__$1 = this;
          return self__.meta32643;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta32643", "meta32643", 1142679234, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async32642.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async32642.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32642";
      cljs.core.async.t_cljs$core$async32642.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
          return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async32642");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async32642 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async32642(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta32643) {
          return new cljs.core.async.t_cljs$core$async32642(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta32643);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async32642(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__10627__auto___32805 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___32805, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___32805, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_32742) {
            var state_val_32743 = state_32742[1];
            if (state_val_32743 === 7) {
              var inst_32660 = state_32742[2];
              var state_32742__$1 = state_32742;
              var statearr_32744_32806 = state_32742__$1;
              statearr_32744_32806[2] = inst_32660;
              statearr_32744_32806[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32743 === 20) {
                var inst_32672 = state_32742[7];
                var state_32742__$1 = state_32742;
                var statearr_32745_32807 = state_32742__$1;
                statearr_32745_32807[2] = inst_32672;
                statearr_32745_32807[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32743 === 27) {
                  var state_32742__$1 = state_32742;
                  var statearr_32746_32808 = state_32742__$1;
                  statearr_32746_32808[2] = null;
                  statearr_32746_32808[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32743 === 1) {
                    var inst_32648 = state_32742[8];
                    var inst_32648__$1 = calc_state.call(null);
                    var inst_32650 = inst_32648__$1 == null;
                    var inst_32651 = cljs.core.not.call(null, inst_32650);
                    var state_32742__$1 = function() {
                      var statearr_32747 = state_32742;
                      statearr_32747[8] = inst_32648__$1;
                      return statearr_32747;
                    }();
                    if (inst_32651) {
                      var statearr_32748_32809 = state_32742__$1;
                      statearr_32748_32809[1] = 2;
                    } else {
                      var statearr_32749_32810 = state_32742__$1;
                      statearr_32749_32810[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32743 === 24) {
                      var inst_32702 = state_32742[9];
                      var inst_32716 = state_32742[10];
                      var inst_32695 = state_32742[11];
                      var inst_32716__$1 = inst_32695.call(null, inst_32702);
                      var state_32742__$1 = function() {
                        var statearr_32750 = state_32742;
                        statearr_32750[10] = inst_32716__$1;
                        return statearr_32750;
                      }();
                      if (cljs.core.truth_(inst_32716__$1)) {
                        var statearr_32751_32811 = state_32742__$1;
                        statearr_32751_32811[1] = 29;
                      } else {
                        var statearr_32752_32812 = state_32742__$1;
                        statearr_32752_32812[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32743 === 4) {
                        var inst_32663 = state_32742[2];
                        var state_32742__$1 = state_32742;
                        if (cljs.core.truth_(inst_32663)) {
                          var statearr_32753_32813 = state_32742__$1;
                          statearr_32753_32813[1] = 8;
                        } else {
                          var statearr_32754_32814 = state_32742__$1;
                          statearr_32754_32814[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32743 === 15) {
                          var inst_32689 = state_32742[2];
                          var state_32742__$1 = state_32742;
                          if (cljs.core.truth_(inst_32689)) {
                            var statearr_32755_32815 = state_32742__$1;
                            statearr_32755_32815[1] = 19;
                          } else {
                            var statearr_32756_32816 = state_32742__$1;
                            statearr_32756_32816[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32743 === 21) {
                            var inst_32694 = state_32742[12];
                            var inst_32694__$1 = state_32742[2];
                            var inst_32695 = cljs.core.get.call(null, inst_32694__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_32696 = cljs.core.get.call(null, inst_32694__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_32697 = cljs.core.get.call(null, inst_32694__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_32742__$1 = function() {
                              var statearr_32757 = state_32742;
                              statearr_32757[12] = inst_32694__$1;
                              statearr_32757[11] = inst_32695;
                              statearr_32757[13] = inst_32696;
                              return statearr_32757;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_32742__$1, 22, inst_32697);
                          } else {
                            if (state_val_32743 === 31) {
                              var inst_32724 = state_32742[2];
                              var state_32742__$1 = state_32742;
                              if (cljs.core.truth_(inst_32724)) {
                                var statearr_32758_32817 = state_32742__$1;
                                statearr_32758_32817[1] = 32;
                              } else {
                                var statearr_32759_32818 = state_32742__$1;
                                statearr_32759_32818[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32743 === 32) {
                                var inst_32701 = state_32742[14];
                                var state_32742__$1 = state_32742;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32742__$1, 35, out, inst_32701);
                              } else {
                                if (state_val_32743 === 33) {
                                  var inst_32694 = state_32742[12];
                                  var inst_32672 = inst_32694;
                                  var state_32742__$1 = function() {
                                    var statearr_32760 = state_32742;
                                    statearr_32760[7] = inst_32672;
                                    return statearr_32760;
                                  }();
                                  var statearr_32761_32819 = state_32742__$1;
                                  statearr_32761_32819[2] = null;
                                  statearr_32761_32819[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_32743 === 13) {
                                    var inst_32672 = state_32742[7];
                                    var inst_32679 = inst_32672.cljs$lang$protocol_mask$partition0$;
                                    var inst_32680 = inst_32679 & 64;
                                    var inst_32681 = inst_32672.cljs$core$ISeq$;
                                    var inst_32682 = inst_32680 || inst_32681;
                                    var state_32742__$1 = state_32742;
                                    if (cljs.core.truth_(inst_32682)) {
                                      var statearr_32762_32820 = state_32742__$1;
                                      statearr_32762_32820[1] = 16;
                                    } else {
                                      var statearr_32763_32821 = state_32742__$1;
                                      statearr_32763_32821[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_32743 === 22) {
                                      var inst_32702 = state_32742[9];
                                      var inst_32701 = state_32742[14];
                                      var inst_32700 = state_32742[2];
                                      var inst_32701__$1 = cljs.core.nth.call(null, inst_32700, 0, null);
                                      var inst_32702__$1 = cljs.core.nth.call(null, inst_32700, 1, null);
                                      var inst_32703 = inst_32701__$1 == null;
                                      var inst_32704 = cljs.core._EQ_.call(null, inst_32702__$1, change);
                                      var inst_32705 = inst_32703 || inst_32704;
                                      var state_32742__$1 = function() {
                                        var statearr_32764 = state_32742;
                                        statearr_32764[9] = inst_32702__$1;
                                        statearr_32764[14] = inst_32701__$1;
                                        return statearr_32764;
                                      }();
                                      if (cljs.core.truth_(inst_32705)) {
                                        var statearr_32765_32822 = state_32742__$1;
                                        statearr_32765_32822[1] = 23;
                                      } else {
                                        var statearr_32766_32823 = state_32742__$1;
                                        statearr_32766_32823[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_32743 === 36) {
                                        var inst_32694 = state_32742[12];
                                        var inst_32672 = inst_32694;
                                        var state_32742__$1 = function() {
                                          var statearr_32767 = state_32742;
                                          statearr_32767[7] = inst_32672;
                                          return statearr_32767;
                                        }();
                                        var statearr_32768_32824 = state_32742__$1;
                                        statearr_32768_32824[2] = null;
                                        statearr_32768_32824[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32743 === 29) {
                                          var inst_32716 = state_32742[10];
                                          var state_32742__$1 = state_32742;
                                          var statearr_32769_32825 = state_32742__$1;
                                          statearr_32769_32825[2] = inst_32716;
                                          statearr_32769_32825[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_32743 === 6) {
                                            var state_32742__$1 = state_32742;
                                            var statearr_32770_32826 = state_32742__$1;
                                            statearr_32770_32826[2] = false;
                                            statearr_32770_32826[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_32743 === 28) {
                                              var inst_32712 = state_32742[2];
                                              var inst_32713 = calc_state.call(null);
                                              var inst_32672 = inst_32713;
                                              var state_32742__$1 = function() {
                                                var statearr_32771 = state_32742;
                                                statearr_32771[7] = inst_32672;
                                                statearr_32771[15] = inst_32712;
                                                return statearr_32771;
                                              }();
                                              var statearr_32772_32827 = state_32742__$1;
                                              statearr_32772_32827[2] = null;
                                              statearr_32772_32827[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_32743 === 25) {
                                                var inst_32738 = state_32742[2];
                                                var state_32742__$1 = state_32742;
                                                var statearr_32773_32828 = state_32742__$1;
                                                statearr_32773_32828[2] = inst_32738;
                                                statearr_32773_32828[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_32743 === 34) {
                                                  var inst_32736 = state_32742[2];
                                                  var state_32742__$1 = state_32742;
                                                  var statearr_32774_32829 = state_32742__$1;
                                                  statearr_32774_32829[2] = inst_32736;
                                                  statearr_32774_32829[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_32743 === 17) {
                                                    var state_32742__$1 = state_32742;
                                                    var statearr_32775_32830 = state_32742__$1;
                                                    statearr_32775_32830[2] = false;
                                                    statearr_32775_32830[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_32743 === 3) {
                                                      var state_32742__$1 = state_32742;
                                                      var statearr_32776_32831 = state_32742__$1;
                                                      statearr_32776_32831[2] = false;
                                                      statearr_32776_32831[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_32743 === 12) {
                                                        var inst_32740 = state_32742[2];
                                                        var state_32742__$1 = state_32742;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32742__$1, inst_32740);
                                                      } else {
                                                        if (state_val_32743 === 2) {
                                                          var inst_32648 = state_32742[8];
                                                          var inst_32653 = inst_32648.cljs$lang$protocol_mask$partition0$;
                                                          var inst_32654 = inst_32653 & 64;
                                                          var inst_32655 = inst_32648.cljs$core$ISeq$;
                                                          var inst_32656 = inst_32654 || inst_32655;
                                                          var state_32742__$1 = state_32742;
                                                          if (cljs.core.truth_(inst_32656)) {
                                                            var statearr_32777_32832 = state_32742__$1;
                                                            statearr_32777_32832[1] = 5;
                                                          } else {
                                                            var statearr_32778_32833 = state_32742__$1;
                                                            statearr_32778_32833[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_32743 === 23) {
                                                            var inst_32701 = state_32742[14];
                                                            var inst_32707 = inst_32701 == null;
                                                            var state_32742__$1 = state_32742;
                                                            if (cljs.core.truth_(inst_32707)) {
                                                              var statearr_32779_32834 = state_32742__$1;
                                                              statearr_32779_32834[1] = 26;
                                                            } else {
                                                              var statearr_32780_32835 = state_32742__$1;
                                                              statearr_32780_32835[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_32743 === 35) {
                                                              var inst_32727 = state_32742[2];
                                                              var state_32742__$1 = state_32742;
                                                              if (cljs.core.truth_(inst_32727)) {
                                                                var statearr_32781_32836 = state_32742__$1;
                                                                statearr_32781_32836[1] = 36;
                                                              } else {
                                                                var statearr_32782_32837 = state_32742__$1;
                                                                statearr_32782_32837[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_32743 === 19) {
                                                                var inst_32672 = state_32742[7];
                                                                var inst_32691 = cljs.core.apply.call(null, cljs.core.hash_map, inst_32672);
                                                                var state_32742__$1 = state_32742;
                                                                var statearr_32783_32838 = state_32742__$1;
                                                                statearr_32783_32838[2] = inst_32691;
                                                                statearr_32783_32838[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_32743 === 11) {
                                                                  var inst_32672 = state_32742[7];
                                                                  var inst_32676 = inst_32672 == null;
                                                                  var inst_32677 = cljs.core.not.call(null, inst_32676);
                                                                  var state_32742__$1 = state_32742;
                                                                  if (inst_32677) {
                                                                    var statearr_32784_32839 = state_32742__$1;
                                                                    statearr_32784_32839[1] = 13;
                                                                  } else {
                                                                    var statearr_32785_32840 = state_32742__$1;
                                                                    statearr_32785_32840[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_32743 === 9) {
                                                                    var inst_32648 = state_32742[8];
                                                                    var state_32742__$1 = state_32742;
                                                                    var statearr_32786_32841 = state_32742__$1;
                                                                    statearr_32786_32841[2] = inst_32648;
                                                                    statearr_32786_32841[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_32743 === 5) {
                                                                      var state_32742__$1 = state_32742;
                                                                      var statearr_32787_32842 = state_32742__$1;
                                                                      statearr_32787_32842[2] = true;
                                                                      statearr_32787_32842[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_32743 === 14) {
                                                                        var state_32742__$1 = state_32742;
                                                                        var statearr_32788_32843 = state_32742__$1;
                                                                        statearr_32788_32843[2] = false;
                                                                        statearr_32788_32843[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_32743 === 26) {
                                                                          var inst_32702 = state_32742[9];
                                                                          var inst_32709 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_32702);
                                                                          var state_32742__$1 = state_32742;
                                                                          var statearr_32789_32844 = state_32742__$1;
                                                                          statearr_32789_32844[2] = inst_32709;
                                                                          statearr_32789_32844[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_32743 === 16) {
                                                                            var state_32742__$1 = state_32742;
                                                                            var statearr_32790_32845 = state_32742__$1;
                                                                            statearr_32790_32845[2] = true;
                                                                            statearr_32790_32845[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_32743 === 38) {
                                                                              var inst_32732 = state_32742[2];
                                                                              var state_32742__$1 = state_32742;
                                                                              var statearr_32791_32846 = state_32742__$1;
                                                                              statearr_32791_32846[2] = inst_32732;
                                                                              statearr_32791_32846[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_32743 === 30) {
                                                                                var inst_32702 = state_32742[9];
                                                                                var inst_32695 = state_32742[11];
                                                                                var inst_32696 = state_32742[13];
                                                                                var inst_32719 = cljs.core.empty_QMARK_.call(null, inst_32695);
                                                                                var inst_32720 = inst_32696.call(null, inst_32702);
                                                                                var inst_32721 = cljs.core.not.call(null, inst_32720);
                                                                                var inst_32722 = inst_32719 && inst_32721;
                                                                                var state_32742__$1 = state_32742;
                                                                                var statearr_32792_32847 = state_32742__$1;
                                                                                statearr_32792_32847[2] = inst_32722;
                                                                                statearr_32792_32847[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_32743 === 10) {
                                                                                  var inst_32648 = state_32742[8];
                                                                                  var inst_32668 = state_32742[2];
                                                                                  var inst_32669 = cljs.core.get.call(null, inst_32668, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_32670 = cljs.core.get.call(null, inst_32668, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_32671 = cljs.core.get.call(null, inst_32668, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_32672 = inst_32648;
                                                                                  var state_32742__$1 = function() {
                                                                                    var statearr_32793 = state_32742;
                                                                                    statearr_32793[16] = inst_32671;
                                                                                    statearr_32793[17] = inst_32670;
                                                                                    statearr_32793[18] = inst_32669;
                                                                                    statearr_32793[7] = inst_32672;
                                                                                    return statearr_32793;
                                                                                  }();
                                                                                  var statearr_32794_32848 = state_32742__$1;
                                                                                  statearr_32794_32848[2] = null;
                                                                                  statearr_32794_32848[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_32743 === 18) {
                                                                                    var inst_32686 = state_32742[2];
                                                                                    var state_32742__$1 = state_32742;
                                                                                    var statearr_32795_32849 = state_32742__$1;
                                                                                    statearr_32795_32849[2] = inst_32686;
                                                                                    statearr_32795_32849[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_32743 === 37) {
                                                                                      var state_32742__$1 = state_32742;
                                                                                      var statearr_32796_32850 = state_32742__$1;
                                                                                      statearr_32796_32850[2] = null;
                                                                                      statearr_32796_32850[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_32743 === 8) {
                                                                                        var inst_32648 = state_32742[8];
                                                                                        var inst_32665 = cljs.core.apply.call(null, cljs.core.hash_map, inst_32648);
                                                                                        var state_32742__$1 = state_32742;
                                                                                        var statearr_32797_32851 = state_32742__$1;
                                                                                        statearr_32797_32851[2] = inst_32665;
                                                                                        statearr_32797_32851[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___32805, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__10515__auto__, c__10627__auto___32805, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__10516__auto__ = null;
            var cljs$core$async$mix_$_state_machine__10516__auto____0 = function() {
              var statearr_32801 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32801[0] = cljs$core$async$mix_$_state_machine__10516__auto__;
              statearr_32801[1] = 1;
              return statearr_32801;
            };
            var cljs$core$async$mix_$_state_machine__10516__auto____1 = function(state_32742) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_32742);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e32802) {
                    if (e32802 instanceof Object) {
                      var ex__10519__auto__ = e32802;
                      var statearr_32803_32852 = state_32742;
                      statearr_32803_32852[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32742);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32802;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__32853 = state_32742;
                  state_32742 = G__32853;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__10516__auto__ = function(state_32742) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__10516__auto____1.call(this, state_32742);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__10516__auto____0;
            cljs$core$async$mix_$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__10516__auto____1;
            return cljs$core$async$mix_$_state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___32805, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__10629__auto__ = function() {
        var statearr_32804 = f__10628__auto__.call(null);
        statearr_32804[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___32805;
        return statearr_32804;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___32805, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4786__auto__ = p == null ? null : p;
    var m__4787__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__4787__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4786__auto__ = p == null ? null : p;
    var m__4787__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, p, v, ch);
    } else {
      var m__4787__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args32854 = [];
  var len__5189__auto___32857 = arguments.length;
  var i__5190__auto___32858 = 0;
  while (true) {
    if (i__5190__auto___32858 < len__5189__auto___32857) {
      args32854.push(arguments[i__5190__auto___32858]);
      var G__32859 = i__5190__auto___32858 + 1;
      i__5190__auto___32858 = G__32859;
      continue;
    } else {
    }
    break;
  }
  var G__32856 = args32854.length;
  switch(G__32856) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32854.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__4786__auto__ = p == null ? null : p;
    var m__4787__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, p);
    } else {
      var m__4787__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__4786__auto__ = p == null ? null : p;
    var m__4787__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4786__auto__)];
    if (!(m__4787__auto__ == null)) {
      return m__4787__auto__.call(null, p, v);
    } else {
      var m__4787__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__4787__auto____$1 == null)) {
        return m__4787__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args32862 = [];
  var len__5189__auto___32987 = arguments.length;
  var i__5190__auto___32988 = 0;
  while (true) {
    if (i__5190__auto___32988 < len__5189__auto___32987) {
      args32862.push(arguments[i__5190__auto___32988]);
      var G__32989 = i__5190__auto___32988 + 1;
      i__5190__auto___32988 = G__32989;
      continue;
    } else {
    }
    break;
  }
  var G__32864 = args32862.length;
  switch(G__32864) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args32862.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__4131__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__4131__auto__)) {
        return or__4131__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__4131__auto__, mults) {
          return function(p1__32861_SHARP_) {
            if (cljs.core.truth_(p1__32861_SHARP_.call(null, topic))) {
              return p1__32861_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__32861_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__4131__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async32865 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async32865 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta32866) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta32866 = meta32866;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_32867, meta32866__$1) {
          var self__ = this;
          var _32867__$1 = this;
          return new cljs.core.async.t_cljs$core$async32865(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta32866__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_32867) {
          var self__ = this;
          var _32867__$1 = this;
          return self__.meta32866;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4425__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var m = temp__4425__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta32866", "meta32866", 1236352090, null)], 
          null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async32865.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async32865.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async32865";
      cljs.core.async.t_cljs$core$async32865.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
          return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async32865");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async32865 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async32865(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta32866) {
          return new cljs.core.async.t_cljs$core$async32865(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta32866);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async32865(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__10627__auto___32991 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___32991, mults, ensure_mult, p) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___32991, mults, ensure_mult, p) {
          return function(state_32939) {
            var state_val_32940 = state_32939[1];
            if (state_val_32940 === 7) {
              var inst_32935 = state_32939[2];
              var state_32939__$1 = state_32939;
              var statearr_32941_32992 = state_32939__$1;
              statearr_32941_32992[2] = inst_32935;
              statearr_32941_32992[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_32940 === 20) {
                var state_32939__$1 = state_32939;
                var statearr_32942_32993 = state_32939__$1;
                statearr_32942_32993[2] = null;
                statearr_32942_32993[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_32940 === 1) {
                  var state_32939__$1 = state_32939;
                  var statearr_32943_32994 = state_32939__$1;
                  statearr_32943_32994[2] = null;
                  statearr_32943_32994[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_32940 === 24) {
                    var inst_32918 = state_32939[7];
                    var inst_32927 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_32918);
                    var state_32939__$1 = state_32939;
                    var statearr_32944_32995 = state_32939__$1;
                    statearr_32944_32995[2] = inst_32927;
                    statearr_32944_32995[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_32940 === 4) {
                      var inst_32870 = state_32939[8];
                      var inst_32870__$1 = state_32939[2];
                      var inst_32871 = inst_32870__$1 == null;
                      var state_32939__$1 = function() {
                        var statearr_32945 = state_32939;
                        statearr_32945[8] = inst_32870__$1;
                        return statearr_32945;
                      }();
                      if (cljs.core.truth_(inst_32871)) {
                        var statearr_32946_32996 = state_32939__$1;
                        statearr_32946_32996[1] = 5;
                      } else {
                        var statearr_32947_32997 = state_32939__$1;
                        statearr_32947_32997[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_32940 === 15) {
                        var inst_32912 = state_32939[2];
                        var state_32939__$1 = state_32939;
                        var statearr_32948_32998 = state_32939__$1;
                        statearr_32948_32998[2] = inst_32912;
                        statearr_32948_32998[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_32940 === 21) {
                          var inst_32932 = state_32939[2];
                          var state_32939__$1 = function() {
                            var statearr_32949 = state_32939;
                            statearr_32949[9] = inst_32932;
                            return statearr_32949;
                          }();
                          var statearr_32950_32999 = state_32939__$1;
                          statearr_32950_32999[2] = null;
                          statearr_32950_32999[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_32940 === 13) {
                            var inst_32894 = state_32939[10];
                            var inst_32896 = cljs.core.chunked_seq_QMARK_.call(null, inst_32894);
                            var state_32939__$1 = state_32939;
                            if (inst_32896) {
                              var statearr_32951_33000 = state_32939__$1;
                              statearr_32951_33000[1] = 16;
                            } else {
                              var statearr_32952_33001 = state_32939__$1;
                              statearr_32952_33001[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_32940 === 22) {
                              var inst_32924 = state_32939[2];
                              var state_32939__$1 = state_32939;
                              if (cljs.core.truth_(inst_32924)) {
                                var statearr_32953_33002 = state_32939__$1;
                                statearr_32953_33002[1] = 23;
                              } else {
                                var statearr_32954_33003 = state_32939__$1;
                                statearr_32954_33003[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_32940 === 6) {
                                var inst_32918 = state_32939[7];
                                var inst_32920 = state_32939[11];
                                var inst_32870 = state_32939[8];
                                var inst_32918__$1 = topic_fn.call(null, inst_32870);
                                var inst_32919 = cljs.core.deref.call(null, mults);
                                var inst_32920__$1 = cljs.core.get.call(null, inst_32919, inst_32918__$1);
                                var state_32939__$1 = function() {
                                  var statearr_32955 = state_32939;
                                  statearr_32955[7] = inst_32918__$1;
                                  statearr_32955[11] = inst_32920__$1;
                                  return statearr_32955;
                                }();
                                if (cljs.core.truth_(inst_32920__$1)) {
                                  var statearr_32956_33004 = state_32939__$1;
                                  statearr_32956_33004[1] = 19;
                                } else {
                                  var statearr_32957_33005 = state_32939__$1;
                                  statearr_32957_33005[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_32940 === 25) {
                                  var inst_32929 = state_32939[2];
                                  var state_32939__$1 = state_32939;
                                  var statearr_32958_33006 = state_32939__$1;
                                  statearr_32958_33006[2] = inst_32929;
                                  statearr_32958_33006[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_32940 === 17) {
                                    var inst_32894 = state_32939[10];
                                    var inst_32903 = cljs.core.first.call(null, inst_32894);
                                    var inst_32904 = cljs.core.async.muxch_STAR_.call(null, inst_32903);
                                    var inst_32905 = cljs.core.async.close_BANG_.call(null, inst_32904);
                                    var inst_32906 = cljs.core.next.call(null, inst_32894);
                                    var inst_32880 = inst_32906;
                                    var inst_32881 = null;
                                    var inst_32882 = 0;
                                    var inst_32883 = 0;
                                    var state_32939__$1 = function() {
                                      var statearr_32959 = state_32939;
                                      statearr_32959[12] = inst_32882;
                                      statearr_32959[13] = inst_32881;
                                      statearr_32959[14] = inst_32883;
                                      statearr_32959[15] = inst_32905;
                                      statearr_32959[16] = inst_32880;
                                      return statearr_32959;
                                    }();
                                    var statearr_32960_33007 = state_32939__$1;
                                    statearr_32960_33007[2] = null;
                                    statearr_32960_33007[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_32940 === 3) {
                                      var inst_32937 = state_32939[2];
                                      var state_32939__$1 = state_32939;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_32939__$1, inst_32937);
                                    } else {
                                      if (state_val_32940 === 12) {
                                        var inst_32914 = state_32939[2];
                                        var state_32939__$1 = state_32939;
                                        var statearr_32961_33008 = state_32939__$1;
                                        statearr_32961_33008[2] = inst_32914;
                                        statearr_32961_33008[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_32940 === 2) {
                                          var state_32939__$1 = state_32939;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_32939__$1, 4, ch);
                                        } else {
                                          if (state_val_32940 === 23) {
                                            var state_32939__$1 = state_32939;
                                            var statearr_32962_33009 = state_32939__$1;
                                            statearr_32962_33009[2] = null;
                                            statearr_32962_33009[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_32940 === 19) {
                                              var inst_32920 = state_32939[11];
                                              var inst_32870 = state_32939[8];
                                              var inst_32922 = cljs.core.async.muxch_STAR_.call(null, inst_32920);
                                              var state_32939__$1 = state_32939;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_32939__$1, 22, inst_32922, inst_32870);
                                            } else {
                                              if (state_val_32940 === 11) {
                                                var inst_32894 = state_32939[10];
                                                var inst_32880 = state_32939[16];
                                                var inst_32894__$1 = cljs.core.seq.call(null, inst_32880);
                                                var state_32939__$1 = function() {
                                                  var statearr_32963 = state_32939;
                                                  statearr_32963[10] = inst_32894__$1;
                                                  return statearr_32963;
                                                }();
                                                if (inst_32894__$1) {
                                                  var statearr_32964_33010 = state_32939__$1;
                                                  statearr_32964_33010[1] = 13;
                                                } else {
                                                  var statearr_32965_33011 = state_32939__$1;
                                                  statearr_32965_33011[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_32940 === 9) {
                                                  var inst_32916 = state_32939[2];
                                                  var state_32939__$1 = state_32939;
                                                  var statearr_32966_33012 = state_32939__$1;
                                                  statearr_32966_33012[2] = inst_32916;
                                                  statearr_32966_33012[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_32940 === 5) {
                                                    var inst_32877 = cljs.core.deref.call(null, mults);
                                                    var inst_32878 = cljs.core.vals.call(null, inst_32877);
                                                    var inst_32879 = cljs.core.seq.call(null, inst_32878);
                                                    var inst_32880 = inst_32879;
                                                    var inst_32881 = null;
                                                    var inst_32882 = 0;
                                                    var inst_32883 = 0;
                                                    var state_32939__$1 = function() {
                                                      var statearr_32967 = state_32939;
                                                      statearr_32967[12] = inst_32882;
                                                      statearr_32967[13] = inst_32881;
                                                      statearr_32967[14] = inst_32883;
                                                      statearr_32967[16] = inst_32880;
                                                      return statearr_32967;
                                                    }();
                                                    var statearr_32968_33013 = state_32939__$1;
                                                    statearr_32968_33013[2] = null;
                                                    statearr_32968_33013[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_32940 === 14) {
                                                      var state_32939__$1 = state_32939;
                                                      var statearr_32972_33014 = state_32939__$1;
                                                      statearr_32972_33014[2] = null;
                                                      statearr_32972_33014[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_32940 === 16) {
                                                        var inst_32894 = state_32939[10];
                                                        var inst_32898 = cljs.core.chunk_first.call(null, inst_32894);
                                                        var inst_32899 = cljs.core.chunk_rest.call(null, inst_32894);
                                                        var inst_32900 = cljs.core.count.call(null, inst_32898);
                                                        var inst_32880 = inst_32899;
                                                        var inst_32881 = inst_32898;
                                                        var inst_32882 = inst_32900;
                                                        var inst_32883 = 0;
                                                        var state_32939__$1 = function() {
                                                          var statearr_32973 = state_32939;
                                                          statearr_32973[12] = inst_32882;
                                                          statearr_32973[13] = inst_32881;
                                                          statearr_32973[14] = inst_32883;
                                                          statearr_32973[16] = inst_32880;
                                                          return statearr_32973;
                                                        }();
                                                        var statearr_32974_33015 = state_32939__$1;
                                                        statearr_32974_33015[2] = null;
                                                        statearr_32974_33015[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_32940 === 10) {
                                                          var inst_32882 = state_32939[12];
                                                          var inst_32881 = state_32939[13];
                                                          var inst_32883 = state_32939[14];
                                                          var inst_32880 = state_32939[16];
                                                          var inst_32888 = cljs.core._nth.call(null, inst_32881, inst_32883);
                                                          var inst_32889 = cljs.core.async.muxch_STAR_.call(null, inst_32888);
                                                          var inst_32890 = cljs.core.async.close_BANG_.call(null, inst_32889);
                                                          var inst_32891 = inst_32883 + 1;
                                                          var tmp32969 = inst_32882;
                                                          var tmp32970 = inst_32881;
                                                          var tmp32971 = inst_32880;
                                                          var inst_32880__$1 = tmp32971;
                                                          var inst_32881__$1 = tmp32970;
                                                          var inst_32882__$1 = tmp32969;
                                                          var inst_32883__$1 = inst_32891;
                                                          var state_32939__$1 = function() {
                                                            var statearr_32975 = state_32939;
                                                            statearr_32975[17] = inst_32890;
                                                            statearr_32975[12] = inst_32882__$1;
                                                            statearr_32975[13] = inst_32881__$1;
                                                            statearr_32975[14] = inst_32883__$1;
                                                            statearr_32975[16] = inst_32880__$1;
                                                            return statearr_32975;
                                                          }();
                                                          var statearr_32976_33016 = state_32939__$1;
                                                          statearr_32976_33016[2] = null;
                                                          statearr_32976_33016[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_32940 === 18) {
                                                            var inst_32909 = state_32939[2];
                                                            var state_32939__$1 = state_32939;
                                                            var statearr_32977_33017 = state_32939__$1;
                                                            statearr_32977_33017[2] = inst_32909;
                                                            statearr_32977_33017[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_32940 === 8) {
                                                              var inst_32882 = state_32939[12];
                                                              var inst_32883 = state_32939[14];
                                                              var inst_32885 = inst_32883 < inst_32882;
                                                              var inst_32886 = inst_32885;
                                                              var state_32939__$1 = state_32939;
                                                              if (cljs.core.truth_(inst_32886)) {
                                                                var statearr_32978_33018 = state_32939__$1;
                                                                statearr_32978_33018[1] = 10;
                                                              } else {
                                                                var statearr_32979_33019 = state_32939__$1;
                                                                statearr_32979_33019[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___32991, mults, ensure_mult, p);
        return function(switch__10515__auto__, c__10627__auto___32991, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_32983 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_32983[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_32983[1] = 1;
              return statearr_32983;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_32939) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_32939);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e32984) {
                    if (e32984 instanceof Object) {
                      var ex__10519__auto__ = e32984;
                      var statearr_32985_33020 = state_32939;
                      statearr_32985_33020[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_32939);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e32984;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33021 = state_32939;
                  state_32939 = G__33021;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_32939) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_32939);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___32991, mults, ensure_mult, p);
      }();
      var state__10629__auto__ = function() {
        var statearr_32986 = f__10628__auto__.call(null);
        statearr_32986[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___32991;
        return statearr_32986;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___32991, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args33022 = [];
  var len__5189__auto___33025 = arguments.length;
  var i__5190__auto___33026 = 0;
  while (true) {
    if (i__5190__auto___33026 < len__5189__auto___33025) {
      args33022.push(arguments[i__5190__auto___33026]);
      var G__33027 = i__5190__auto___33026 + 1;
      i__5190__auto___33026 = G__33027;
      continue;
    } else {
    }
    break;
  }
  var G__33024 = args33022.length;
  switch(G__33024) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33022.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args33029 = [];
  var len__5189__auto___33032 = arguments.length;
  var i__5190__auto___33033 = 0;
  while (true) {
    if (i__5190__auto___33033 < len__5189__auto___33032) {
      args33029.push(arguments[i__5190__auto___33033]);
      var G__33034 = i__5190__auto___33033 + 1;
      i__5190__auto___33033 = G__33034;
      continue;
    } else {
    }
    break;
  }
  var G__33031 = args33029.length;
  switch(G__33031) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33029.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args33036 = [];
  var len__5189__auto___33107 = arguments.length;
  var i__5190__auto___33108 = 0;
  while (true) {
    if (i__5190__auto___33108 < len__5189__auto___33107) {
      args33036.push(arguments[i__5190__auto___33108]);
      var G__33109 = i__5190__auto___33108 + 1;
      i__5190__auto___33108 = G__33109;
      continue;
    } else {
    }
    break;
  }
  var G__33038 = args33036.length;
  switch(G__33038) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33036.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__10627__auto___33111 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33111, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33111, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_33077) {
            var state_val_33078 = state_33077[1];
            if (state_val_33078 === 7) {
              var state_33077__$1 = state_33077;
              var statearr_33079_33112 = state_33077__$1;
              statearr_33079_33112[2] = null;
              statearr_33079_33112[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33078 === 1) {
                var state_33077__$1 = state_33077;
                var statearr_33080_33113 = state_33077__$1;
                statearr_33080_33113[2] = null;
                statearr_33080_33113[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33078 === 4) {
                  var inst_33041 = state_33077[7];
                  var inst_33043 = inst_33041 < cnt;
                  var state_33077__$1 = state_33077;
                  if (cljs.core.truth_(inst_33043)) {
                    var statearr_33081_33114 = state_33077__$1;
                    statearr_33081_33114[1] = 6;
                  } else {
                    var statearr_33082_33115 = state_33077__$1;
                    statearr_33082_33115[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33078 === 15) {
                    var inst_33073 = state_33077[2];
                    var state_33077__$1 = state_33077;
                    var statearr_33083_33116 = state_33077__$1;
                    statearr_33083_33116[2] = inst_33073;
                    statearr_33083_33116[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33078 === 13) {
                      var inst_33066 = cljs.core.async.close_BANG_.call(null, out);
                      var state_33077__$1 = state_33077;
                      var statearr_33084_33117 = state_33077__$1;
                      statearr_33084_33117[2] = inst_33066;
                      statearr_33084_33117[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_33078 === 6) {
                        var state_33077__$1 = state_33077;
                        var statearr_33085_33118 = state_33077__$1;
                        statearr_33085_33118[2] = null;
                        statearr_33085_33118[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33078 === 3) {
                          var inst_33075 = state_33077[2];
                          var state_33077__$1 = state_33077;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33077__$1, inst_33075);
                        } else {
                          if (state_val_33078 === 12) {
                            var inst_33063 = state_33077[8];
                            var inst_33063__$1 = state_33077[2];
                            var inst_33064 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_33063__$1);
                            var state_33077__$1 = function() {
                              var statearr_33086 = state_33077;
                              statearr_33086[8] = inst_33063__$1;
                              return statearr_33086;
                            }();
                            if (cljs.core.truth_(inst_33064)) {
                              var statearr_33087_33119 = state_33077__$1;
                              statearr_33087_33119[1] = 13;
                            } else {
                              var statearr_33088_33120 = state_33077__$1;
                              statearr_33088_33120[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_33078 === 2) {
                              var inst_33040 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_33041 = 0;
                              var state_33077__$1 = function() {
                                var statearr_33089 = state_33077;
                                statearr_33089[9] = inst_33040;
                                statearr_33089[7] = inst_33041;
                                return statearr_33089;
                              }();
                              var statearr_33090_33121 = state_33077__$1;
                              statearr_33090_33121[2] = null;
                              statearr_33090_33121[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_33078 === 11) {
                                var inst_33041 = state_33077[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_33077, 10, Object, null, 9);
                                var inst_33050 = chs__$1.call(null, inst_33041);
                                var inst_33051 = done.call(null, inst_33041);
                                var inst_33052 = cljs.core.async.take_BANG_.call(null, inst_33050, inst_33051);
                                var state_33077__$1 = state_33077;
                                var statearr_33091_33122 = state_33077__$1;
                                statearr_33091_33122[2] = inst_33052;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33077__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33078 === 9) {
                                  var inst_33041 = state_33077[7];
                                  var inst_33054 = state_33077[2];
                                  var inst_33055 = inst_33041 + 1;
                                  var inst_33041__$1 = inst_33055;
                                  var state_33077__$1 = function() {
                                    var statearr_33092 = state_33077;
                                    statearr_33092[10] = inst_33054;
                                    statearr_33092[7] = inst_33041__$1;
                                    return statearr_33092;
                                  }();
                                  var statearr_33093_33123 = state_33077__$1;
                                  statearr_33093_33123[2] = null;
                                  statearr_33093_33123[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_33078 === 5) {
                                    var inst_33061 = state_33077[2];
                                    var state_33077__$1 = function() {
                                      var statearr_33094 = state_33077;
                                      statearr_33094[11] = inst_33061;
                                      return statearr_33094;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33077__$1, 12, dchan);
                                  } else {
                                    if (state_val_33078 === 14) {
                                      var inst_33063 = state_33077[8];
                                      var inst_33068 = cljs.core.apply.call(null, f, inst_33063);
                                      var state_33077__$1 = state_33077;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33077__$1, 16, out, inst_33068);
                                    } else {
                                      if (state_val_33078 === 16) {
                                        var inst_33070 = state_33077[2];
                                        var state_33077__$1 = function() {
                                          var statearr_33095 = state_33077;
                                          statearr_33095[12] = inst_33070;
                                          return statearr_33095;
                                        }();
                                        var statearr_33096_33124 = state_33077__$1;
                                        statearr_33096_33124[2] = null;
                                        statearr_33096_33124[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_33078 === 10) {
                                          var inst_33045 = state_33077[2];
                                          var inst_33046 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_33077__$1 = function() {
                                            var statearr_33097 = state_33077;
                                            statearr_33097[13] = inst_33045;
                                            return statearr_33097;
                                          }();
                                          var statearr_33098_33125 = state_33077__$1;
                                          statearr_33098_33125[2] = inst_33046;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33077__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_33078 === 8) {
                                            var inst_33059 = state_33077[2];
                                            var state_33077__$1 = state_33077;
                                            var statearr_33099_33126 = state_33077__$1;
                                            statearr_33099_33126[2] = inst_33059;
                                            statearr_33099_33126[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33111, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__10515__auto__, c__10627__auto___33111, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33103 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33103[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33103[1] = 1;
              return statearr_33103;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33077) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33077);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33104) {
                    if (e33104 instanceof Object) {
                      var ex__10519__auto__ = e33104;
                      var statearr_33105_33127 = state_33077;
                      statearr_33105_33127[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33077);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33104;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33128 = state_33077;
                  state_33077 = G__33128;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33077) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33077);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33111, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__10629__auto__ = function() {
        var statearr_33106 = f__10628__auto__.call(null);
        statearr_33106[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33111;
        return statearr_33106;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33111, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args33130 = [];
  var len__5189__auto___33186 = arguments.length;
  var i__5190__auto___33187 = 0;
  while (true) {
    if (i__5190__auto___33187 < len__5189__auto___33186) {
      args33130.push(arguments[i__5190__auto___33187]);
      var G__33188 = i__5190__auto___33187 + 1;
      i__5190__auto___33187 = G__33188;
      continue;
    } else {
    }
    break;
  }
  var G__33132 = args33130.length;
  switch(G__33132) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33130.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__10627__auto___33190 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33190, out) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33190, out) {
          return function(state_33162) {
            var state_val_33163 = state_33162[1];
            if (state_val_33163 === 7) {
              var inst_33141 = state_33162[7];
              var inst_33142 = state_33162[8];
              var inst_33141__$1 = state_33162[2];
              var inst_33142__$1 = cljs.core.nth.call(null, inst_33141__$1, 0, null);
              var inst_33143 = cljs.core.nth.call(null, inst_33141__$1, 1, null);
              var inst_33144 = inst_33142__$1 == null;
              var state_33162__$1 = function() {
                var statearr_33164 = state_33162;
                statearr_33164[7] = inst_33141__$1;
                statearr_33164[8] = inst_33142__$1;
                statearr_33164[9] = inst_33143;
                return statearr_33164;
              }();
              if (cljs.core.truth_(inst_33144)) {
                var statearr_33165_33191 = state_33162__$1;
                statearr_33165_33191[1] = 8;
              } else {
                var statearr_33166_33192 = state_33162__$1;
                statearr_33166_33192[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33163 === 1) {
                var inst_33133 = cljs.core.vec.call(null, chs);
                var inst_33134 = inst_33133;
                var state_33162__$1 = function() {
                  var statearr_33167 = state_33162;
                  statearr_33167[10] = inst_33134;
                  return statearr_33167;
                }();
                var statearr_33168_33193 = state_33162__$1;
                statearr_33168_33193[2] = null;
                statearr_33168_33193[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33163 === 4) {
                  var inst_33134 = state_33162[10];
                  var state_33162__$1 = state_33162;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_33162__$1, 7, inst_33134);
                } else {
                  if (state_val_33163 === 6) {
                    var inst_33158 = state_33162[2];
                    var state_33162__$1 = state_33162;
                    var statearr_33169_33194 = state_33162__$1;
                    statearr_33169_33194[2] = inst_33158;
                    statearr_33169_33194[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33163 === 3) {
                      var inst_33160 = state_33162[2];
                      var state_33162__$1 = state_33162;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33162__$1, inst_33160);
                    } else {
                      if (state_val_33163 === 2) {
                        var inst_33134 = state_33162[10];
                        var inst_33136 = cljs.core.count.call(null, inst_33134);
                        var inst_33137 = inst_33136 > 0;
                        var state_33162__$1 = state_33162;
                        if (cljs.core.truth_(inst_33137)) {
                          var statearr_33171_33195 = state_33162__$1;
                          statearr_33171_33195[1] = 4;
                        } else {
                          var statearr_33172_33196 = state_33162__$1;
                          statearr_33172_33196[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33163 === 11) {
                          var inst_33134 = state_33162[10];
                          var inst_33151 = state_33162[2];
                          var tmp33170 = inst_33134;
                          var inst_33134__$1 = tmp33170;
                          var state_33162__$1 = function() {
                            var statearr_33173 = state_33162;
                            statearr_33173[10] = inst_33134__$1;
                            statearr_33173[11] = inst_33151;
                            return statearr_33173;
                          }();
                          var statearr_33174_33197 = state_33162__$1;
                          statearr_33174_33197[2] = null;
                          statearr_33174_33197[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_33163 === 9) {
                            var inst_33142 = state_33162[8];
                            var state_33162__$1 = state_33162;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33162__$1, 11, out, inst_33142);
                          } else {
                            if (state_val_33163 === 5) {
                              var inst_33156 = cljs.core.async.close_BANG_.call(null, out);
                              var state_33162__$1 = state_33162;
                              var statearr_33175_33198 = state_33162__$1;
                              statearr_33175_33198[2] = inst_33156;
                              statearr_33175_33198[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_33163 === 10) {
                                var inst_33154 = state_33162[2];
                                var state_33162__$1 = state_33162;
                                var statearr_33176_33199 = state_33162__$1;
                                statearr_33176_33199[2] = inst_33154;
                                statearr_33176_33199[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33163 === 8) {
                                  var inst_33141 = state_33162[7];
                                  var inst_33134 = state_33162[10];
                                  var inst_33142 = state_33162[8];
                                  var inst_33143 = state_33162[9];
                                  var inst_33146 = function() {
                                    var cs = inst_33134;
                                    var vec__33139 = inst_33141;
                                    var v = inst_33142;
                                    var c = inst_33143;
                                    return function(cs, vec__33139, v, c, inst_33141, inst_33134, inst_33142, inst_33143, state_val_33163, c__10627__auto___33190, out) {
                                      return function(p1__33129_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__33129_SHARP_);
                                      };
                                    }(cs, vec__33139, v, c, inst_33141, inst_33134, inst_33142, inst_33143, state_val_33163, c__10627__auto___33190, out);
                                  }();
                                  var inst_33147 = cljs.core.filterv.call(null, inst_33146, inst_33134);
                                  var inst_33134__$1 = inst_33147;
                                  var state_33162__$1 = function() {
                                    var statearr_33177 = state_33162;
                                    statearr_33177[10] = inst_33134__$1;
                                    return statearr_33177;
                                  }();
                                  var statearr_33178_33200 = state_33162__$1;
                                  statearr_33178_33200[2] = null;
                                  statearr_33178_33200[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33190, out);
        return function(switch__10515__auto__, c__10627__auto___33190, out) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33182 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33182[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33182[1] = 1;
              return statearr_33182;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33162) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33162);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33183) {
                    if (e33183 instanceof Object) {
                      var ex__10519__auto__ = e33183;
                      var statearr_33184_33201 = state_33162;
                      statearr_33184_33201[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33162);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33183;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33202 = state_33162;
                  state_33162 = G__33202;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33162) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33162);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33190, out);
      }();
      var state__10629__auto__ = function() {
        var statearr_33185 = f__10628__auto__.call(null);
        statearr_33185[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33190;
        return statearr_33185;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33190, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args33203 = [];
  var len__5189__auto___33252 = arguments.length;
  var i__5190__auto___33253 = 0;
  while (true) {
    if (i__5190__auto___33253 < len__5189__auto___33252) {
      args33203.push(arguments[i__5190__auto___33253]);
      var G__33254 = i__5190__auto___33253 + 1;
      i__5190__auto___33253 = G__33254;
      continue;
    } else {
    }
    break;
  }
  var G__33205 = args33203.length;
  switch(G__33205) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33203.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__10627__auto___33256 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33256, out) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33256, out) {
          return function(state_33229) {
            var state_val_33230 = state_33229[1];
            if (state_val_33230 === 7) {
              var inst_33211 = state_33229[7];
              var inst_33211__$1 = state_33229[2];
              var inst_33212 = inst_33211__$1 == null;
              var inst_33213 = cljs.core.not.call(null, inst_33212);
              var state_33229__$1 = function() {
                var statearr_33231 = state_33229;
                statearr_33231[7] = inst_33211__$1;
                return statearr_33231;
              }();
              if (inst_33213) {
                var statearr_33232_33257 = state_33229__$1;
                statearr_33232_33257[1] = 8;
              } else {
                var statearr_33233_33258 = state_33229__$1;
                statearr_33233_33258[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33230 === 1) {
                var inst_33206 = 0;
                var state_33229__$1 = function() {
                  var statearr_33234 = state_33229;
                  statearr_33234[8] = inst_33206;
                  return statearr_33234;
                }();
                var statearr_33235_33259 = state_33229__$1;
                statearr_33235_33259[2] = null;
                statearr_33235_33259[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33230 === 4) {
                  var state_33229__$1 = state_33229;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33229__$1, 7, ch);
                } else {
                  if (state_val_33230 === 6) {
                    var inst_33224 = state_33229[2];
                    var state_33229__$1 = state_33229;
                    var statearr_33236_33260 = state_33229__$1;
                    statearr_33236_33260[2] = inst_33224;
                    statearr_33236_33260[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33230 === 3) {
                      var inst_33226 = state_33229[2];
                      var inst_33227 = cljs.core.async.close_BANG_.call(null, out);
                      var state_33229__$1 = function() {
                        var statearr_33237 = state_33229;
                        statearr_33237[9] = inst_33226;
                        return statearr_33237;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33229__$1, inst_33227);
                    } else {
                      if (state_val_33230 === 2) {
                        var inst_33206 = state_33229[8];
                        var inst_33208 = inst_33206 < n;
                        var state_33229__$1 = state_33229;
                        if (cljs.core.truth_(inst_33208)) {
                          var statearr_33238_33261 = state_33229__$1;
                          statearr_33238_33261[1] = 4;
                        } else {
                          var statearr_33239_33262 = state_33229__$1;
                          statearr_33239_33262[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33230 === 11) {
                          var inst_33206 = state_33229[8];
                          var inst_33216 = state_33229[2];
                          var inst_33217 = inst_33206 + 1;
                          var inst_33206__$1 = inst_33217;
                          var state_33229__$1 = function() {
                            var statearr_33240 = state_33229;
                            statearr_33240[10] = inst_33216;
                            statearr_33240[8] = inst_33206__$1;
                            return statearr_33240;
                          }();
                          var statearr_33241_33263 = state_33229__$1;
                          statearr_33241_33263[2] = null;
                          statearr_33241_33263[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_33230 === 9) {
                            var state_33229__$1 = state_33229;
                            var statearr_33242_33264 = state_33229__$1;
                            statearr_33242_33264[2] = null;
                            statearr_33242_33264[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_33230 === 5) {
                              var state_33229__$1 = state_33229;
                              var statearr_33243_33265 = state_33229__$1;
                              statearr_33243_33265[2] = null;
                              statearr_33243_33265[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_33230 === 10) {
                                var inst_33221 = state_33229[2];
                                var state_33229__$1 = state_33229;
                                var statearr_33244_33266 = state_33229__$1;
                                statearr_33244_33266[2] = inst_33221;
                                statearr_33244_33266[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33230 === 8) {
                                  var inst_33211 = state_33229[7];
                                  var state_33229__$1 = state_33229;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33229__$1, 11, out, inst_33211);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33256, out);
        return function(switch__10515__auto__, c__10627__auto___33256, out) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33248 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_33248[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33248[1] = 1;
              return statearr_33248;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33229) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33229);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33249) {
                    if (e33249 instanceof Object) {
                      var ex__10519__auto__ = e33249;
                      var statearr_33250_33267 = state_33229;
                      statearr_33250_33267[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33229);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33249;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33268 = state_33229;
                  state_33229 = G__33268;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33229) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33229);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33256, out);
      }();
      var state__10629__auto__ = function() {
        var statearr_33251 = f__10628__auto__.call(null);
        statearr_33251[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33256;
        return statearr_33251;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33256, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async33276 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async33276 = function(map_LT_, f, ch, meta33277) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta33277 = meta33277;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33278, meta33277__$1) {
      var self__ = this;
      var _33278__$1 = this;
      return new cljs.core.async.t_cljs$core$async33276(self__.map_LT_, self__.f, self__.ch, meta33277__$1);
    };
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33278) {
      var self__ = this;
      var _33278__$1 = this;
      return self__.meta33277;
    };
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async33279 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async33279 = function(map_LT_, f, ch, meta33277, _, fn1, meta33280) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta33277 = meta33277;
            this._ = _;
            this.fn1 = fn1;
            this.meta33280 = meta33280;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async33279.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_33281, meta33280__$1) {
              var self__ = this;
              var _33281__$1 = this;
              return new cljs.core.async.t_cljs$core$async33279(self__.map_LT_, self__.f, self__.ch, self__.meta33277, self__._, self__.fn1, meta33280__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async33279.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_33281) {
              var self__ = this;
              var _33281__$1 = this;
              return self__.meta33280;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async33279.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t_cljs$core$async33279.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async33279.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__33269_SHARP_) {
                  return f1.call(null, p1__33269_SHARP_ == null ? null : self__.f.call(null, p1__33269_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async33279.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta33277", "meta33277", 752848739, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async33276", "cljs.core.async/t_cljs$core$async33276", 566326970, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta33280", "meta33280", 612049456, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async33279.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async33279.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async33279";
          cljs.core.async.t_cljs$core$async33279.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
              return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async33279");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async33279 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async33279(map_LT___$1, f__$1, ch__$1, meta33277__$1, ___$2, fn1__$1, meta33280) {
              return new cljs.core.async.t_cljs$core$async33279(map_LT___$1, f__$1, ch__$1, meta33277__$1, ___$2, fn1__$1, meta33280);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async33279(self__.map_LT_, self__.f, self__.ch, self__.meta33277, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__4119__auto__ = ret;
        if (cljs.core.truth_(and__4119__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__4119__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async33276.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async33276.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta33277", "meta33277", 752848739, null)], null);
    };
    cljs.core.async.t_cljs$core$async33276.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async33276.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async33276";
    cljs.core.async.t_cljs$core$async33276.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async33276");
    };
    cljs.core.async.__GT_t_cljs$core$async33276 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async33276(map_LT___$1, f__$1, ch__$1, meta33277) {
      return new cljs.core.async.t_cljs$core$async33276(map_LT___$1, f__$1, ch__$1, meta33277);
    };
  }
  return new cljs.core.async.t_cljs$core$async33276(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async33285 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async33285 = function(map_GT_, f, ch, meta33286) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta33286 = meta33286;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33287, meta33286__$1) {
      var self__ = this;
      var _33287__$1 = this;
      return new cljs.core.async.t_cljs$core$async33285(self__.map_GT_, self__.f, self__.ch, meta33286__$1);
    };
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33287) {
      var self__ = this;
      var _33287__$1 = this;
      return self__.meta33286;
    };
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async33285.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async33285.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta33286", "meta33286", 1983693379, null)], null);
    };
    cljs.core.async.t_cljs$core$async33285.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async33285.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async33285";
    cljs.core.async.t_cljs$core$async33285.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async33285");
    };
    cljs.core.async.__GT_t_cljs$core$async33285 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async33285(map_GT___$1, f__$1, ch__$1, meta33286) {
      return new cljs.core.async.t_cljs$core$async33285(map_GT___$1, f__$1, ch__$1, meta33286);
    };
  }
  return new cljs.core.async.t_cljs$core$async33285(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async33291 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async33291 = function(filter_GT_, p, ch, meta33292) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta33292 = meta33292;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_33293, meta33292__$1) {
      var self__ = this;
      var _33293__$1 = this;
      return new cljs.core.async.t_cljs$core$async33291(self__.filter_GT_, self__.p, self__.ch, meta33292__$1);
    };
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$IMeta$_meta$arity$1 = function(_33293) {
      var self__ = this;
      var _33293__$1 = this;
      return self__.meta33292;
    };
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async33291.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async33291.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta33292", "meta33292", 92957928, null)], null);
    };
    cljs.core.async.t_cljs$core$async33291.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async33291.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async33291";
    cljs.core.async.t_cljs$core$async33291.cljs$lang$ctorPrWriter = function(this__4729__auto__, writer__4730__auto__, opt__4731__auto__) {
      return cljs.core._write.call(null, writer__4730__auto__, "cljs.core.async/t_cljs$core$async33291");
    };
    cljs.core.async.__GT_t_cljs$core$async33291 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async33291(filter_GT___$1, p__$1, ch__$1, meta33292) {
      return new cljs.core.async.t_cljs$core$async33291(filter_GT___$1, p__$1, ch__$1, meta33292);
    };
  }
  return new cljs.core.async.t_cljs$core$async33291(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args33294 = [];
  var len__5189__auto___33338 = arguments.length;
  var i__5190__auto___33339 = 0;
  while (true) {
    if (i__5190__auto___33339 < len__5189__auto___33338) {
      args33294.push(arguments[i__5190__auto___33339]);
      var G__33340 = i__5190__auto___33339 + 1;
      i__5190__auto___33339 = G__33340;
      continue;
    } else {
    }
    break;
  }
  var G__33296 = args33294.length;
  switch(G__33296) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33294.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__10627__auto___33342 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33342, out) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33342, out) {
          return function(state_33317) {
            var state_val_33318 = state_33317[1];
            if (state_val_33318 === 7) {
              var inst_33313 = state_33317[2];
              var state_33317__$1 = state_33317;
              var statearr_33319_33343 = state_33317__$1;
              statearr_33319_33343[2] = inst_33313;
              statearr_33319_33343[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33318 === 1) {
                var state_33317__$1 = state_33317;
                var statearr_33320_33344 = state_33317__$1;
                statearr_33320_33344[2] = null;
                statearr_33320_33344[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33318 === 4) {
                  var inst_33299 = state_33317[7];
                  var inst_33299__$1 = state_33317[2];
                  var inst_33300 = inst_33299__$1 == null;
                  var state_33317__$1 = function() {
                    var statearr_33321 = state_33317;
                    statearr_33321[7] = inst_33299__$1;
                    return statearr_33321;
                  }();
                  if (cljs.core.truth_(inst_33300)) {
                    var statearr_33322_33345 = state_33317__$1;
                    statearr_33322_33345[1] = 5;
                  } else {
                    var statearr_33323_33346 = state_33317__$1;
                    statearr_33323_33346[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33318 === 6) {
                    var inst_33299 = state_33317[7];
                    var inst_33304 = p.call(null, inst_33299);
                    var state_33317__$1 = state_33317;
                    if (cljs.core.truth_(inst_33304)) {
                      var statearr_33324_33347 = state_33317__$1;
                      statearr_33324_33347[1] = 8;
                    } else {
                      var statearr_33325_33348 = state_33317__$1;
                      statearr_33325_33348[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33318 === 3) {
                      var inst_33315 = state_33317[2];
                      var state_33317__$1 = state_33317;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33317__$1, inst_33315);
                    } else {
                      if (state_val_33318 === 2) {
                        var state_33317__$1 = state_33317;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33317__$1, 4, ch);
                      } else {
                        if (state_val_33318 === 11) {
                          var inst_33307 = state_33317[2];
                          var state_33317__$1 = state_33317;
                          var statearr_33326_33349 = state_33317__$1;
                          statearr_33326_33349[2] = inst_33307;
                          statearr_33326_33349[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_33318 === 9) {
                            var state_33317__$1 = state_33317;
                            var statearr_33327_33350 = state_33317__$1;
                            statearr_33327_33350[2] = null;
                            statearr_33327_33350[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_33318 === 5) {
                              var inst_33302 = cljs.core.async.close_BANG_.call(null, out);
                              var state_33317__$1 = state_33317;
                              var statearr_33328_33351 = state_33317__$1;
                              statearr_33328_33351[2] = inst_33302;
                              statearr_33328_33351[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_33318 === 10) {
                                var inst_33310 = state_33317[2];
                                var state_33317__$1 = function() {
                                  var statearr_33329 = state_33317;
                                  statearr_33329[8] = inst_33310;
                                  return statearr_33329;
                                }();
                                var statearr_33330_33352 = state_33317__$1;
                                statearr_33330_33352[2] = null;
                                statearr_33330_33352[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33318 === 8) {
                                  var inst_33299 = state_33317[7];
                                  var state_33317__$1 = state_33317;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33317__$1, 11, out, inst_33299);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33342, out);
        return function(switch__10515__auto__, c__10627__auto___33342, out) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33334 = [null, null, null, null, null, null, null, null, null];
              statearr_33334[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33334[1] = 1;
              return statearr_33334;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33317) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33317);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33335) {
                    if (e33335 instanceof Object) {
                      var ex__10519__auto__ = e33335;
                      var statearr_33336_33353 = state_33317;
                      statearr_33336_33353[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33317);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33335;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33354 = state_33317;
                  state_33317 = G__33354;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33317) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33317);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33342, out);
      }();
      var state__10629__auto__ = function() {
        var statearr_33337 = f__10628__auto__.call(null);
        statearr_33337[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33342;
        return statearr_33337;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33342, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args33355 = [];
  var len__5189__auto___33358 = arguments.length;
  var i__5190__auto___33359 = 0;
  while (true) {
    if (i__5190__auto___33359 < len__5189__auto___33358) {
      args33355.push(arguments[i__5190__auto___33359]);
      var G__33360 = i__5190__auto___33359 + 1;
      i__5190__auto___33359 = G__33360;
      continue;
    } else {
    }
    break;
  }
  var G__33357 = args33355.length;
  switch(G__33357) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33355.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__10627__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto__) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto__) {
          return function(state_33527) {
            var state_val_33528 = state_33527[1];
            if (state_val_33528 === 7) {
              var inst_33523 = state_33527[2];
              var state_33527__$1 = state_33527;
              var statearr_33529_33570 = state_33527__$1;
              statearr_33529_33570[2] = inst_33523;
              statearr_33529_33570[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33528 === 20) {
                var inst_33493 = state_33527[7];
                var inst_33504 = state_33527[2];
                var inst_33505 = cljs.core.next.call(null, inst_33493);
                var inst_33479 = inst_33505;
                var inst_33480 = null;
                var inst_33481 = 0;
                var inst_33482 = 0;
                var state_33527__$1 = function() {
                  var statearr_33530 = state_33527;
                  statearr_33530[8] = inst_33480;
                  statearr_33530[9] = inst_33479;
                  statearr_33530[10] = inst_33504;
                  statearr_33530[11] = inst_33481;
                  statearr_33530[12] = inst_33482;
                  return statearr_33530;
                }();
                var statearr_33531_33571 = state_33527__$1;
                statearr_33531_33571[2] = null;
                statearr_33531_33571[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33528 === 1) {
                  var state_33527__$1 = state_33527;
                  var statearr_33532_33572 = state_33527__$1;
                  statearr_33532_33572[2] = null;
                  statearr_33532_33572[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33528 === 4) {
                    var inst_33468 = state_33527[13];
                    var inst_33468__$1 = state_33527[2];
                    var inst_33469 = inst_33468__$1 == null;
                    var state_33527__$1 = function() {
                      var statearr_33533 = state_33527;
                      statearr_33533[13] = inst_33468__$1;
                      return statearr_33533;
                    }();
                    if (cljs.core.truth_(inst_33469)) {
                      var statearr_33534_33573 = state_33527__$1;
                      statearr_33534_33573[1] = 5;
                    } else {
                      var statearr_33535_33574 = state_33527__$1;
                      statearr_33535_33574[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33528 === 15) {
                      var state_33527__$1 = state_33527;
                      var statearr_33539_33575 = state_33527__$1;
                      statearr_33539_33575[2] = null;
                      statearr_33539_33575[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_33528 === 21) {
                        var state_33527__$1 = state_33527;
                        var statearr_33540_33576 = state_33527__$1;
                        statearr_33540_33576[2] = null;
                        statearr_33540_33576[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33528 === 13) {
                          var inst_33480 = state_33527[8];
                          var inst_33479 = state_33527[9];
                          var inst_33481 = state_33527[11];
                          var inst_33482 = state_33527[12];
                          var inst_33489 = state_33527[2];
                          var inst_33490 = inst_33482 + 1;
                          var tmp33536 = inst_33480;
                          var tmp33537 = inst_33479;
                          var tmp33538 = inst_33481;
                          var inst_33479__$1 = tmp33537;
                          var inst_33480__$1 = tmp33536;
                          var inst_33481__$1 = tmp33538;
                          var inst_33482__$1 = inst_33490;
                          var state_33527__$1 = function() {
                            var statearr_33541 = state_33527;
                            statearr_33541[8] = inst_33480__$1;
                            statearr_33541[9] = inst_33479__$1;
                            statearr_33541[14] = inst_33489;
                            statearr_33541[11] = inst_33481__$1;
                            statearr_33541[12] = inst_33482__$1;
                            return statearr_33541;
                          }();
                          var statearr_33542_33577 = state_33527__$1;
                          statearr_33542_33577[2] = null;
                          statearr_33542_33577[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_33528 === 22) {
                            var state_33527__$1 = state_33527;
                            var statearr_33543_33578 = state_33527__$1;
                            statearr_33543_33578[2] = null;
                            statearr_33543_33578[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_33528 === 6) {
                              var inst_33468 = state_33527[13];
                              var inst_33477 = f.call(null, inst_33468);
                              var inst_33478 = cljs.core.seq.call(null, inst_33477);
                              var inst_33479 = inst_33478;
                              var inst_33480 = null;
                              var inst_33481 = 0;
                              var inst_33482 = 0;
                              var state_33527__$1 = function() {
                                var statearr_33544 = state_33527;
                                statearr_33544[8] = inst_33480;
                                statearr_33544[9] = inst_33479;
                                statearr_33544[11] = inst_33481;
                                statearr_33544[12] = inst_33482;
                                return statearr_33544;
                              }();
                              var statearr_33545_33579 = state_33527__$1;
                              statearr_33545_33579[2] = null;
                              statearr_33545_33579[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_33528 === 17) {
                                var inst_33493 = state_33527[7];
                                var inst_33497 = cljs.core.chunk_first.call(null, inst_33493);
                                var inst_33498 = cljs.core.chunk_rest.call(null, inst_33493);
                                var inst_33499 = cljs.core.count.call(null, inst_33497);
                                var inst_33479 = inst_33498;
                                var inst_33480 = inst_33497;
                                var inst_33481 = inst_33499;
                                var inst_33482 = 0;
                                var state_33527__$1 = function() {
                                  var statearr_33546 = state_33527;
                                  statearr_33546[8] = inst_33480;
                                  statearr_33546[9] = inst_33479;
                                  statearr_33546[11] = inst_33481;
                                  statearr_33546[12] = inst_33482;
                                  return statearr_33546;
                                }();
                                var statearr_33547_33580 = state_33527__$1;
                                statearr_33547_33580[2] = null;
                                statearr_33547_33580[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33528 === 3) {
                                  var inst_33525 = state_33527[2];
                                  var state_33527__$1 = state_33527;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33527__$1, inst_33525);
                                } else {
                                  if (state_val_33528 === 12) {
                                    var inst_33513 = state_33527[2];
                                    var state_33527__$1 = state_33527;
                                    var statearr_33548_33581 = state_33527__$1;
                                    statearr_33548_33581[2] = inst_33513;
                                    statearr_33548_33581[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_33528 === 2) {
                                      var state_33527__$1 = state_33527;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33527__$1, 4, in$);
                                    } else {
                                      if (state_val_33528 === 23) {
                                        var inst_33521 = state_33527[2];
                                        var state_33527__$1 = state_33527;
                                        var statearr_33549_33582 = state_33527__$1;
                                        statearr_33549_33582[2] = inst_33521;
                                        statearr_33549_33582[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_33528 === 19) {
                                          var inst_33508 = state_33527[2];
                                          var state_33527__$1 = state_33527;
                                          var statearr_33550_33583 = state_33527__$1;
                                          statearr_33550_33583[2] = inst_33508;
                                          statearr_33550_33583[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_33528 === 11) {
                                            var inst_33479 = state_33527[9];
                                            var inst_33493 = state_33527[7];
                                            var inst_33493__$1 = cljs.core.seq.call(null, inst_33479);
                                            var state_33527__$1 = function() {
                                              var statearr_33551 = state_33527;
                                              statearr_33551[7] = inst_33493__$1;
                                              return statearr_33551;
                                            }();
                                            if (inst_33493__$1) {
                                              var statearr_33552_33584 = state_33527__$1;
                                              statearr_33552_33584[1] = 14;
                                            } else {
                                              var statearr_33553_33585 = state_33527__$1;
                                              statearr_33553_33585[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_33528 === 9) {
                                              var inst_33515 = state_33527[2];
                                              var inst_33516 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_33527__$1 = function() {
                                                var statearr_33554 = state_33527;
                                                statearr_33554[15] = inst_33515;
                                                return statearr_33554;
                                              }();
                                              if (cljs.core.truth_(inst_33516)) {
                                                var statearr_33555_33586 = state_33527__$1;
                                                statearr_33555_33586[1] = 21;
                                              } else {
                                                var statearr_33556_33587 = state_33527__$1;
                                                statearr_33556_33587[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_33528 === 5) {
                                                var inst_33471 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_33527__$1 = state_33527;
                                                var statearr_33557_33588 = state_33527__$1;
                                                statearr_33557_33588[2] = inst_33471;
                                                statearr_33557_33588[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_33528 === 14) {
                                                  var inst_33493 = state_33527[7];
                                                  var inst_33495 = cljs.core.chunked_seq_QMARK_.call(null, inst_33493);
                                                  var state_33527__$1 = state_33527;
                                                  if (inst_33495) {
                                                    var statearr_33558_33589 = state_33527__$1;
                                                    statearr_33558_33589[1] = 17;
                                                  } else {
                                                    var statearr_33559_33590 = state_33527__$1;
                                                    statearr_33559_33590[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_33528 === 16) {
                                                    var inst_33511 = state_33527[2];
                                                    var state_33527__$1 = state_33527;
                                                    var statearr_33560_33591 = state_33527__$1;
                                                    statearr_33560_33591[2] = inst_33511;
                                                    statearr_33560_33591[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_33528 === 10) {
                                                      var inst_33480 = state_33527[8];
                                                      var inst_33482 = state_33527[12];
                                                      var inst_33487 = cljs.core._nth.call(null, inst_33480, inst_33482);
                                                      var state_33527__$1 = state_33527;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33527__$1, 13, out, inst_33487);
                                                    } else {
                                                      if (state_val_33528 === 18) {
                                                        var inst_33493 = state_33527[7];
                                                        var inst_33502 = cljs.core.first.call(null, inst_33493);
                                                        var state_33527__$1 = state_33527;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33527__$1, 20, out, inst_33502);
                                                      } else {
                                                        if (state_val_33528 === 8) {
                                                          var inst_33481 = state_33527[11];
                                                          var inst_33482 = state_33527[12];
                                                          var inst_33484 = inst_33482 < inst_33481;
                                                          var inst_33485 = inst_33484;
                                                          var state_33527__$1 = state_33527;
                                                          if (cljs.core.truth_(inst_33485)) {
                                                            var statearr_33561_33592 = state_33527__$1;
                                                            statearr_33561_33592[1] = 10;
                                                          } else {
                                                            var statearr_33562_33593 = state_33527__$1;
                                                            statearr_33562_33593[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto__);
        return function(switch__10515__auto__, c__10627__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__10516__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__10516__auto____0 = function() {
              var statearr_33566 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33566[0] = cljs$core$async$mapcat_STAR__$_state_machine__10516__auto__;
              statearr_33566[1] = 1;
              return statearr_33566;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__10516__auto____1 = function(state_33527) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33527);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33567) {
                    if (e33567 instanceof Object) {
                      var ex__10519__auto__ = e33567;
                      var statearr_33568_33594 = state_33527;
                      statearr_33568_33594[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33527);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33567;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33595 = state_33527;
                  state_33527 = G__33595;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__10516__auto__ = function(state_33527) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__10516__auto____1.call(this, state_33527);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__10516__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__10516__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto__);
      }();
      var state__10629__auto__ = function() {
        var statearr_33569 = f__10628__auto__.call(null);
        statearr_33569[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto__;
        return statearr_33569;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto__));
  return c__10627__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args33596 = [];
  var len__5189__auto___33599 = arguments.length;
  var i__5190__auto___33600 = 0;
  while (true) {
    if (i__5190__auto___33600 < len__5189__auto___33599) {
      args33596.push(arguments[i__5190__auto___33600]);
      var G__33601 = i__5190__auto___33600 + 1;
      i__5190__auto___33600 = G__33601;
      continue;
    } else {
    }
    break;
  }
  var G__33598 = args33596.length;
  switch(G__33598) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33596.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args33603 = [];
  var len__5189__auto___33606 = arguments.length;
  var i__5190__auto___33607 = 0;
  while (true) {
    if (i__5190__auto___33607 < len__5189__auto___33606) {
      args33603.push(arguments[i__5190__auto___33607]);
      var G__33608 = i__5190__auto___33607 + 1;
      i__5190__auto___33607 = G__33608;
      continue;
    } else {
    }
    break;
  }
  var G__33605 = args33603.length;
  switch(G__33605) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33603.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args33610 = [];
  var len__5189__auto___33661 = arguments.length;
  var i__5190__auto___33662 = 0;
  while (true) {
    if (i__5190__auto___33662 < len__5189__auto___33661) {
      args33610.push(arguments[i__5190__auto___33662]);
      var G__33663 = i__5190__auto___33662 + 1;
      i__5190__auto___33662 = G__33663;
      continue;
    } else {
    }
    break;
  }
  var G__33612 = args33610.length;
  switch(G__33612) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33610.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__10627__auto___33665 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33665, out) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33665, out) {
          return function(state_33636) {
            var state_val_33637 = state_33636[1];
            if (state_val_33637 === 7) {
              var inst_33631 = state_33636[2];
              var state_33636__$1 = state_33636;
              var statearr_33638_33666 = state_33636__$1;
              statearr_33638_33666[2] = inst_33631;
              statearr_33638_33666[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33637 === 1) {
                var inst_33613 = null;
                var state_33636__$1 = function() {
                  var statearr_33639 = state_33636;
                  statearr_33639[7] = inst_33613;
                  return statearr_33639;
                }();
                var statearr_33640_33667 = state_33636__$1;
                statearr_33640_33667[2] = null;
                statearr_33640_33667[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33637 === 4) {
                  var inst_33616 = state_33636[8];
                  var inst_33616__$1 = state_33636[2];
                  var inst_33617 = inst_33616__$1 == null;
                  var inst_33618 = cljs.core.not.call(null, inst_33617);
                  var state_33636__$1 = function() {
                    var statearr_33641 = state_33636;
                    statearr_33641[8] = inst_33616__$1;
                    return statearr_33641;
                  }();
                  if (inst_33618) {
                    var statearr_33642_33668 = state_33636__$1;
                    statearr_33642_33668[1] = 5;
                  } else {
                    var statearr_33643_33669 = state_33636__$1;
                    statearr_33643_33669[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33637 === 6) {
                    var state_33636__$1 = state_33636;
                    var statearr_33644_33670 = state_33636__$1;
                    statearr_33644_33670[2] = null;
                    statearr_33644_33670[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33637 === 3) {
                      var inst_33633 = state_33636[2];
                      var inst_33634 = cljs.core.async.close_BANG_.call(null, out);
                      var state_33636__$1 = function() {
                        var statearr_33645 = state_33636;
                        statearr_33645[9] = inst_33633;
                        return statearr_33645;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33636__$1, inst_33634);
                    } else {
                      if (state_val_33637 === 2) {
                        var state_33636__$1 = state_33636;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33636__$1, 4, ch);
                      } else {
                        if (state_val_33637 === 11) {
                          var inst_33616 = state_33636[8];
                          var inst_33625 = state_33636[2];
                          var inst_33613 = inst_33616;
                          var state_33636__$1 = function() {
                            var statearr_33646 = state_33636;
                            statearr_33646[10] = inst_33625;
                            statearr_33646[7] = inst_33613;
                            return statearr_33646;
                          }();
                          var statearr_33647_33671 = state_33636__$1;
                          statearr_33647_33671[2] = null;
                          statearr_33647_33671[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_33637 === 9) {
                            var inst_33616 = state_33636[8];
                            var state_33636__$1 = state_33636;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33636__$1, 11, out, inst_33616);
                          } else {
                            if (state_val_33637 === 5) {
                              var inst_33616 = state_33636[8];
                              var inst_33613 = state_33636[7];
                              var inst_33620 = cljs.core._EQ_.call(null, inst_33616, inst_33613);
                              var state_33636__$1 = state_33636;
                              if (inst_33620) {
                                var statearr_33649_33672 = state_33636__$1;
                                statearr_33649_33672[1] = 8;
                              } else {
                                var statearr_33650_33673 = state_33636__$1;
                                statearr_33650_33673[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_33637 === 10) {
                                var inst_33628 = state_33636[2];
                                var state_33636__$1 = state_33636;
                                var statearr_33651_33674 = state_33636__$1;
                                statearr_33651_33674[2] = inst_33628;
                                statearr_33651_33674[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33637 === 8) {
                                  var inst_33613 = state_33636[7];
                                  var tmp33648 = inst_33613;
                                  var inst_33613__$1 = tmp33648;
                                  var state_33636__$1 = function() {
                                    var statearr_33652 = state_33636;
                                    statearr_33652[7] = inst_33613__$1;
                                    return statearr_33652;
                                  }();
                                  var statearr_33653_33675 = state_33636__$1;
                                  statearr_33653_33675[2] = null;
                                  statearr_33653_33675[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33665, out);
        return function(switch__10515__auto__, c__10627__auto___33665, out) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33657 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_33657[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33657[1] = 1;
              return statearr_33657;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33636) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33636);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33658) {
                    if (e33658 instanceof Object) {
                      var ex__10519__auto__ = e33658;
                      var statearr_33659_33676 = state_33636;
                      statearr_33659_33676[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33636);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33658;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33677 = state_33636;
                  state_33636 = G__33677;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33636) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33636);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33665, out);
      }();
      var state__10629__auto__ = function() {
        var statearr_33660 = f__10628__auto__.call(null);
        statearr_33660[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33665;
        return statearr_33660;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33665, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args33678 = [];
  var len__5189__auto___33748 = arguments.length;
  var i__5190__auto___33749 = 0;
  while (true) {
    if (i__5190__auto___33749 < len__5189__auto___33748) {
      args33678.push(arguments[i__5190__auto___33749]);
      var G__33750 = i__5190__auto___33749 + 1;
      i__5190__auto___33749 = G__33750;
      continue;
    } else {
    }
    break;
  }
  var G__33680 = args33678.length;
  switch(G__33680) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33678.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__10627__auto___33752 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33752, out) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33752, out) {
          return function(state_33718) {
            var state_val_33719 = state_33718[1];
            if (state_val_33719 === 7) {
              var inst_33714 = state_33718[2];
              var state_33718__$1 = state_33718;
              var statearr_33720_33753 = state_33718__$1;
              statearr_33720_33753[2] = inst_33714;
              statearr_33720_33753[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33719 === 1) {
                var inst_33681 = new Array(n);
                var inst_33682 = inst_33681;
                var inst_33683 = 0;
                var state_33718__$1 = function() {
                  var statearr_33721 = state_33718;
                  statearr_33721[7] = inst_33682;
                  statearr_33721[8] = inst_33683;
                  return statearr_33721;
                }();
                var statearr_33722_33754 = state_33718__$1;
                statearr_33722_33754[2] = null;
                statearr_33722_33754[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33719 === 4) {
                  var inst_33686 = state_33718[9];
                  var inst_33686__$1 = state_33718[2];
                  var inst_33687 = inst_33686__$1 == null;
                  var inst_33688 = cljs.core.not.call(null, inst_33687);
                  var state_33718__$1 = function() {
                    var statearr_33723 = state_33718;
                    statearr_33723[9] = inst_33686__$1;
                    return statearr_33723;
                  }();
                  if (inst_33688) {
                    var statearr_33724_33755 = state_33718__$1;
                    statearr_33724_33755[1] = 5;
                  } else {
                    var statearr_33725_33756 = state_33718__$1;
                    statearr_33725_33756[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33719 === 15) {
                    var inst_33708 = state_33718[2];
                    var state_33718__$1 = state_33718;
                    var statearr_33726_33757 = state_33718__$1;
                    statearr_33726_33757[2] = inst_33708;
                    statearr_33726_33757[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33719 === 13) {
                      var state_33718__$1 = state_33718;
                      var statearr_33727_33758 = state_33718__$1;
                      statearr_33727_33758[2] = null;
                      statearr_33727_33758[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_33719 === 6) {
                        var inst_33683 = state_33718[8];
                        var inst_33704 = inst_33683 > 0;
                        var state_33718__$1 = state_33718;
                        if (cljs.core.truth_(inst_33704)) {
                          var statearr_33728_33759 = state_33718__$1;
                          statearr_33728_33759[1] = 12;
                        } else {
                          var statearr_33729_33760 = state_33718__$1;
                          statearr_33729_33760[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33719 === 3) {
                          var inst_33716 = state_33718[2];
                          var state_33718__$1 = state_33718;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33718__$1, inst_33716);
                        } else {
                          if (state_val_33719 === 12) {
                            var inst_33682 = state_33718[7];
                            var inst_33706 = cljs.core.vec.call(null, inst_33682);
                            var state_33718__$1 = state_33718;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33718__$1, 15, out, inst_33706);
                          } else {
                            if (state_val_33719 === 2) {
                              var state_33718__$1 = state_33718;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33718__$1, 4, ch);
                            } else {
                              if (state_val_33719 === 11) {
                                var inst_33698 = state_33718[2];
                                var inst_33699 = new Array(n);
                                var inst_33682 = inst_33699;
                                var inst_33683 = 0;
                                var state_33718__$1 = function() {
                                  var statearr_33730 = state_33718;
                                  statearr_33730[7] = inst_33682;
                                  statearr_33730[10] = inst_33698;
                                  statearr_33730[8] = inst_33683;
                                  return statearr_33730;
                                }();
                                var statearr_33731_33761 = state_33718__$1;
                                statearr_33731_33761[2] = null;
                                statearr_33731_33761[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33719 === 9) {
                                  var inst_33682 = state_33718[7];
                                  var inst_33696 = cljs.core.vec.call(null, inst_33682);
                                  var state_33718__$1 = state_33718;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33718__$1, 11, out, inst_33696);
                                } else {
                                  if (state_val_33719 === 5) {
                                    var inst_33682 = state_33718[7];
                                    var inst_33691 = state_33718[11];
                                    var inst_33686 = state_33718[9];
                                    var inst_33683 = state_33718[8];
                                    var inst_33690 = inst_33682[inst_33683] = inst_33686;
                                    var inst_33691__$1 = inst_33683 + 1;
                                    var inst_33692 = inst_33691__$1 < n;
                                    var state_33718__$1 = function() {
                                      var statearr_33732 = state_33718;
                                      statearr_33732[11] = inst_33691__$1;
                                      statearr_33732[12] = inst_33690;
                                      return statearr_33732;
                                    }();
                                    if (cljs.core.truth_(inst_33692)) {
                                      var statearr_33733_33762 = state_33718__$1;
                                      statearr_33733_33762[1] = 8;
                                    } else {
                                      var statearr_33734_33763 = state_33718__$1;
                                      statearr_33734_33763[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_33719 === 14) {
                                      var inst_33711 = state_33718[2];
                                      var inst_33712 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_33718__$1 = function() {
                                        var statearr_33736 = state_33718;
                                        statearr_33736[13] = inst_33711;
                                        return statearr_33736;
                                      }();
                                      var statearr_33737_33764 = state_33718__$1;
                                      statearr_33737_33764[2] = inst_33712;
                                      statearr_33737_33764[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_33719 === 10) {
                                        var inst_33702 = state_33718[2];
                                        var state_33718__$1 = state_33718;
                                        var statearr_33738_33765 = state_33718__$1;
                                        statearr_33738_33765[2] = inst_33702;
                                        statearr_33738_33765[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_33719 === 8) {
                                          var inst_33682 = state_33718[7];
                                          var inst_33691 = state_33718[11];
                                          var tmp33735 = inst_33682;
                                          var inst_33682__$1 = tmp33735;
                                          var inst_33683 = inst_33691;
                                          var state_33718__$1 = function() {
                                            var statearr_33739 = state_33718;
                                            statearr_33739[7] = inst_33682__$1;
                                            statearr_33739[8] = inst_33683;
                                            return statearr_33739;
                                          }();
                                          var statearr_33740_33766 = state_33718__$1;
                                          statearr_33740_33766[2] = null;
                                          statearr_33740_33766[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33752, out);
        return function(switch__10515__auto__, c__10627__auto___33752, out) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33744 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33744[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33744[1] = 1;
              return statearr_33744;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33718) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33718);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33745) {
                    if (e33745 instanceof Object) {
                      var ex__10519__auto__ = e33745;
                      var statearr_33746_33767 = state_33718;
                      statearr_33746_33767[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33718);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33745;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33768 = state_33718;
                  state_33718 = G__33768;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33718) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33718);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33752, out);
      }();
      var state__10629__auto__ = function() {
        var statearr_33747 = f__10628__auto__.call(null);
        statearr_33747[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33752;
        return statearr_33747;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33752, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args33769 = [];
  var len__5189__auto___33843 = arguments.length;
  var i__5190__auto___33844 = 0;
  while (true) {
    if (i__5190__auto___33844 < len__5189__auto___33843) {
      args33769.push(arguments[i__5190__auto___33844]);
      var G__33845 = i__5190__auto___33844 + 1;
      i__5190__auto___33844 = G__33845;
      continue;
    } else {
    }
    break;
  }
  var G__33771 = args33769.length;
  switch(G__33771) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args33769.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__10627__auto___33847 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__10627__auto___33847, out) {
    return function() {
      var f__10628__auto__ = function() {
        var switch__10515__auto__ = function(c__10627__auto___33847, out) {
          return function(state_33813) {
            var state_val_33814 = state_33813[1];
            if (state_val_33814 === 7) {
              var inst_33809 = state_33813[2];
              var state_33813__$1 = state_33813;
              var statearr_33815_33848 = state_33813__$1;
              statearr_33815_33848[2] = inst_33809;
              statearr_33815_33848[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_33814 === 1) {
                var inst_33772 = [];
                var inst_33773 = inst_33772;
                var inst_33774 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_33813__$1 = function() {
                  var statearr_33816 = state_33813;
                  statearr_33816[7] = inst_33773;
                  statearr_33816[8] = inst_33774;
                  return statearr_33816;
                }();
                var statearr_33817_33849 = state_33813__$1;
                statearr_33817_33849[2] = null;
                statearr_33817_33849[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_33814 === 4) {
                  var inst_33777 = state_33813[9];
                  var inst_33777__$1 = state_33813[2];
                  var inst_33778 = inst_33777__$1 == null;
                  var inst_33779 = cljs.core.not.call(null, inst_33778);
                  var state_33813__$1 = function() {
                    var statearr_33818 = state_33813;
                    statearr_33818[9] = inst_33777__$1;
                    return statearr_33818;
                  }();
                  if (inst_33779) {
                    var statearr_33819_33850 = state_33813__$1;
                    statearr_33819_33850[1] = 5;
                  } else {
                    var statearr_33820_33851 = state_33813__$1;
                    statearr_33820_33851[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_33814 === 15) {
                    var inst_33803 = state_33813[2];
                    var state_33813__$1 = state_33813;
                    var statearr_33821_33852 = state_33813__$1;
                    statearr_33821_33852[2] = inst_33803;
                    statearr_33821_33852[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_33814 === 13) {
                      var state_33813__$1 = state_33813;
                      var statearr_33822_33853 = state_33813__$1;
                      statearr_33822_33853[2] = null;
                      statearr_33822_33853[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_33814 === 6) {
                        var inst_33773 = state_33813[7];
                        var inst_33798 = inst_33773.length;
                        var inst_33799 = inst_33798 > 0;
                        var state_33813__$1 = state_33813;
                        if (cljs.core.truth_(inst_33799)) {
                          var statearr_33823_33854 = state_33813__$1;
                          statearr_33823_33854[1] = 12;
                        } else {
                          var statearr_33824_33855 = state_33813__$1;
                          statearr_33824_33855[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_33814 === 3) {
                          var inst_33811 = state_33813[2];
                          var state_33813__$1 = state_33813;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_33813__$1, inst_33811);
                        } else {
                          if (state_val_33814 === 12) {
                            var inst_33773 = state_33813[7];
                            var inst_33801 = cljs.core.vec.call(null, inst_33773);
                            var state_33813__$1 = state_33813;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33813__$1, 15, out, inst_33801);
                          } else {
                            if (state_val_33814 === 2) {
                              var state_33813__$1 = state_33813;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_33813__$1, 4, ch);
                            } else {
                              if (state_val_33814 === 11) {
                                var inst_33781 = state_33813[10];
                                var inst_33777 = state_33813[9];
                                var inst_33791 = state_33813[2];
                                var inst_33792 = [];
                                var inst_33793 = inst_33792.push(inst_33777);
                                var inst_33773 = inst_33792;
                                var inst_33774 = inst_33781;
                                var state_33813__$1 = function() {
                                  var statearr_33825 = state_33813;
                                  statearr_33825[7] = inst_33773;
                                  statearr_33825[11] = inst_33791;
                                  statearr_33825[12] = inst_33793;
                                  statearr_33825[8] = inst_33774;
                                  return statearr_33825;
                                }();
                                var statearr_33826_33856 = state_33813__$1;
                                statearr_33826_33856[2] = null;
                                statearr_33826_33856[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_33814 === 9) {
                                  var inst_33773 = state_33813[7];
                                  var inst_33789 = cljs.core.vec.call(null, inst_33773);
                                  var state_33813__$1 = state_33813;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_33813__$1, 11, out, inst_33789);
                                } else {
                                  if (state_val_33814 === 5) {
                                    var inst_33781 = state_33813[10];
                                    var inst_33774 = state_33813[8];
                                    var inst_33777 = state_33813[9];
                                    var inst_33781__$1 = f.call(null, inst_33777);
                                    var inst_33782 = cljs.core._EQ_.call(null, inst_33781__$1, inst_33774);
                                    var inst_33783 = cljs.core.keyword_identical_QMARK_.call(null, inst_33774, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_33784 = inst_33782 || inst_33783;
                                    var state_33813__$1 = function() {
                                      var statearr_33827 = state_33813;
                                      statearr_33827[10] = inst_33781__$1;
                                      return statearr_33827;
                                    }();
                                    if (cljs.core.truth_(inst_33784)) {
                                      var statearr_33828_33857 = state_33813__$1;
                                      statearr_33828_33857[1] = 8;
                                    } else {
                                      var statearr_33829_33858 = state_33813__$1;
                                      statearr_33829_33858[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_33814 === 14) {
                                      var inst_33806 = state_33813[2];
                                      var inst_33807 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_33813__$1 = function() {
                                        var statearr_33831 = state_33813;
                                        statearr_33831[13] = inst_33806;
                                        return statearr_33831;
                                      }();
                                      var statearr_33832_33859 = state_33813__$1;
                                      statearr_33832_33859[2] = inst_33807;
                                      statearr_33832_33859[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_33814 === 10) {
                                        var inst_33796 = state_33813[2];
                                        var state_33813__$1 = state_33813;
                                        var statearr_33833_33860 = state_33813__$1;
                                        statearr_33833_33860[2] = inst_33796;
                                        statearr_33833_33860[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_33814 === 8) {
                                          var inst_33773 = state_33813[7];
                                          var inst_33781 = state_33813[10];
                                          var inst_33777 = state_33813[9];
                                          var inst_33786 = inst_33773.push(inst_33777);
                                          var tmp33830 = inst_33773;
                                          var inst_33773__$1 = tmp33830;
                                          var inst_33774 = inst_33781;
                                          var state_33813__$1 = function() {
                                            var statearr_33834 = state_33813;
                                            statearr_33834[7] = inst_33773__$1;
                                            statearr_33834[14] = inst_33786;
                                            statearr_33834[8] = inst_33774;
                                            return statearr_33834;
                                          }();
                                          var statearr_33835_33861 = state_33813__$1;
                                          statearr_33835_33861[2] = null;
                                          statearr_33835_33861[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__10627__auto___33847, out);
        return function(switch__10515__auto__, c__10627__auto___33847, out) {
          return function() {
            var cljs$core$async$state_machine__10516__auto__ = null;
            var cljs$core$async$state_machine__10516__auto____0 = function() {
              var statearr_33839 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_33839[0] = cljs$core$async$state_machine__10516__auto__;
              statearr_33839[1] = 1;
              return statearr_33839;
            };
            var cljs$core$async$state_machine__10516__auto____1 = function(state_33813) {
              while (true) {
                var ret_value__10517__auto__ = function() {
                  try {
                    while (true) {
                      var result__10518__auto__ = switch__10515__auto__.call(null, state_33813);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__10518__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__10518__auto__;
                      }
                      break;
                    }
                  } catch (e33840) {
                    if (e33840 instanceof Object) {
                      var ex__10519__auto__ = e33840;
                      var statearr_33841_33862 = state_33813;
                      statearr_33841_33862[5] = ex__10519__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_33813);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e33840;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__10517__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__33863 = state_33813;
                  state_33813 = G__33863;
                  continue;
                } else {
                  return ret_value__10517__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__10516__auto__ = function(state_33813) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__10516__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__10516__auto____1.call(this, state_33813);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__10516__auto____0;
            cljs$core$async$state_machine__10516__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__10516__auto____1;
            return cljs$core$async$state_machine__10516__auto__;
          }();
        }(switch__10515__auto__, c__10627__auto___33847, out);
      }();
      var state__10629__auto__ = function() {
        var statearr_33842 = f__10628__auto__.call(null);
        statearr_33842[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__10627__auto___33847;
        return statearr_33842;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__10629__auto__);
    };
  }(c__10627__auto___33847, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("view_vote");
goog.require("cljs.core");
goog.require("cljs.core.async");
var c_33866 = document.createElement("DIV");
c_33866["innerHTML"] = "\x3cp\x3ei'm dynamically created wooh!!\x3c/p\x3e";
document.getElementById("ballot").appendChild(c_33866);

//# sourceMappingURL=out.js.map