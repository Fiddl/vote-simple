;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name taoensso.encore, :imports nil, :requires {goog.net.XhrIoPool goog.net.XhrIoPool, gevents goog.events, set clojure.set, goog.net.XhrIo goog.net.XhrIo, gquery-data goog.Uri.QueryData, goog.string goog.string, goog.Uri.QueryData goog.Uri.QueryData, gxhr-pool goog.net.XhrIoPool, goog.string.StringBuffer goog.string.StringBuffer, goog.net.EventType goog.net.EventType, clojure.set clojure.set, goog.structs goog.structs, goog.string.format goog.string.format, gstructs goog.structs, str clojure.string, clojure.string clojure.string, cljs.reader cljs.reader, gstr goog.string, edn cljs.reader, goog.events goog.events, goog.net.ErrorCode goog.net.ErrorCode, gxhr goog.net.XhrIo}, :uses nil, :defs {nneg-int? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 184, :column 7, :end-line 184, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg-int?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 184, :end-line 184, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, error? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 159, :column 13, :end-line 159, :end-column 19, :arglists (quote ([x]))}, :name taoensso.encore/error?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 7, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, set* {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 298, :column 7, :end-line 298, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/set*, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, sayp {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1330, :column 9, :end-line 1330, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayp, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1330, :end-line 1330, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, now-udt {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 477, :column 7, :end-line 477, :end-column 14, :arglists (quote ([]))}, :name taoensso.encore/now-udt, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 477, :end-line 477, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, dissoc-in {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 675, :column 7, :end-line 675, :end-column 16, :arglists (quote ([m ks & dissoc-ks])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}}, :name taoensso.encore/dissoc-in, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(m ks dissoc-ks)], :arglists ([m ks & dissoc-ks]), :arglists-meta (nil)}, :method-params [(m ks dissoc-ks)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 675, :end-line 675, :max-fixed-arity 2, :fn-var true, :arglists ([m ks & dissoc-ks])}, norm-word-breaks {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1006, :column 7, :end-line 1006, :end-column 23, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space."}, :name taoensso.encore/norm-word-breaks, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1006, :end-line 1006, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Converts all word breaks of any form and length (including line breaks of any\n  form, tabs, spaces, etc.) to a single regular space."}, rcompare {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 850, :column 7, :end-line 850, :end-column 15, :arglists (quote ([x y])), :doc "Reverse comparator."}, :name taoensso.encore/rcompare, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 850, :end-line 850, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y])), :doc "Reverse comparator."}, Swapped {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name taoensso.encore/Swapped, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 561, :record true, :end-line 561, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ms {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 491, :column 7, :end-line 491, :end-column 9, :arglists (quote ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}])), :doc "Returns number of milliseconds in period defined by given args.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}}, :name taoensso.encore/ms, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :arglists-meta (nil)}, :method-params [({:as opts, :keys [years months weeks days hours mins secs msecs ms]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 491, :end-line 491, :max-fixed-arity 0, :fn-var true, :arglists ([& {:as opts, :keys [years months weeks days hours mins secs msecs ms]}]), :doc "Returns number of milliseconds in period defined by given args."}, str-ends-with? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 961, :column 7, :end-line 961, :end-column 21, :arglists (quote ([s substr]))}, :name taoensso.encore/str-ends-with?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 21, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 961, :end-line 961, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, rate-limited {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1252, :column 7, :end-line 1252, :end-column 19, :arglists (quote ([ncalls-limit window-ms f])), :doc "Wraps fn so that it returns {:result _ :backoff-ms _}."}, :name taoensso.encore/rate-limited, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1252, :end-line 1252, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ncalls-limit window-ms f])), :doc "Wraps fn so that it returns {:result _ :backoff-ms _}."}, log {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1323, :column 9, :end-line 1323, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/log, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 1323, :end-line 1323, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nano-time {:name taoensso.encore/nano-time, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1264, :column 1, :end-line 1264, :end-column 15, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1264, :column 6, :end-line 1264, :end-column 15}}, memoized {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1076, :column 7, :end-line 1076, :end-column 15, :arglists (quote ([cache f & args])), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}}, :name taoensso.encore/memoized, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(cache f args)], :arglists ([cache f & args]), :arglists-meta (nil)}, :method-params [(cache f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1076, :end-line 1076, :max-fixed-arity 2, :fn-var true, :arglists ([cache f & args]), :doc "Like `(memoize* f)` but takes an explicit cache atom (possibly nil)\n  and immediately applies memoized f to given arguments."}, greatest {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 872, :column 7, :end-line 872, :end-column 15, :arglists (quote ([coll & [?comparator]])), :doc "Returns the 'greatest' element in coll in O(n) time.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/greatest, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 872, :end-line 872, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Returns the 'greatest' element in coll in O(n) time."}, merge-keywords {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 396, :column 7, :end-line 396, :end-column 21, :arglists (quote ([ks & [as-ns?]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [as-ns?])], :arglists ([ks & [as-ns?]]), :arglists-meta (nil)}}, :name taoensso.encore/merge-keywords, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(ks [as-ns?])], :arglists ([ks & [as-ns?]]), :arglists-meta (nil)}, :method-params [(ks [as-ns?])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 396, :end-line 396, :max-fixed-arity 1, :fn-var true, :arglists ([ks & [as-ns?]])}, atom? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 149, :column 7, :end-line 149, :end-column 12, :arglists (quote ([x]))}, :name taoensso.encore/atom?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, keywordize-map {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 750, :column 7, :end-line 750, :end-column 21, :arglists (quote ([m]))}, :name taoensso.encore/keywordize-map, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 21, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 750, :end-line 750, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, logf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1333, :column 9, :end-line 1333, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/logf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1333, :end-line 1333, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, reportf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1359, :column 9, :end-line 1359, :end-column 16, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/reportf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1359, :end-line 1359, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, fatalf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1358, :column 9, :end-line 1358, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/fatalf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1358, :end-line 1358, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, ajax-lite {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1403, :column 7, :end-line 1403, :end-column 16, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000}\n    (fn async-callback [resp-map]\n      (let [{:keys [?status ?error ?content ?content-type]} resp-map]\n        ;; ?status - 200, 404, ..., or nil on no response\n        ;; ?error  - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                 :timeout <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, :name taoensso.encore/ajax-lite, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([uri p__13947 callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1403, :end-line 1403, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri {:keys [method params headers timeout-ms resp-type], :as opts, :or {method :get, timeout-ms 10000, resp-type :auto}} callback])), :doc "Alpha - subject to change.\n  Simple+lightweight Ajax via Google Closure. Returns nil, or the xhr instance.\n  Ref. https://developers.google.com/closure/library/docs/xhrio.\n\n  (ajax-lite \"/my-post-route\"\n    {:method     :post\n     :params     {:username \"Rich Hickey\"\n                  :type     \"Awesome\"}\n     :headers    {\"Foo\" \"Bar\"}\n     :resp-type  :text\n     :timeout-ms 7000}\n    (fn async-callback [resp-map]\n      (let [{:keys [?status ?error ?content ?content-type]} resp-map]\n        ;; ?status - 200, 404, ..., or nil on no response\n        ;; ?error  - e/o #{:xhr-pool-depleted :exception :http-error :abort\n        ;;                 :timeout <http-error-status> nil}\n        (js/alert (str \"Ajax response: \" resp-map)))))"}, distinct-by {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 837, :column 7, :end-line 837, :end-column 18, :arglists (quote ([keyfn coll])), :doc "Like `sort-by` for distinct. Based on clojure.core/distinct."}, :name taoensso.encore/distinct-by, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 837, :end-line 837, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keyfn coll])), :doc "Like `sort-by` for distinct. Based on clojure.core/distinct."}, nvec? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 211, :column 7, :end-line 211, :end-column 12, :arglists (quote ([n x])), :doc "Is `x` a vector of size `n`?"}, :name taoensso.encore/nvec?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :method-params ([n x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n x])), :doc "Is `x` a vector of size `n`?"}, path {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 986, :column 7, :end-line 986, :end-column 11, :arglists (quote ([& parts])), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}}, :name taoensso.encore/path, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(parts)], :arglists ([& parts]), :arglists-meta (nil)}, :method-params [(parts)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 986, :end-line 986, :max-fixed-arity 0, :fn-var true, :arglists ([& parts]), :doc "Joins string paths (URLs, file paths, etc.) ensuring correct \"/\"\n  interposition."}, contains-in? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 676, :column 7, :end-line 676, :end-column 19, :arglists (quote ([coll ks]))}, :name taoensso.encore/contains-in?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([coll ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 676, :end-line 676, :max-fixed-arity 2, :fn-var true, :arglists (quote ([coll ks]))}, filter-kvs {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 730, :column 7, :end-line 730, :end-column 17, :arglists (quote ([predk predv m]))}, :name taoensso.encore/filter-kvs, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :method-params ([predk predv m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 730, :end-line 730, :max-fixed-arity 3, :fn-var true, :arglists (quote ([predk predv m]))}, swap-in! {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 609, :column 7, :end-line 609, :end-column 15, :arglists (quote ([atom_ ks f] [atom_ ks f & more])), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/swap-in!, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks f]), :arglists ([atom_ ks f] [atom_ ks f & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 609, :end-line 609, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks f] [atom_ ks f & more]), :doc "More powerful version of `swap!`:\n    * Supports optional `update-in` semantics.\n    * Swap fn can return `(swapped <new-val> <return-val>)` rather than just\n      <new-val>. This is useful when writing atomic pull fns, etc."}, warnf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1356, :column 9, :end-line 1356, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/warnf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1356, :end-line 1356, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, memoize* {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1084, :column 7, :end-line 1084, :end-column 15, :arglists (quote ([f] [ttl-ms f] [cache-size ttl-ms f])), :doc "Like `clojure.core/memoize` but:\n    * Uses delays to prevent race conditions on writes.\n    * Supports auto invalidation & gc with `ttl-ms` option.\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`.\n    * Supports cache size limit & gc with `cache-size` option.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}}, :name taoensso.encore/memoize*, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :arglists-meta (nil nil nil)}, :method-params ([f] [ttl-ms f] [cache-size ttl-ms f]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1084, :end-line 1084, :max-fixed-arity 3, :fn-var true, :arglists ([f] [ttl-ms f] [cache-size ttl-ms f]), :doc "Like `clojure.core/memoize` but:\n    * Uses delays to prevent race conditions on writes.\n    * Supports auto invalidation & gc with `ttl-ms` option.\n    * Supports manual invalidation by prepending args with `:mem/del` or `:mem/fresh`.\n    * Supports cache size limit & gc with `cache-size` option."}, merge-deep {:name taoensso.encore/merge-deep, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 867, :column 1, :end-line 867, :end-column 16, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 867, :column 6, :end-line 867, :end-column 16}}, join-once {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 968, :column 7, :end-line 968, :end-column 16, :arglists (quote ([separator & coll])), :doc "Like `clojure.string/join` but ensures no double separators.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}}, :name taoensso.encore/join-once, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(separator coll)], :arglists ([separator & coll]), :arglists-meta (nil)}, :method-params [(separator coll)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 968, :end-line 968, :max-fixed-arity 1, :fn-var true, :arglists ([separator & coll]), :doc "Like `clojure.string/join` but ensures no double separators."}, get-window-location {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1362, :column 7, :end-line 1362, :end-column 26, :arglists (quote ([])), :doc "Returns browser window's current location. Forgeable."}, :name taoensso.encore/get-window-location, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1362, :end-line 1362, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns browser window's current location. Forgeable."}, format {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 220, :column 9, :end-line 220, :end-column 15, :arglists (quote ([fmt & args])), :doc "Removed from cljs.core 0.0-1885, Ref. http://goo.gl/su7Xkj", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}}, :name taoensso.encore/format, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt args)], :arglists ([fmt & args]), :arglists-meta (nil)}, :method-params [(fmt args)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 220, :end-line 220, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & args]), :doc "Removed from cljs.core 0.0-1885, Ref. http://goo.gl/su7Xkj"}, as-int {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 353, :column 7, :end-line 353, :end-column 13, :arglists (quote ([x]))}, :name taoensso.encore/as-int, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 353, :end-line 353, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, have {:name taoensso.encore/have, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 206, :column 1, :end-line 206, :end-column 10, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 206, :column 6, :end-line 206, :end-column 10}}, swapped {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 562, :column 12, :end-line 562, :end-column 19, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/swapped, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 562, :end-line 562, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, logging-level {:name taoensso.encore/logging-level, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1336, :column 3, :end-line 1336, :end-column 21, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1336, :column 8, :end-line 1336, :end-column 21}, :doc "Log only >= <this-level> calls"}, undefined->nil {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 219, :column 10, :end-line 219, :end-column 24, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.encore/undefined->nil, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 219, :end-line 219, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, repeatedly-into {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 884, :column 7, :end-line 884, :end-column 22, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection."}, :name taoensso.encore/repeatedly-into, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 22, :method-params ([coll n f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 884, :end-line 884, :max-fixed-arity 3, :fn-var true, :arglists (quote ([coll n f])), :doc "Like `repeatedly` but faster and `conj`s items into given collection."}, coerce-xhr-params {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1391, :column 8, :end-line 1391, :end-column 25, :private true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, :private true, :name taoensso.encore/coerce-xhr-params, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 25, :method-params ([uri method params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1391, :end-line 1391, :max-fixed-arity 3, :fn-var true, :arglists (quote ([uri method params])), :doc "[uri method get-or-post-params] -> [uri post-content]"}, nnil? {:name taoensso.encore/nnil?, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 188, :column 1, :end-line 188, :end-column 12, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 188, :column 7, :end-line 188, :end-column 12}}, str-contains? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 953, :column 7, :end-line 953, :end-column 20, :arglists (quote ([s substr]))}, :name taoensso.encore/str-contains?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 20, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 953, :end-line 953, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, filter-vals {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 735, :column 7, :end-line 735, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-vals, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, count-words {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1011, :column 7, :end-line 1011, :end-column 18, :arglists (quote ([s]))}, :name taoensso.encore/count-words, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1011, :end-line 1011, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, ms->secs {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 490, :column 7, :end-line 490, :end-column 15, :arglists (quote ([ms]))}, :name taoensso.encore/ms->secs, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 490, :end-line 490, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ms]))}, mapply {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 706, :column 7, :end-line 706, :end-column 13, :arglists (quote ([f & args])), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}}, :name taoensso.encore/mapply, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f args)], :arglists ([f & args]), :arglists-meta (nil)}, :method-params [(f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 706, :end-line 706, :max-fixed-arity 1, :fn-var true, :arglists ([f & args]), :doc "Like `apply` but assumes last arg is a map whose elements should be applied\n  to `f` as an unpaired seq:\n    (mapply (fn [x & {:keys [y z]}] (str x y z)) 1 {:y 2 :z 3})\n      where fn will receive args as: `(1 :y 2 :z 3)`."}, error-data {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 161, :column 7, :end-line 161, :end-column 17, :arglists (quote ([x]))}, :name taoensso.encore/error-data, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->Swapped {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 561, :column 12, :end-line 561, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__13626]))}, :name taoensso.encore/map->Swapped, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([G__13626]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 561, :end-line 561, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__13626]))}, reset-in! {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 637, :column 7, :end-line 637, :end-column 16, :arglists (quote ([atom_ ks new-val] [atom_ ks new-val & more])), :doc "Is to `reset!` as `swap-in!` is to `swap!`.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/reset-in!, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params ([atom_ ks new-val]), :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :arglists-meta (nil nil)}, :method-params ([atom_ ks new-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 637, :end-line 637, :max-fixed-arity 3, :fn-var true, :arglists ([atom_ ks new-val] [atom_ ks new-val & more]), :doc "Is to `reset!` as `swap-in!` is to `swap!`."}, remove-vals {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 739, :column 7, :end-line 739, :end-column 18, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, :name taoensso.encore/remove-vals, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 739, :end-line 739, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m])), :doc "Smaller, common-case version of `filter-vals`. Esp useful with `nil?`/`blank?`\n  pred when constructing maps: {:foo (when _ <...>) :bar (when _ <...>)} in a\n  way that preservers :or semantics."}, round* {:name taoensso.encore/round*, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 458, :column 1, :end-line 458, :end-column 12, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 458, :column 6, :end-line 458, :end-column 12}}, pos-num? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 181, :column 8, :end-line 181, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/pos-num?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, stringy? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 385, :column 7, :end-line 385, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/stringy?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 385, :end-line 385, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, parse-float {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 361, :column 7, :end-line 361, :end-column 18, :arglists (quote ([x])), :doc "Returns x as Double (or JavaScript float), or nil on failure."}, :name taoensso.encore/parse-float, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 361, :end-line 361, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns x as Double (or JavaScript float), or nil on failure."}, keys-nnil? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 304, :column 7, :end-line 304, :end-column 17, :arglists (quote ([m ks]))}, :name taoensso.encore/keys-nnil?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, name-with-attrs {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 45, :column 7, :end-line 45, :end-column 22, :arglists (quote ([name macro-args])), :doc "Stolen from `clojure.tools.macro`.\n  Handles optional docstrings & attr maps for a macro def's name."}, :name taoensso.encore/name-with-attrs, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 22, :method-params ([name macro-args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name macro-args])), :doc "Stolen from `clojure.tools.macro`.\n  Handles optional docstrings & attr maps for a macro def's name."}, pow {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 440, :column 7, :end-line 440, :end-column 10, :arglists (quote ([n exp]))}, :name taoensso.encore/pow, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 10, :method-params ([n exp]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 440, :end-line 440, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n exp]))}, exp-backoff {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 467, :column 7, :end-line 467, :end-column 18, :arglists (quote ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]])), :doc "Returns binary exponential backoff value.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}}, :name taoensso.encore/exp-backoff, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :arglists-meta (nil)}, :method-params [(nattempt [{:keys [factor], min' :min, max' :max, :or {factor 1000}}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 467, :end-line 467, :max-fixed-arity 1, :fn-var true, :arglists ([nattempt & [{:keys [factor], min' :min, max' :max, :or {factor 1000}}]]), :doc "Returns binary exponential backoff value."}, swap-val! {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1065, :column 7, :end-line 1065, :end-column 16, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value.\n  Specialized, fast `swap-in!` for use mostly by memoization utils."}, :name taoensso.encore/swap-val!, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([atom_ k f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1065, :end-line 1065, :max-fixed-arity 3, :fn-var true, :arglists (quote ([atom_ k f])), :doc "Swaps associative value at key and returns the new value.\n  Specialized, fast `swap-in!` for use mostly by memoization utils."}, map-keys {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 727, :column 7, :end-line 727, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-keys, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 727, :end-line 727, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, substr {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 918, :column 7, :end-line 918, :end-column 13, :arglists (quote ([s start-idx & [max-len]])), :doc "Gives a consistent, flexible, cross-platform substring API with support for:\n    * Clamping of indexes beyond string limits.\n    * Negative indexes: [   0   |   1   |  ...  |  n-1  |   n   ) or\n                        [  -n   | -n+1  |  ...  |  -1   |   0   ).\n                        (start index inclusive, end index exclusive).\n\n  Note that `max-len` was chosen over `end-idx` since it's less ambiguous and\n  easier to reason about - esp. when accepting negative indexes.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [max-len])], :arglists ([s start-idx & [max-len]]), :arglists-meta (nil)}}, :name taoensso.encore/substr, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(s start-idx [max-len])], :arglists ([s start-idx & [max-len]]), :arglists-meta (nil)}, :method-params [(s start-idx [max-len])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 918, :end-line 918, :max-fixed-arity 2, :fn-var true, :arglists ([s start-idx & [max-len]]), :doc "Gives a consistent, flexible, cross-platform substring API with support for:\n    * Clamping of indexes beyond string limits.\n    * Negative indexes: [   0   |   1   |  ...  |  n-1  |   n   ) or\n                        [  -n   | -n+1  |  ...  |  -1   |   0   ).\n                        (start index inclusive, end index exclusive).\n\n  Note that `max-len` was chosen over `end-idx` since it's less ambiguous and\n  easier to reason about - esp. when accepting negative indexes."}, into-all {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 781, :column 7, :end-line 781, :end-column 15, :arglists (quote ([to from] [to from & more])), :doc "Like `into` but supports multiple \"from\"s.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/into-all, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([to from]), :arglists ([to from] [to from & more]), :arglists-meta (nil nil)}, :method-params ([to from]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 781, :end-line 781, :max-fixed-arity 2, :fn-var true, :arglists ([to from] [to from & more]), :doc "Like `into` but supports multiple \"from\"s."}, secs {:name taoensso.encore/secs, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 507, :column 1, :end-line 507, :end-column 10, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 507, :column 6, :end-line 507, :end-column 10}}, interleave-all {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 785, :column 7, :end-line 785, :end-column 21, :arglists (quote ([] [c1] [c1 c2] [c1 c2 & colls])), :doc "Greedy version of `interleave`.\n  Ref. https://groups.google.com/d/msg/clojure/o4Hg0s_1Avs/rPn3P4Ig6MsJ", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}}, :name taoensso.encore/interleave-all, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([] [c1] [c1 c2]), :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :arglists-meta (nil nil nil nil)}, :method-params ([] [c1] [c1 c2]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 785, :end-line 785, :max-fixed-arity 2, :fn-var true, :arglists ([] [c1] [c1 c2] [c1 c2 & colls]), :doc "Greedy version of `interleave`.\n  Ref. https://groups.google.com/d/msg/clojure/o4Hg0s_1Avs/rPn3P4Ig6MsJ"}, logging-level-sufficient? {:name taoensso.encore/logging-level-sufficient?, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1337, :column 3, :end-line 1337, :end-column 33, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1337, :column 8, :end-line 1337, :end-column 33}}, kw-identical? {:name taoensso.encore/kw-identical?, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 147, :column 8, :end-line 147, :end-column 26, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 147, :column 13, :end-line 147, :end-column 26}}, lls? {:name taoensso.encore/lls?, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1351, :column 3, :end-line 1351, :end-column 22, :private true, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1351, :column 18, :end-line 1351, :end-column 22, :private true}}, nnil-keys? {:name taoensso.encore/nnil-keys?, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1549, :column 1, :end-line 1549, :end-column 16, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1549, :column 6, :end-line 1549, :end-column 16}}, fq-name {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 386, :column 7, :end-line 386, :end-column 14, :arglists (quote ([x])), :doc "Like `name` but includes namespace in string when present."}, :name taoensso.encore/fq-name, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 386, :end-line 386, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Like `name` but includes namespace in string when present."}, keys>= {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 303, :column 7, :end-line 303, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys>=, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 303, :end-line 303, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, distinctv {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 808, :column 7, :end-line 808, :end-column 16, :arglists (quote ([coll] [keyfn coll])), :doc "Prefer `set` when order doesn't matter (much faster).", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}}, :name taoensso.encore/distinctv, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [keyfn coll]), :arglists ([coll] [keyfn coll]), :arglists-meta (nil nil)}, :method-params ([coll] [keyfn coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 808, :end-line 808, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [keyfn coll]), :doc "Prefer `set` when order doesn't matter (much faster)."}, filter-keys {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 734, :column 7, :end-line 734, :end-column 18, :arglists (quote ([pred m]))}, :name taoensso.encore/filter-keys, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([pred m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 734, :end-line 734, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pred m]))}, debugf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1354, :column 9, :end-line 1354, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/debugf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1354, :end-line 1354, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, get-pooled-xhr! {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1382, :column 8, :end-line 1382, :end-column 23, :private true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually. Use core.async to wait for an available\n  instance, etc."}, :private true, :name taoensso.encore/get-pooled-xhr!, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1382, :end-line 1382, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns an immediately available XhrIo instance, or nil. The instance must be\n  released back to pool manually. Use core.async to wait for an available\n  instance, etc."}, nnil= {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 194, :column 7, :end-line 194, :end-column 12, :arglists (quote ([x y] [x y & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/nnil=, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([x y]), :arglists ([x y] [x y & more]), :arglists-meta (nil nil)}, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 194, :end-line 194, :max-fixed-arity 2, :fn-var true, :arglists ([x y] [x y & more])}, now-udt-mock-fn {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 481, :column 7, :end-line 481, :end-column 22, :arglists (quote ([& [mock-udts]])), :doc "Useful for testing.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([mock-udts])], :arglists ([& [mock-udts]]), :arglists-meta (nil)}}, :name taoensso.encore/now-udt-mock-fn, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [([mock-udts])], :arglists ([& [mock-udts]]), :arglists-meta (nil)}, :method-params [([mock-udts])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 0, :fn-var true, :arglists ([& [mock-udts]]), :doc "Useful for testing."}, tracef {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1353, :column 9, :end-line 1353, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/tracef, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1353, :end-line 1353, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, xhr-pool_ {:name taoensso.encore/xhr-pool_, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1380, :column 8, :end-line 1380, :end-column 32, :private true, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1380, :column 23, :end-line 1380, :end-column 32, :private true}}, as-float {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 376, :column 7, :end-line 376, :end-column 15, :arglists (quote ([x]))}, :name taoensso.encore/as-float, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 376, :end-line 376, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, infof {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1355, :column 9, :end-line 1355, :end-column 14, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/infof, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1355, :end-line 1355, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, nneg-num? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 182, :column 7, :end-line 182, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/nneg-num?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, zero-num? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 180, :column 7, :end-line 180, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/zero-num?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 180, :end-line 180, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, secs->ms {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 489, :column 7, :end-line 489, :end-column 15, :arglists (quote ([secs]))}, :name taoensso.encore/secs->ms, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([secs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 489, :end-line 489, :max-fixed-arity 1, :fn-var true, :arglists (quote ([secs]))}, str-starts-with? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 957, :column 7, :end-line 957, :end-column 23, :arglists (quote ([s substr]))}, :name taoensso.encore/str-starts-with?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 23, :method-params ([s substr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 957, :end-line 957, :max-fixed-arity 2, :fn-var true, :arglists (quote ([s substr]))}, round {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 443, :column 7, :end-line 443, :end-column 12, :arglists (quote ([n & [type nplaces]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}}, :name taoensso.encore/round, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(n [type nplaces])], :arglists ([n & [type nplaces]]), :arglists-meta (nil)}, :method-params [(n [type nplaces])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 443, :end-line 443, :max-fixed-arity 1, :fn-var true, :arglists ([n & [type nplaces]])}, ->Swapped {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 561, :column 12, :end-line 561, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([new-val return-val]))}, :name taoensso.encore/->Swapped, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([new-val return-val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 561, :end-line 561, :max-fixed-arity 2, :fn-var true, :arglists (quote ([new-val return-val]))}, rate-limiter {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1215, :column 7, :end-line 1215, :end-column 19, :arglists (quote ([ncalls-limit window-ms])), :doc "Returns a `(fn [& [id]])` that returns either `nil` (limit okay) or number of\n  msecs until next rate limit window (rate limited)."}, :name taoensso.encore/rate-limiter, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([ncalls-limit window-ms]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1215, :end-line 1215, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ncalls-limit window-ms])), :doc "Returns a `(fn [& [id]])` that returns either `nil` (limit okay) or number of\n  msecs until next rate limit window (rate limited)."}, sayf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1331, :column 9, :end-line 1331, :end-column 13, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/sayf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1331, :end-line 1331, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, least {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 877, :column 7, :end-line 877, :end-column 12, :arglists (quote ([coll & [?comparator]])), :doc "Returns the 'least' element in coll in O(n) time.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}}, :name taoensso.encore/least, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [?comparator])], :arglists ([coll & [?comparator]]), :arglists-meta (nil)}, :method-params [(coll [?comparator])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 877, :end-line 877, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [?comparator]]), :doc "Returns the 'least' element in coll in O(n) time."}, nblank-str? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 190, :column 7, :end-line 190, :end-column 18, :arglists (quote ([x]))}, :name taoensso.encore/nblank-str?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 190, :end-line 190, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, uuid-str {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1014, :column 7, :end-line 1014, :end-column 15, :arglists (quote ([] [max-length])), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [max-length]), :arglists ([] [max-length]), :arglists-meta (nil nil)}}, :name taoensso.encore/uuid-str, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [max-length]), :arglists ([] [max-length]), :arglists-meta (nil nil)}, :method-params ([] [max-length]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1014, :end-line 1014, :max-fixed-arity 1, :fn-var true, :arglists ([] [max-length]), :doc "Returns a UUIDv4 string of form \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\",\n  Ref. http://www.ietf.org/rfc/rfc4122.txt,\n       https://gist.github.com/franks42/4159427"}, pos-int? {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 183, :column 8, :end-line 183, :end-column 16, :arglists (quote ([x]))}, :name taoensso.encore/pos-int?, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, nblank? {:name taoensso.encore/nblank?, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 189, :column 1, :end-line 189, :end-column 14, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 189, :column 7, :end-line 189, :end-column 14}}, set-exp-backoff-timeout! {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1556, :column 14, :end-line 1556, :end-column 38, :arglists (quote ([nullary-f & [nattempt]])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}}, :name taoensso.encore/set-exp-backoff-timeout!, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 38, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(nullary-f [nattempt])], :arglists ([nullary-f & [nattempt]]), :arglists-meta (nil)}, :method-params [(nullary-f [nattempt])], :protocol-impl nil, :arglists-meta (nil), :column 8, :line 1556, :end-line 1556, :max-fixed-arity 1, :fn-var true, :arglists ([nullary-f & [nattempt]])}, first-nth {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1550, :column 7, :end-line 1550, :end-column 16, :arglists (quote ([coll] [coll not-found])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [coll not-found]), :arglists ([coll] [coll not-found]), :arglists-meta (nil nil)}}, :name taoensso.encore/first-nth, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([coll] [coll not-found]), :arglists ([coll] [coll not-found]), :arglists-meta (nil nil)}, :method-params ([coll] [coll not-found]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1550, :end-line 1550, :max-fixed-arity 2, :fn-var true, :arglists ([coll] [coll not-found])}, seq-kvs {:name taoensso.encore/seq-kvs, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 699, :column 1, :end-line 699, :end-column 13, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 699, :column 6, :end-line 699, :end-column 13}, :doc "(seq     {:a :A}) => ([:a :A])\n   (seq-kvs {:a :A}) => (:a :A)"}, abs {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 441, :column 7, :end-line 441, :end-column 10, :arglists (quote ([n]))}, :name taoensso.encore/abs, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 10, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 441, :end-line 441, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, map-kvs {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 719, :column 7, :end-line 719, :end-column 14, :arglists (quote ([kf vf m]))}, :name taoensso.encore/map-kvs, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 14, :method-params ([kf vf m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 719, :end-line 719, :max-fixed-arity 3, :fn-var true, :arglists (quote ([kf vf m]))}, map-vals {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 728, :column 7, :end-line 728, :end-column 15, :arglists (quote ([f m]))}, :name taoensso.encore/map-vals, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([f m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 728, :end-line 728, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f m]))}, explode-keyword {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 393, :column 7, :end-line 393, :end-column 22, :arglists (quote ([k]))}, :name taoensso.encore/explode-keyword, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 22, :method-params ([k]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 393, :end-line 393, :max-fixed-arity 1, :fn-var true, :arglists (quote ([k]))}, assoc-some {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 682, :column 7, :end-line 682, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its value is not nil.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-some, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 682, :end-line 682, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its value is not nil."}, as-bool {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 327, :column 7, :end-line 327, :end-column 14, :arglists (quote ([x]))}, :name taoensso.encore/as-bool, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 327, :end-line 327, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, errorf {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1357, :column 9, :end-line 1357, :end-column 15, :arglists (quote ([fmt & xs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}}, :name taoensso.encore/errorf, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(fmt xs)], :arglists ([fmt & xs]), :arglists-meta (nil)}, :method-params [(fmt xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1357, :end-line 1357, :max-fixed-arity 1, :fn-var true, :arglists ([fmt & xs])}, clj1098 {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 714, :column 8, :end-line 714, :end-column 15, :private true, :arglists (quote ([x])), :doc "Workaround for Clojure versions [1.4, 1.5) that blow up on `reduce-kv`s\n  against a nil coll, Ref. http://dev.clojure.org/jira/browse/CLJ-1098."}, :private true, :name taoensso.encore/clj1098, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 714, :end-line 714, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Workaround for Clojure versions [1.4, 1.5) that blow up on `reduce-kv`s\n  against a nil coll, Ref. http://dev.clojure.org/jira/browse/CLJ-1098."}, parse-bool {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 317, :column 7, :end-line 317, :end-column 17, :arglists (quote ([x])), :doc "Returns x as a unambiguous Boolean, or nil on failure. Requires more\n  explicit truthiness than (boolean x)."}, :name taoensso.encore/parse-bool, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 317, :end-line 317, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns x as a unambiguous Boolean, or nil on failure. Requires more\n  explicit truthiness than (boolean x)."}, keys<= {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 302, :column 7, :end-line 302, :end-column 13, :arglists (quote ([m ks]))}, :name taoensso.encore/keys<=, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, parse-int {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 336, :column 7, :end-line 336, :end-column 16, :arglists (quote ([x])), :doc "Returns x as Long (or JavaScript integer), or nil on failure."}, :name taoensso.encore/parse-int, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 336, :end-line 336, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns x as Long (or JavaScript integer), or nil on failure."}, asserted {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 201, :column 7, :end-line 201, :end-column 15, :arglists (quote ([pred x] [pred x & more])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([pred x]), :arglists ([pred x] [pred x & more]), :arglists-meta (nil nil)}}, :name taoensso.encore/asserted, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([pred x]), :arglists ([pred x] [pred x & more]), :arglists-meta (nil nil)}, :method-params ([pred x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 2, :fn-var true, :arglists ([pred x] [pred x & more])}, merge-deep-with {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 852, :column 7, :end-line 852, :end-column 22, :arglists (quote ([f & maps])), :doc "Like `merge-with` but merges maps recursively, applying the given fn\n  only when there's a non-map at a particular level.\n\n  (merge-deep-with + {:a {:b {:c 1 :d {:x 1 :y 2}} :e 3} :f 4}\n                    {:a {:b {:c 2 :d {:z 9} :z 3} :e 100}})\n  => {:a {:b {:z 3, :c 3, :d {:z 9, :x 1, :y 2}}, :e 103}, :f 4}", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}}, :name taoensso.encore/merge-deep-with, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f maps)], :arglists ([f & maps]), :arglists-meta (nil)}, :method-params [(f maps)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 852, :end-line 852, :max-fixed-arity 1, :fn-var true, :arglists ([f & maps]), :doc "Like `merge-with` but merges maps recursively, applying the given fn\n  only when there's a non-map at a particular level.\n\n  (merge-deep-with + {:a {:b {:c 1 :d {:x 1 :y 2}} :e 3} :f 4}\n                    {:a {:b {:c 2 :d {:z 9} :z 3} :e 100}})\n  => {:a {:b {:z 3, :c 3, :d {:z 9, :x 1, :y 2}}, :e 103}, :f 4}"}, replace-in* {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 575, :column 8, :end-line 575, :end-column 19, :private true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops."}, :private true, :name taoensso.encore/replace-in*, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([?vf-type m ops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 575, :end-line 575, :max-fixed-arity 3, :fn-var true, :arglists (quote ([?vf-type m ops])), :doc "Reduces input with\n  [<type> <ks> <reset-val-or-swap-fn>] or\n         [<ks> <reset-val-or-swap-fn>] ops."}, replace-in {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 592, :column 7, :end-line 592, :end-column 17, :arglists (quote ([m & ops])), :doc "Experimental. For use with `swap!`, etc.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}}, :name taoensso.encore/replace-in, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m ops)], :arglists ([m & ops]), :arglists-meta (nil)}, :method-params [(m ops)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 592, :end-line 592, :max-fixed-arity 1, :fn-var true, :arglists ([m & ops]), :doc "Experimental. For use with `swap!`, etc."}, assoc-when {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 686, :column 7, :end-line 686, :end-column 17, :arglists (quote ([m & kvs])), :doc "Assocs each kv iff its val is truthy.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}}, :name taoensso.encore/assoc-when, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(m kvs)], :arglists ([m & kvs]), :arglists-meta (nil)}, :method-params [(m kvs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 686, :end-line 686, :max-fixed-arity 1, :fn-var true, :arglists ([m & kvs]), :doc "Assocs each kv iff its val is truthy."}, logp {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1332, :column 9, :end-line 1332, :end-column 13, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name taoensso.encore/logp, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 3, :line 1332, :end-line 1332, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, as-map {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 757, :column 7, :end-line 757, :end-column 13, :arglists (quote ([coll & [kf vf]])), :doc "Cross between `hash-map` & `map-kvs`.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [kf vf])], :arglists ([coll & [kf vf]]), :arglists-meta (nil)}}, :name taoensso.encore/as-map, :variadic true, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(coll [kf vf])], :arglists ([coll & [kf vf]]), :arglists-meta (nil)}, :method-params [(coll [kf vf])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 757, :end-line 757, :max-fixed-arity 1, :fn-var true, :arglists ([coll & [kf vf]]), :doc "Cross between `hash-map` & `map-kvs`."}, vec* {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 297, :column 7, :end-line 297, :end-column 11, :arglists (quote ([x]))}, :name taoensso.encore/vec*, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 297, :end-line 297, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, as-swapped {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 563, :column 9, :end-line 563, :end-column 19, :private true, :arglists (quote ([x]))}, :private true, :name taoensso.encore/as-swapped, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 563, :end-line 563, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, gc-rate {:name taoensso.encore/gc-rate, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1064, :column 1, :end-line 1064, :end-column 31, :const true, :private true, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 1064, :column 24, :end-line 1064, :end-column 31, :const true, :private true}}, keys= {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 301, :column 7, :end-line 301, :end-column 12, :arglists (quote ([m ks]))}, :name taoensso.encore/keys=, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 12, :method-params ([m ks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([m ks]))}, round2 {:protocol-inline nil, :meta {:file "C:\\Users\\nathan\\Documents\\GitHub\\vote-simple\\resources\\public\\js\\out\\taoensso\\encore.cljs", :line 459, :column 7, :end-line 459, :end-column 13, :arglists (quote ([n])), :doc "Optimized common case."}, :name taoensso.encore/round2, :variadic false, :file "resources\\public\\js\\out\\taoensso\\encore.cljs", :end-column 13, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 459, :end-line 459, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n])), :doc "Optimized common case."}}, :require-macros {encore-macros taoensso.encore, taoensso.encore taoensso.encore}, :cljs.analyzer/constants {:seen #{:tick new-val every? nneg-int? x :min fn? vf :report :mem/all :get :backoff-ms :hash current-level :message* :type* timeout-ms :?content :else :keywordize :reset :protocol :unknown max-len valid-level? :method :pathname :xhr-pool-depleted :warn :msecs :trace map? :secs :mem/del kvs :months :params :days :type kf :mins :debug pred :hostname even? :search :cause* :abort % :http-error :headers :fatal :round or :host params nil? coll kw-identical? :mem/fresh :result :max :factor :swap :edn :raw-resp :info level :?content-type :hours :return-val :years :error :?status :exception keys :new-val :json :timeout :resp-type :ms :doc :xml count :auto opts :xhr :weeks :href return-val :timeout-ms :?error more :text coll?}, :order [:doc :type* :message* :cause* pred x :else :type :round :min :max :factor :years :months :weeks :days :hours :mins :secs :msecs :ms every? keys opts :new-val :return-val new-val return-val even? count more :swap :reset kvs :keywordize or coll? coll nil? kf fn? kw-identical? vf % map? max-len nneg-int? :mem/del :mem/all :mem/fresh :tick :backoff-ms :result :debug :trace :info :warn :error :fatal :report valid-level? current-level level :href :protocol :hostname :host :pathname :search :hash params :method :get :params :headers :timeout-ms :resp-type :auto timeout-ms :timeout :raw-resp :xhr :?content-type :?content :?status :?error :edn :json :xml :text :exception :http-error :abort :unknown :xhr-pool-depleted]}, :doc "The utils you want, in the package you deserve™.\n  Subset of the commonest Ensso utils w/o external dependencies."}